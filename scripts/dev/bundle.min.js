var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// node_modules/.pnpm/registry.npmmirror.com+sener-types@0.0.13/node_modules/sener-types/dist/sener-types.cjs.js
var require_sener_types_cjs = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+sener-types@0.0.13/node_modules/sener-types/dist/sener-types.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var fs = require("fs");
    var path = require("path");
    var os = require("os");
    function _interopDefaultLegacy(e) {
      return e && "object" == typeof e && "default" in e ? e : { default: e };
    }
    var fs__default = _interopDefaultLegacy(fs);
    var path__default = _interopDefaultLegacy(path);
    function _typeof(e) {
      return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
        return typeof e2;
      } : function(e2) {
        return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
      })(e);
    }
    function _classCallCheck(e, r) {
      if (!(e instanceof r))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e, r) {
      for (var t = 0; t < r.length; t++) {
        var n = r[t];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, _toPropertyKey(n.key), n);
      }
    }
    function _createClass(e, r, t) {
      return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _unsupportedIterableToArray(e, r) {
      var t;
      if (e)
        return "string" == typeof e ? _arrayLikeToArray(e, r) : "Map" === (t = "Object" === (t = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : t) || "Set" === t ? Array.from(e) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(e, r) : void 0;
    }
    function _arrayLikeToArray(e, r) {
      (null == r || r > e.length) && (r = e.length);
      for (var t = 0, n = new Array(r); t < r; t++)
        n[t] = e[t];
      return n;
    }
    function _createForOfIteratorHelper(e, r) {
      var t, n, o, a, i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
      if (i)
        return n = !(t = true), { s: function() {
          i = i.call(e);
        }, n: function() {
          var e2 = i.next();
          return t = e2.done, e2;
        }, e: function(e2) {
          n = true, o = e2;
        }, f: function() {
          try {
            t || null == i.return || i.return();
          } finally {
            if (n)
              throw o;
          }
        } };
      if (Array.isArray(e) || (i = _unsupportedIterableToArray(e)) || r && e && "number" == typeof e.length)
        return i && (e = i), a = 0, { s: r = function() {
        }, n: function() {
          return a >= e.length ? { done: true } : { done: false, value: e[a++] };
        }, e: function(e2) {
          throw e2;
        }, f: r };
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toPrimitive(e, r) {
      if ("object" != typeof e || null === e)
        return e;
      var t = e[Symbol.toPrimitive];
      if (void 0 === t)
        return ("string" === r ? String : Number)(e);
      t = t.call(e, r || "default");
      if ("object" != typeof t)
        return t;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    function _toPropertyKey(e) {
      e = _toPrimitive(e, "string");
      return "symbol" == typeof e ? e : String(e);
    }
    function parseUrlSearch() {
      var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", r = (e = decodeURIComponent(e)).indexOf("?");
      return -1 === r ? { url: e, search: "" } : { url: e.substring(0, r), search: e.substring(r + 1) };
    }
    function praseUrl() {
      var e = parseUrlSearch(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "");
      return { url: e.url, query: parseParam(e.search) };
    }
    function parseParam(e) {
      var r = {};
      if (e) {
        var t, n = _createForOfIteratorHelper(e.matchAll(/(.*?)=(.*?)(&|$)/g));
        try {
          for (n.s(); !(t = n.n()).done; ) {
            var o = t.value;
            r[o[1]] = o[2];
          }
        } catch (e2) {
          n.e(e2);
        } finally {
          n.f();
        }
      }
      return r;
    }
    function now() {
      return Date.now();
    }
    var IS_DEV = false;
    function makedir(e) {
      for (var r = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "777", t = (e = "/" + e.split("/").filter(function(e2) {
        return !!e2;
      }).join("/"), []); e && !fs__default.default.existsSync(e); )
        t.unshift(e), e = e.substring(0, e.lastIndexOf("/"));
      for (var n = 0, o = t; n < o.length; n++)
        fs__default.default.mkdirSync(o[n], r);
    }
    function uuid() {
      for (var e = [], r = "0123456789abcdef", t = 0; t < 36; t++)
        e[t] = r.substr(Math.floor(16 * Math.random()), 1);
      return e[14] = "4", e[19] = r.substr(3 & e[19] | 8, 1), e[8] = "-", e[13] = "-", e[18] = "-", e[23] = "-", e.join("");
    }
    function isJson(e) {
      return "object" === _typeof(e) && "Object" === e.constructor.name;
    }
    function dateToString() {
      var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, r = e.date, r = void 0 === r ? new Date() : r, t = e.type, t = void 0 === t ? "ms" : t, e = e.comm, e = void 0 === e ? ":" : e, n = "".concat(r.getFullYear(), "-").concat(fn(r.getMonth() + 1), "-").concat(fn(r.getDate()));
      return "date" === t || (n += " ".concat(fn(r.getHours())).concat(e).concat(fn(r.getMinutes())), "minute" === t) || (n += "".concat(e).concat(fn(r.getSeconds())), "second" === t) ? n : (r = (t = r.getMilliseconds()) < 100 ? "0".concat(fn(t)) : t, "".concat(n).concat(e).concat(r));
    }
    function fn(e) {
      return e < 10 ? "0".concat(e) : e;
    }
    function random(e, r) {
      return e + Math.round(Math.random() * (r - e));
    }
    function parseJson(e) {
      if ("object" === _typeof(e))
        return e;
      try {
        return JSON.parse(e);
      } catch (e2) {
        return null;
      }
    }
    function formatJson(e) {
      return 1 < arguments.length && void 0 !== arguments[1] && arguments[1] ? JSON.stringify(e, null, 4) : JSON.stringify(e);
    }
    function delay(r) {
      return new Promise(function(e) {
        setTimeout(e, r);
      });
    }
    var BASE_SENER_DIR = "";
    function buildSenerDir(e) {
      return BASE_SENER_DIR = BASE_SENER_DIR || path__default.default.resolve("".concat(os.homedir()), "./sener-data"), path__default.default.resolve(BASE_SENER_DIR, e);
    }
    var MiddleWare2 = function() {
      function e() {
        _classCallCheck(this, e), this.name = "";
      }
      return _createClass(e, [{ key: "enter", value: function(e2) {
      } }, { key: "request", value: function(e2) {
      } }, { key: "response", value: function(e2) {
      } }, { key: "helper", value: function() {
      } }]), e;
    }();
    var index = (exports.MiddleWareReturn = void 0, !function(e) {
      e.Continue = "Continue", e.Break = "Break", e.Return = "Return";
    }(exports.MiddleWareReturn || (exports.MiddleWareReturn = {})), "sener-types");
    exports.IS_DEV = IS_DEV, exports.MiddleWare = MiddleWare2, exports.buildSenerDir = buildSenerDir, exports.dateToString = dateToString, exports.default = index, exports.delay = delay, exports.formatJson = formatJson, exports.isJson = isJson, exports.makedir = makedir, exports.now = now, exports.parseJson = parseJson, exports.parseParam = parseParam, exports.parseUrlSearch = parseUrlSearch, exports.praseUrl = praseUrl, exports.random = random, exports.uuid = uuid;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+sener-log@0.0.13/node_modules/sener-log/dist/sener-log.cjs.js
var require_sener_log_cjs = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+sener-log@0.0.13/node_modules/sener-log/dist/sener-log.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var senerTypes = require_sener_types_cjs();
    var path = require("path");
    var fs = require("fs");
    function _interopDefaultLegacy(e) {
      return e && "object" == typeof e && "default" in e ? e : { default: e };
    }
    var path__default = _interopDefaultLegacy(path);
    var fs__default = _interopDefaultLegacy(fs);
    function _typeof(e) {
      return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
        return typeof e2;
      } : function(e2) {
        return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
      })(e);
    }
    function _classCallCheck(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, _toPropertyKey(n.key), n);
      }
    }
    function _createClass(e, t, r) {
      return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _inherits(e, t) {
      if ("function" != typeof t && null !== t)
        throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: true, configurable: true } }), Object.defineProperty(e, "prototype", { writable: false }), t && _setPrototypeOf(e, t);
    }
    function _getPrototypeOf(e) {
      return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e2) {
        return e2.__proto__ || Object.getPrototypeOf(e2);
      })(e);
    }
    function _setPrototypeOf(e, t) {
      return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e2, t2) {
        return e2.__proto__ = t2, e2;
      })(e, t);
    }
    function _isNativeReflectConstruct() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e) {
        return false;
      }
    }
    function _assertThisInitialized(e) {
      if (void 0 === e)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }
    function _possibleConstructorReturn(e, t) {
      if (t && ("object" == typeof t || "function" == typeof t))
        return t;
      if (void 0 !== t)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(e);
    }
    function _createSuper(r) {
      var n = _isNativeReflectConstruct();
      return function() {
        var e, t = _getPrototypeOf(r);
        return _possibleConstructorReturn(this, n ? (e = _getPrototypeOf(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments));
      };
    }
    function _toConsumableArray(e) {
      return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread();
    }
    function _arrayWithoutHoles(e) {
      if (Array.isArray(e))
        return _arrayLikeToArray(e);
    }
    function _iterableToArray(e) {
      if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
        return Array.from(e);
    }
    function _unsupportedIterableToArray(e, t) {
      var r;
      if (e)
        return "string" == typeof e ? _arrayLikeToArray(e, t) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : r) || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(e, t) : void 0;
    }
    function _arrayLikeToArray(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var r = 0, n = new Array(t); r < t; r++)
        n[r] = e[r];
      return n;
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _createForOfIteratorHelper(e, t) {
      var r, n, o, a, i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
      if (i)
        return n = !(r = true), { s: function() {
          i = i.call(e);
        }, n: function() {
          var e2 = i.next();
          return r = e2.done, e2;
        }, e: function(e2) {
          n = true, o = e2;
        }, f: function() {
          try {
            r || null == i.return || i.return();
          } finally {
            if (n)
              throw o;
          }
        } };
      if (Array.isArray(e) || (i = _unsupportedIterableToArray(e)) || t && e && "number" == typeof e.length)
        return i && (e = i), a = 0, { s: t = function() {
        }, n: function() {
          return a >= e.length ? { done: true } : { done: false, value: e[a++] };
        }, e: function(e2) {
          throw e2;
        }, f: t };
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toPrimitive(e, t) {
      if ("object" != typeof e || null === e)
        return e;
      var r = e[Symbol.toPrimitive];
      if (void 0 === r)
        return ("string" === t ? String : Number)(e);
      r = r.call(e, t || "default");
      if ("object" != typeof r)
        return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    function _toPropertyKey(e) {
      e = _toPrimitive(e, "string");
      return "symbol" == typeof e ? e : String(e);
    }
    var BaseInfo = function() {
      function t(e) {
        _classCallCheck(this, t), this.data = { traceid: "", host: "", url: "", ua: "" }, this.refreshTraceId(), e && this.injectBaseInfo(e);
      }
      return _createClass(t, [{ key: "refreshTraceId", value: function() {
        this.data.traceid = senerTypes.uuid(), this.refreshDurationStart();
      } }, { key: "refreshDurationStart", value: function() {
        this.durationStart = Date.now();
      } }, { key: "injectBaseInfo", value: function(e) {
        Object.assign(this.data, e);
      } }, { key: "appendBaseInfo", value: function(e) {
        var t2 = new Date().getTime(), r = senerTypes.dateToString({ type: "ms" }), n = t2 - this.durationStart, o = {};
        if (e.extend) {
          for (var a in e.extend)
            o["_".concat(a)] = e.extend[a];
          delete e.extend;
        }
        return Object.assign(e, this.data, { timestamp: t2, time: r, logid: senerTypes.uuid(), duration: n }, o);
      } }]), t;
    }();
    var BASE_DIR = senerTypes.buildSenerDir("log");
    var Saver = function() {
      function i(e) {
        var t = this, r = e.dir, n = e.maxRecords, n = void 0 === n ? 1e4 : n, o = e.interval, o = void 0 === o ? 5e3 : o, a = e.level;
        _classCallCheck(this, i), this.baseDir = BASE_DIR, this.maxRecords = -1, this.count = 0, this.fileName = "", this.filePath = "", this.content = "", r && (this.baseDir = path__default.default.resolve(BASE_DIR, r)), this.level = "number" == typeof a ? function() {
          return a;
        } : a, senerTypes.makedir(this.baseDir), console.log(this.baseDir), this.refreshFileName(), this.count = this.countLines(), n < 1e3 ? n = 1e3 : 1e5 < n && (n = 1e5), this.maxRecords = n, setInterval(function() {
          t.save();
        }, o);
      }
      return _createClass(i, [{ key: "save", value: function() {
        var e;
        this.content && (e = this.content, this.content = "", fs__default.default.appendFileSync(this.filePath, e, "utf-8"));
      } }, { key: "addContent", value: function(e) {
        return !((1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 5) < this.level() || (this.content += "".concat(e, "\n"), this.count++, this.count >= this.maxRecords && (this.save(), this.count = 0), 0));
      } }, { key: "refreshFileName", value: function() {
        this.fileName = "".concat(senerTypes.dateToString({ type: "ms", comm: "_" }), ".log"), this.filePath = path__default.default.resolve(this.baseDir, this.fileName);
      } }, { key: "countLines", value: function() {
        var e;
        return fs__default.default.existsSync(this.filePath) && (e = fs__default.default.readFileSync(this.filePath, "utf-8").match(/\n/g)) ? e.length + 1 : 0;
      } }]), i;
    }();
    function toLogString(e) {
      return "object" === _typeof(e) ? JSON.stringify(e) : e.toString();
    }
    var DefaultKeys = ["type", "msg", "payload", "traceid", "logid", "duration", "url", "ua"];
    function dataToLogString(r) {
      function e(e2) {
        var t2 = r[e2];
        void 0 !== t2 && "" !== t2 && (n += " ".concat(e2, "=").concat(toLogString(t2), ";"));
      }
      var t, n = "[".concat(r.time, "]"), o = Object.keys(r), a = (o.splice(o.indexOf("time"), 1), _createForOfIteratorHelper(DefaultKeys));
      try {
        for (a.s(); !(t = a.n()).done; ) {
          var i = t.value;
          e(i), o.splice(o.indexOf(i), 1);
        }
      } catch (e2) {
        a.e(e2);
      } finally {
        a.f();
      }
      for (var s = 0, u = o; s < u.length; s++)
        e(u[s]);
      return n;
    }
    var HEADER = "[TCLogger]:";
    function logBase(e, t) {
      var r = e[0];
      "string" == typeof r ? e[0] = HEADER + r : e.unshift(HEADER), (r = console)[t].apply(r, _toConsumableArray(e));
    }
    var TLog = { log: function() {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
      logBase(t, "log");
    }, warn: function() {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
      logBase(t, "warn");
    }, info: function() {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
      logBase(t, "info");
    }, error: function() {
      for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
        t[r] = arguments[r];
      logBase(t, "error");
    } };
    var Logger = function() {
      function a(e, t) {
        var r = e.dir, r = void 0 === r ? "" : r, n = e.useConsole, n = void 0 !== n && n, o = e.maxRecords, e = e.level, e = void 0 === e ? -1 : e;
        _classCallCheck(this, a), this.useConsole = false, a.saver || (a.saver = new Saver({ dir: r, maxRecords: o, level: e })), this.useConsole = n, this.base = new BaseInfo(t);
      }
      return _createClass(a, [{ key: "traceid", get: function() {
        return this.base.data.traceid;
      } }, { key: "log", value: function(e, t) {
        var t = "string" == typeof e ? { msg: e, payload: t, type: 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : "log" } : e, e = this.base.appendBaseInfo(t), r = dataToLogString(e);
        a.saver.addContent(r, e.level), this.useConsole && (TLog[t.type || "log"] || console.log)(r);
      } }, { key: "refreshDurationStart", value: function() {
        this.base.refreshDurationStart();
      } }, { key: "refreshTraceId", value: function() {
        this.base.refreshTraceId();
      } }]), a;
    }();
    var Log2 = function() {
      _inherits(n, senerTypes.MiddleWare);
      var r = _createSuper(n);
      function n() {
        var e, t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {};
        return _classCallCheck(this, n), (e = r.call(this)).loggerOptions = t, e;
      }
      return _createClass(n, [{ key: "enter", value: function(e) {
        var t = e.request.headers, r2 = { host: t.host, url: t.referer, ua: t["user-agent"] }, t = t["x-trace-id"];
        t && (r2.traceid = t), e.logger = new Logger(this.loggerOptions, r2);
      } }, { key: "response", value: function(e) {
        var t = e.response, e = e.logger;
        t.setHeader("x-trace-id", e.traceid);
      } }]), n;
    }();
    var logger = _createClass(function e() {
      _classCallCheck(this, e);
    });
    exports.Log = Log2, exports.Logger = Logger, exports.logger = logger;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+sener-config@0.0.13/node_modules/sener-config/dist/sener-config.cjs.js
var require_sener_config_cjs = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+sener-config@0.0.13/node_modules/sener-config/dist/sener-config.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var senerTypes = require_sener_types_cjs();
    var path = require("path");
    var fs = require("fs");
    var Event = require("events");
    function _interopDefaultLegacy(e) {
      return e && "object" == typeof e && "default" in e ? e : { default: e };
    }
    var path__default = _interopDefaultLegacy(path);
    var fs__default = _interopDefaultLegacy(fs);
    var Event__default = _interopDefaultLegacy(Event);
    function _typeof(e) {
      return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
        return typeof e2;
      } : function(e2) {
        return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
      })(e);
    }
    function _classCallCheck(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, _toPropertyKey(n.key), n);
      }
    }
    function _createClass(e, t, r) {
      return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _inherits(e, t) {
      if ("function" != typeof t && null !== t)
        throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: true, configurable: true } }), Object.defineProperty(e, "prototype", { writable: false }), t && _setPrototypeOf(e, t);
    }
    function _getPrototypeOf(e) {
      return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e2) {
        return e2.__proto__ || Object.getPrototypeOf(e2);
      })(e);
    }
    function _setPrototypeOf(e, t) {
      return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e2, t2) {
        return e2.__proto__ = t2, e2;
      })(e, t);
    }
    function _isNativeReflectConstruct() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e) {
        return false;
      }
    }
    function _assertThisInitialized(e) {
      if (void 0 === e)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }
    function _possibleConstructorReturn(e, t) {
      if (t && ("object" == typeof t || "function" == typeof t))
        return t;
      if (void 0 !== t)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(e);
    }
    function _createSuper(r) {
      var n = _isNativeReflectConstruct();
      return function() {
        var e, t = _getPrototypeOf(r);
        return _possibleConstructorReturn(this, n ? (e = _getPrototypeOf(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments));
      };
    }
    function _toPrimitive(e, t) {
      if ("object" != typeof e || null === e)
        return e;
      var r = e[Symbol.toPrimitive];
      if (void 0 === r)
        return ("string" === t ? String : Number)(e);
      r = r.call(e, t || "default");
      if ("object" != typeof r)
        return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    function _toPropertyKey(e) {
      e = _toPrimitive(e, "string");
      return "symbol" == typeof e ? e : String(e);
    }
    var BASE_DIR = senerTypes.buildSenerDir("config");
    var ConfigBase = function() {
      function n(e) {
        var t = e.dir, r = e.files, e = e.format, e = (_classCallCheck(this, n), this.baseDir = BASE_DIR, this.data = {}, this.dataProxy = {}, this.fileMap = "", this.format = false, this.format = e, this.event = new Event__default.default(), t && (this.baseDir = path__default.default.resolve(BASE_DIR, t)), senerTypes.makedir(this.baseDir), this.fileNameToPath("default"));
        fs__default.default.existsSync(e) || fs__default.default.writeFileSync(e, "{}", "utf-8"), this.initFiles(r);
      }
      return _createClass(n, [{ key: "isSingle", get: function() {
        return "string" == typeof this.fileMap;
      } }, { key: "fileNameToPath", value: function(e) {
        return path__default.default.join(this.baseDir, e + ".json");
      } }, { key: "initFiles", value: function(e) {
        var f = this;
        this.fileMap = 1 === e.length ? e[0] : {}, e.forEach(function(i) {
          var e2 = f.readConfigFile(i, true);
          if (!e2)
            throw new Error("Invalid JSON File ".concat(i));
          for (var o = Object.keys(e2), r = 0, n2 = o; r < n2.length; r++)
            !function() {
              var t = n2[r];
              if (t in f.data)
                throw new Error("JSON \u4E2D\u4E0D\u5141\u8BB8\u5B58\u5728\u91CD\u540D\u7684\u914D\u7F6E\u540D: ".concat(i, ".json key=").concat(t));
              f.isSingle || (f.fileMap[t] = i), f.data[t] = e2[t], f.dataProxy[t] = function(e3) {
                if (void 0 === e3)
                  return f.data[t];
                f.writeConfig(t, e3);
              };
            }();
          watchFileChange(f.fileNameToPath(i), function() {
            for (var e3 = f.readConfigFile(i), t = 0, r2 = o; t < r2.length; t++) {
              var n3 = r2[t];
              f.onNewValue(n3, e3[n3]);
            }
          });
        });
      } }, { key: "onNewValue", value: function(e, t) {
        return !!isValueChanged(this.data[e], t) && (this.event.emit("change", { key: e, value: t, prev: this.data[e] }), this.data[e] = t, true);
      } }, { key: "writeConfig", value: function(e, t) {
        var r = this.onNewValue(e, t);
        if (r) {
          var n2 = this.isSingle ? this.fileMap : this.fileMap[e];
          if ("string" != typeof n2)
            throw new Error("Can not find config file: key=".concat(e));
          var i = null, e = (this.isSingle ? i = this.data : (i = this.readConfigFile(n2))[e] = t, senerTypes.formatJson(i, this.format));
          fs__default.default.writeFileSync(this.fileNameToPath(n2), e, "utf-8");
        }
        return r;
      } }, { key: "readConfigFile", value: function(e) {
        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1], r = this.fileNameToPath(e);
        if (t && !fs__default.default.existsSync(r))
          throw new Error("\u914D\u7F6E\u6587\u4EF6\u4E0D\u5B58\u5728: ".concat(r));
        t = fs__default.default.readFileSync(r, "utf-8"), r = senerTypes.parseJson(t);
        if (r)
          return r;
        throw new Error("Invalid JSON File ".concat(e));
      } }]), n;
    }();
    function isValueChanged(e, t) {
      var r = _typeof(t);
      if (r !== _typeof(e))
        return true;
      if (t && "object" === r) {
        if (isJsonChanged(e, t))
          return true;
      } else if (e !== t)
        return true;
      return false;
    }
    function isJsonChanged(e, t) {
      for (var r in e) {
        var n = t[r], r = e[r];
        if (n && "object" === _typeof(n)) {
          if (isJsonChanged(r, n))
            return true;
        } else if (n !== r)
          return true;
      }
      return false;
    }
    function watchFileChange(e, t) {
      fs__default.default.watch(e, function() {
        t();
      });
    }
    var Config2 = function() {
      _inherits(o, senerTypes.MiddleWare);
      var i = _createSuper(o);
      function o() {
        var e, t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, r = t.dir, r = void 0 === r ? "" : r, n = t.file, n = void 0 === n ? "default" : n, t = t.format, t = void 0 === t ? senerTypes.IS_DEV : t;
        return _classCallCheck(this, o), (e = i.call(this)).config = new ConfigBase({ dir: r, files: "string" == typeof n ? [n] : n, format: t }), e;
      }
      return _createClass(o, [{ key: "data", get: function() {
        return this.config.dataProxy;
      } }, { key: "onConfigChange", value: function(e) {
        this.config.event.on("change", e);
      } }, { key: "writeConfig", value: function(e, t) {
        return this.config.writeConfig(e, t);
      } }, { key: "helper", value: function() {
        var r = this;
        return { config: this.config.dataProxy, writeConfig: function(e, t) {
          return r.writeConfig(e, t);
        }, onConfigChange: function(e) {
          r.onConfigChange(e);
        } };
      } }]), o;
    }();
    exports.Config = Config2, exports.ConfigBase = ConfigBase;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+sener-json@0.0.13/node_modules/sener-json/dist/sener-json.cjs.js
var require_sener_json_cjs = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+sener-json@0.0.13/node_modules/sener-json/dist/sener-json.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var fs = require("fs");
    var senerTypes = require_sener_types_cjs();
    var path = require("path");
    function _interopDefaultLegacy(e) {
      return e && "object" == typeof e && "default" in e ? e : { default: e };
    }
    var fs__default = _interopDefaultLegacy(fs);
    var path__default = _interopDefaultLegacy(path);
    function _classCallCheck(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, _toPropertyKey(n.key), n);
      }
    }
    function _createClass(e, t, r) {
      return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _inherits(e, t) {
      if ("function" != typeof t && null !== t)
        throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: true, configurable: true } }), Object.defineProperty(e, "prototype", { writable: false }), t && _setPrototypeOf(e, t);
    }
    function _getPrototypeOf(e) {
      return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e2) {
        return e2.__proto__ || Object.getPrototypeOf(e2);
      })(e);
    }
    function _setPrototypeOf(e, t) {
      return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e2, t2) {
        return e2.__proto__ = t2, e2;
      })(e, t);
    }
    function _isNativeReflectConstruct() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e) {
        return false;
      }
    }
    function _assertThisInitialized(e) {
      if (void 0 === e)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }
    function _possibleConstructorReturn(e, t) {
      if (t && ("object" == typeof t || "function" == typeof t))
        return t;
      if (void 0 !== t)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(e);
    }
    function _createSuper(r) {
      var n = _isNativeReflectConstruct();
      return function() {
        var e, t = _getPrototypeOf(r);
        return _possibleConstructorReturn(this, n ? (e = _getPrototypeOf(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments));
      };
    }
    function _unsupportedIterableToArray(e, t) {
      var r;
      if (e)
        return "string" == typeof e ? _arrayLikeToArray(e, t) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : r) || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(e, t) : void 0;
    }
    function _arrayLikeToArray(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var r = 0, n = new Array(t); r < t; r++)
        n[r] = e[r];
      return n;
    }
    function _createForOfIteratorHelper(e, t) {
      var r, n, i, a, o = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
      if (o)
        return n = !(r = true), { s: function() {
          o = o.call(e);
        }, n: function() {
          var e2 = o.next();
          return r = e2.done, e2;
        }, e: function(e2) {
          n = true, i = e2;
        }, f: function() {
          try {
            r || null == o.return || o.return();
          } finally {
            if (n)
              throw i;
          }
        } };
      if (Array.isArray(e) || (o = _unsupportedIterableToArray(e)) || t && e && "number" == typeof e.length)
        return o && (e = o), a = 0, { s: t = function() {
        }, n: function() {
          return a >= e.length ? { done: true } : { done: false, value: e[a++] };
        }, e: function(e2) {
          throw e2;
        }, f: t };
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toPrimitive(e, t) {
      if ("object" != typeof e || null === e)
        return e;
      var r = e[Symbol.toPrimitive];
      if (void 0 === r)
        return ("string" === t ? String : Number)(e);
      r = r.call(e, t || "default");
      if ("object" != typeof r)
        return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    function _toPropertyKey(e) {
      e = _toPrimitive(e, "string");
      return "symbol" == typeof e ? e : String(e);
    }
    var SyncFile = function() {
      function n(e, t) {
        var r = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
        _classCallCheck(this, n), this.format = false, this.format = r, this.key = e, this.path = t, this.dir = this.path.substring(0, this.path.lastIndexOf("/") + 1), this.isDirExist = fs__default.default.existsSync(this.dir), this.isFileExist = this.isDirExist && fs__default.default.existsSync(this.path);
      }
      return _createClass(n, [{ key: "readPure", value: function() {
        if (!this.isFileExist)
          return this.generateDefaultData();
        try {
          var e = fs__default.default.readFileSync(this.path, "utf8");
          return JSON.parse(e);
        } catch (e2) {
          return this.generateDefaultData();
        }
      } }, { key: "generateId", value: function(e) {
        return ++e.id;
      } }, { key: "generateDefaultData", value: function() {
        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [], t = senerTypes.now();
        return { key: this.key, data: e, id: 0, count: 0, lastUpdateTime: t, createTime: t, map: {} };
      } }, { key: "updateInfo", value: function(e) {
        e.lastUpdateTime = senerTypes.now(), e.count = e.data.length;
      } }, { key: "writePure", value: function(e) {
        this.isDirExist || (senerTypes.makedir(this.dir), this.isDirExist = true), this.updateInfo(e);
        try {
          var t = this.format ? JSON.stringify(e, null, 2) : JSON.stringify(e);
          fs__default.default.writeFileSync(this.path, t, "utf8");
        } catch (e2) {
          return false;
        }
        return this.isFileExist || (this.isFileExist = true), true;
      } }, { key: "oprateSync", value: function(e) {
        var t = this, r = this.readPure();
        return r.data = e(r.data, function() {
          return t.generateId(r);
        }), this.writePure(r);
      } }]), n;
    }();
    var File = function() {
      _inherits(i, SyncFile);
      var n = _createSuper(i);
      function i(e, t) {
        var r = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
        return _classCallCheck(this, i), (e = n.call(this, e, t, r)).opratingCount = 0, e.timer = null, e.readTimer = null, e;
      }
      return _createClass(i, [{ key: "read", value: function() {
        var e = this;
        if (this.template)
          return this.template;
        0 < arguments.length && void 0 !== arguments[0] && arguments[0] || (this.readTimer && clearTimeout(this.readTimer), this.readTimer = setTimeout(function() {
          e.opratingCount <= 0 && (e.template = null), e.readTimer = null;
        }, 1e3));
        var t = this.readPure();
        return this.template = t;
      } }, { key: "write", value: function(e) {
        var t = e || this.template;
        return !!t && !!this.writePure(t) && (!e && this.opratingCount <= 0 && (this.template = null), true);
      } }, { key: "oprate", value: function() {
        function n2() {
          return t.opratingCount--, 0 < t.opratingCount || t.write();
        }
        var t = this, i2 = (this.opratingCount < 0 && (this.opratingCount = 0), this.opratingCount++, this.read(true)), a = setTimeout(n2, 5e3), e = 0;
        return { data: i2.data, map: i2.map, save: function() {
          var e2 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t2 = e2.data, r = e2.map, e2 = e2.imme, e2 = void 0 !== e2 && e2;
          return clearTimeout(a), t2 instanceof Array && (i2.data = t2), r && (i2.map = r), e2 ? n2() : new Promise(function(e3) {
            setTimeout(function() {
              e3(n2());
            }, 500);
          });
        }, clear: function(e2) {
          return clearTimeout(a), t.opratingCount--, e2;
        }, id: function() {
          return t.generateId(i2);
        }, index: function() {
          return e++;
        } };
      } }]), i;
    }();
    var BASE_DIR = senerTypes.buildSenerDir("json");
    var JsonManager = function() {
      function t() {
        var r = this, e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", n = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        _classCallCheck(this, t), this.files = {}, this.baseDir = BASE_DIR, this.format = false, e && (this.baseDir = path__default.default.resolve(BASE_DIR, e)), this.format = n, senerTypes.makedir(this.baseDir), traverse(this.baseDir, function(e2) {
          var t2 = r.extractKey(e2);
          r.files[t2] = new File(t2, e2, n);
        });
      }
      return _createClass(t, [{ key: "write", value: function(e) {
        return this.file(e).oprate();
      } }, { key: "file", value: function(e) {
        return this.files[e] || (this.files[e] = new File(e, this.keyToPath(e), this.format)), this.files[e];
      } }, { key: "read", value: function(e) {
        return this.file(e).read().data;
      } }, { key: "readMap", value: function(e) {
        return this.file(e).read().map;
      } }, { key: "extractKey", value: function(e) {
        return e.substring(this.baseDir.length + 1, e.length - 5);
      } }, { key: "keyToPath", value: function(e) {
        return path__default.default.resolve(this.baseDir, "./".concat(e, ".json"));
      } }]), t;
    }();
    function traverse(e, t) {
      var r, n = _createForOfIteratorHelper(fs.readdirSync(e));
      try {
        for (n.s(); !(r = n.n()).done; ) {
          var i = r.value;
          i.endsWith(".json") ? t(path__default.default.resolve(e, i)) : traverse(path__default.default.resolve(e, i), t);
        }
      } catch (e2) {
        n.e(e2);
      } finally {
        n.f();
      }
    }
    var Json2 = function() {
      _inherits(i, senerTypes.MiddleWare);
      var n = _createSuper(i);
      function i() {
        var e, t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, r = t.dir, t = t.format, t = void 0 === t ? senerTypes.IS_DEV : t;
        return _classCallCheck(this, i), (e = n.call(this)).json = new JsonManager(r, t), e;
      }
      return _createClass(i, [{ key: "helper", value: function() {
        var t = this;
        return { file: function(e) {
          return t.json.file(e);
        }, write: function(e) {
          return t.json.write(e);
        }, read: function(e) {
          return t.json.read(e);
        }, readMap: function(e) {
          return t.json.readMap(e);
        } };
      } }]), i;
    }();
    var index = { Json: Json2, JsonManager, SyncFile, File };
    exports.File = File, exports.Json = Json2, exports.JsonManager = JsonManager, exports.SyncFile = SyncFile, exports.default = index;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/PersistentFile.js
var require_PersistentFile = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/PersistentFile.js"(exports, module2) {
    "use strict";
    var fs = require("fs");
    var crypto = require("crypto");
    var { EventEmitter } = require("events");
    var PersistentFile = class extends EventEmitter {
      constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm }) {
        super();
        this.lastModifiedDate = null;
        Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm });
        this.size = 0;
        this._writeStream = null;
        if (typeof this.hashAlgorithm === "string") {
          this.hash = crypto.createHash(this.hashAlgorithm);
        } else {
          this.hash = null;
        }
      }
      open() {
        this._writeStream = new fs.WriteStream(this.filepath);
        this._writeStream.on("error", (err) => {
          this.emit("error", err);
        });
      }
      toJSON() {
        const json = {
          size: this.size,
          filepath: this.filepath,
          newFilename: this.newFilename,
          mimetype: this.mimetype,
          mtime: this.lastModifiedDate,
          length: this.length,
          originalFilename: this.originalFilename
        };
        if (this.hash && this.hash !== "") {
          json.hash = this.hash;
        }
        return json;
      }
      toString() {
        return `PersistentFile: ${this.newFilename}, Original: ${this.originalFilename}, Path: ${this.filepath}`;
      }
      write(buffer, cb) {
        if (this.hash) {
          this.hash.update(buffer);
        }
        if (this._writeStream.closed) {
          cb();
          return;
        }
        this._writeStream.write(buffer, () => {
          this.lastModifiedDate = new Date();
          this.size += buffer.length;
          this.emit("progress", this.size);
          cb();
        });
      }
      end(cb) {
        if (this.hash) {
          this.hash = this.hash.digest("hex");
        }
        this._writeStream.end(() => {
          this.emit("end");
          cb();
        });
      }
      destroy() {
        this._writeStream.destroy();
        fs.unlink(this.filepath, () => {
        });
      }
    };
    module2.exports = PersistentFile;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/VolatileFile.js
var require_VolatileFile = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/VolatileFile.js"(exports, module2) {
    "use strict";
    var crypto = require("crypto");
    var { EventEmitter } = require("events");
    var VolatileFile = class extends EventEmitter {
      constructor({ filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream }) {
        super();
        this.lastModifiedDate = null;
        Object.assign(this, { filepath, newFilename, originalFilename, mimetype, hashAlgorithm, createFileWriteStream });
        this.size = 0;
        this._writeStream = null;
        if (typeof this.hashAlgorithm === "string") {
          this.hash = crypto.createHash(this.hashAlgorithm);
        } else {
          this.hash = null;
        }
      }
      open() {
        this._writeStream = this.createFileWriteStream(this);
        this._writeStream.on("error", (err) => {
          this.emit("error", err);
        });
      }
      destroy() {
        this._writeStream.destroy();
      }
      toJSON() {
        const json = {
          size: this.size,
          newFilename: this.newFilename,
          length: this.length,
          originalFilename: this.originalFilename,
          mimetype: this.mimetype
        };
        if (this.hash && this.hash !== "") {
          json.hash = this.hash;
        }
        return json;
      }
      toString() {
        return `VolatileFile: ${this.originalFilename}`;
      }
      write(buffer, cb) {
        if (this.hash) {
          this.hash.update(buffer);
        }
        if (this._writeStream.closed || this._writeStream.destroyed) {
          cb();
          return;
        }
        this._writeStream.write(buffer, () => {
          this.size += buffer.length;
          this.emit("progress", this.size);
          cb();
        });
      }
      end(cb) {
        if (this.hash) {
          this.hash = this.hash.digest("hex");
        }
        this._writeStream.end(() => {
          this.emit("end");
          cb();
        });
      }
    };
    module2.exports = VolatileFile;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+hexoid@1.0.0/node_modules/hexoid/dist/index.js
var require_dist = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+hexoid@1.0.0/node_modules/hexoid/dist/index.js"(exports, module2) {
    var IDX = 256;
    var HEX = [];
    while (IDX--)
      HEX[IDX] = (IDX + 256).toString(16).substring(1);
    module2.exports = function(len) {
      len = len || 16;
      var str = "", num = 0;
      return function() {
        if (!str || num === 256) {
          str = "";
          num = (1 + len) / 2 | 0;
          while (num--)
            str += HEX[256 * Math.random() | 0];
          str = str.substring(num = 0, len - 2);
        }
        return str + HEX[num++];
      };
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+wrappy@1.0.2/node_modules/wrappy/wrappy.js
var require_wrappy = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+wrappy@1.0.2/node_modules/wrappy/wrappy.js"(exports, module2) {
    module2.exports = wrappy;
    function wrappy(fn, cb) {
      if (fn && cb)
        return wrappy(fn)(cb);
      if (typeof fn !== "function")
        throw new TypeError("need wrapper function");
      Object.keys(fn).forEach(function(k) {
        wrapper[k] = fn[k];
      });
      return wrapper;
      function wrapper() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        var ret = fn.apply(this, args);
        var cb2 = args[args.length - 1];
        if (typeof ret === "function" && ret !== cb2) {
          Object.keys(cb2).forEach(function(k) {
            ret[k] = cb2[k];
          });
        }
        return ret;
      }
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+once@1.4.0/node_modules/once/once.js
var require_once = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+once@1.4.0/node_modules/once/once.js"(exports, module2) {
    var wrappy = require_wrappy();
    module2.exports = wrappy(once);
    module2.exports.strict = wrappy(onceStrict);
    once.proto = once(function() {
      Object.defineProperty(Function.prototype, "once", {
        value: function() {
          return once(this);
        },
        configurable: true
      });
      Object.defineProperty(Function.prototype, "onceStrict", {
        value: function() {
          return onceStrict(this);
        },
        configurable: true
      });
    });
    function once(fn) {
      var f = function() {
        if (f.called)
          return f.value;
        f.called = true;
        return f.value = fn.apply(this, arguments);
      };
      f.called = false;
      return f;
    }
    function onceStrict(fn) {
      var f = function() {
        if (f.called)
          throw new Error(f.onceError);
        f.called = true;
        return f.value = fn.apply(this, arguments);
      };
      var name = fn.name || "Function wrapped with `once`";
      f.onceError = name + " shouldn't be called more than once";
      f.called = false;
      return f;
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+asap@2.0.6/node_modules/asap/raw.js
var require_raw = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+asap@2.0.6/node_modules/asap/raw.js"(exports, module2) {
    "use strict";
    var domain;
    var hasSetImmediate = typeof setImmediate === "function";
    module2.exports = rawAsap;
    function rawAsap(task) {
      if (!queue.length) {
        requestFlush();
        flushing = true;
      }
      queue[queue.length] = task;
    }
    var queue = [];
    var flushing = false;
    var index = 0;
    var capacity = 1024;
    function flush() {
      while (index < queue.length) {
        var currentIndex = index;
        index = index + 1;
        queue[currentIndex].call();
        if (index > capacity) {
          for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {
            queue[scan] = queue[scan + index];
          }
          queue.length -= index;
          index = 0;
        }
      }
      queue.length = 0;
      index = 0;
      flushing = false;
    }
    rawAsap.requestFlush = requestFlush;
    function requestFlush() {
      var parentDomain = process.domain;
      if (parentDomain) {
        if (!domain) {
          domain = require("domain");
        }
        domain.active = process.domain = null;
      }
      if (flushing && hasSetImmediate) {
        setImmediate(flush);
      } else {
        process.nextTick(flush);
      }
      if (parentDomain) {
        domain.active = process.domain = parentDomain;
      }
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+asap@2.0.6/node_modules/asap/asap.js
var require_asap = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+asap@2.0.6/node_modules/asap/asap.js"(exports, module2) {
    "use strict";
    var rawAsap = require_raw();
    var freeTasks = [];
    module2.exports = asap;
    function asap(task) {
      var rawTask;
      if (freeTasks.length) {
        rawTask = freeTasks.pop();
      } else {
        rawTask = new RawTask();
      }
      rawTask.task = task;
      rawTask.domain = process.domain;
      rawAsap(rawTask);
    }
    function RawTask() {
      this.task = null;
      this.domain = null;
    }
    RawTask.prototype.call = function() {
      if (this.domain) {
        this.domain.enter();
      }
      var threw = true;
      try {
        this.task.call();
        threw = false;
        if (this.domain) {
          this.domain.exit();
        }
      } finally {
        if (threw) {
          rawAsap.requestFlush();
        }
        this.task = null;
        this.domain = null;
        freeTasks.push(this);
      }
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+dezalgo@1.0.4/node_modules/dezalgo/dezalgo.js
var require_dezalgo = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+dezalgo@1.0.4/node_modules/dezalgo/dezalgo.js"(exports, module2) {
    var wrappy = require_wrappy();
    module2.exports = wrappy(dezalgo);
    var asap = require_asap();
    function dezalgo(cb) {
      var sync = true;
      asap(function() {
        sync = false;
      });
      return function zalgoSafe() {
        var args = arguments;
        var me = this;
        if (sync)
          asap(function() {
            cb.apply(me, args);
          });
        else
          cb.apply(me, args);
      };
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+has-symbols@1.0.3/node_modules/has-symbols/shams.js
var require_shams = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+has-symbols@1.0.3/node_modules/has-symbols/shams.js"(exports, module2) {
    "use strict";
    module2.exports = function hasSymbols() {
      if (typeof Symbol !== "function" || typeof Object.getOwnPropertySymbols !== "function") {
        return false;
      }
      if (typeof Symbol.iterator === "symbol") {
        return true;
      }
      var obj = {};
      var sym = Symbol("test");
      var symObj = Object(sym);
      if (typeof sym === "string") {
        return false;
      }
      if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
        return false;
      }
      if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
        return false;
      }
      var symVal = 42;
      obj[sym] = symVal;
      for (sym in obj) {
        return false;
      }
      if (typeof Object.keys === "function" && Object.keys(obj).length !== 0) {
        return false;
      }
      if (typeof Object.getOwnPropertyNames === "function" && Object.getOwnPropertyNames(obj).length !== 0) {
        return false;
      }
      var syms = Object.getOwnPropertySymbols(obj);
      if (syms.length !== 1 || syms[0] !== sym) {
        return false;
      }
      if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
        return false;
      }
      if (typeof Object.getOwnPropertyDescriptor === "function") {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+has-symbols@1.0.3/node_modules/has-symbols/index.js
var require_has_symbols = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+has-symbols@1.0.3/node_modules/has-symbols/index.js"(exports, module2) {
    "use strict";
    var origSymbol = typeof Symbol !== "undefined" && Symbol;
    var hasSymbolSham = require_shams();
    module2.exports = function hasNativeSymbols() {
      if (typeof origSymbol !== "function") {
        return false;
      }
      if (typeof Symbol !== "function") {
        return false;
      }
      if (typeof origSymbol("foo") !== "symbol") {
        return false;
      }
      if (typeof Symbol("bar") !== "symbol") {
        return false;
      }
      return hasSymbolSham();
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+function-bind@1.1.1/node_modules/function-bind/implementation.js
var require_implementation = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+function-bind@1.1.1/node_modules/function-bind/implementation.js"(exports, module2) {
    "use strict";
    var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
    var slice = Array.prototype.slice;
    var toStr = Object.prototype.toString;
    var funcType = "[object Function]";
    module2.exports = function bind(that) {
      var target = this;
      if (typeof target !== "function" || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
      }
      var args = slice.call(arguments, 1);
      var bound;
      var binder = function() {
        if (this instanceof bound) {
          var result = target.apply(
            this,
            args.concat(slice.call(arguments))
          );
          if (Object(result) === result) {
            return result;
          }
          return this;
        } else {
          return target.apply(
            that,
            args.concat(slice.call(arguments))
          );
        }
      };
      var boundLength = Math.max(0, target.length - args.length);
      var boundArgs = [];
      for (var i = 0; i < boundLength; i++) {
        boundArgs.push("$" + i);
      }
      bound = Function("binder", "return function (" + boundArgs.join(",") + "){ return binder.apply(this,arguments); }")(binder);
      if (target.prototype) {
        var Empty = function Empty2() {
        };
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
      }
      return bound;
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+function-bind@1.1.1/node_modules/function-bind/index.js
var require_function_bind = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+function-bind@1.1.1/node_modules/function-bind/index.js"(exports, module2) {
    "use strict";
    var implementation = require_implementation();
    module2.exports = Function.prototype.bind || implementation;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+has@1.0.3/node_modules/has/src/index.js
var require_src = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+has@1.0.3/node_modules/has/src/index.js"(exports, module2) {
    "use strict";
    var bind = require_function_bind();
    module2.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
  }
});

// node_modules/.pnpm/registry.npmmirror.com+get-intrinsic@1.2.0/node_modules/get-intrinsic/index.js
var require_get_intrinsic = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+get-intrinsic@1.2.0/node_modules/get-intrinsic/index.js"(exports, module2) {
    "use strict";
    var undefined2;
    var $SyntaxError = SyntaxError;
    var $Function = Function;
    var $TypeError = TypeError;
    var getEvalledConstructor = function(expressionSyntax) {
      try {
        return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
      } catch (e) {
      }
    };
    var $gOPD = Object.getOwnPropertyDescriptor;
    if ($gOPD) {
      try {
        $gOPD({}, "");
      } catch (e) {
        $gOPD = null;
      }
    }
    var throwTypeError = function() {
      throw new $TypeError();
    };
    var ThrowTypeError = $gOPD ? function() {
      try {
        arguments.callee;
        return throwTypeError;
      } catch (calleeThrows) {
        try {
          return $gOPD(arguments, "callee").get;
        } catch (gOPDthrows) {
          return throwTypeError;
        }
      }
    }() : throwTypeError;
    var hasSymbols = require_has_symbols()();
    var getProto = Object.getPrototypeOf || function(x) {
      return x.__proto__;
    };
    var needsEval = {};
    var TypedArray = typeof Uint8Array === "undefined" ? undefined2 : getProto(Uint8Array);
    var INTRINSICS = {
      "%AggregateError%": typeof AggregateError === "undefined" ? undefined2 : AggregateError,
      "%Array%": Array,
      "%ArrayBuffer%": typeof ArrayBuffer === "undefined" ? undefined2 : ArrayBuffer,
      "%ArrayIteratorPrototype%": hasSymbols ? getProto([][Symbol.iterator]()) : undefined2,
      "%AsyncFromSyncIteratorPrototype%": undefined2,
      "%AsyncFunction%": needsEval,
      "%AsyncGenerator%": needsEval,
      "%AsyncGeneratorFunction%": needsEval,
      "%AsyncIteratorPrototype%": needsEval,
      "%Atomics%": typeof Atomics === "undefined" ? undefined2 : Atomics,
      "%BigInt%": typeof BigInt === "undefined" ? undefined2 : BigInt,
      "%BigInt64Array%": typeof BigInt64Array === "undefined" ? undefined2 : BigInt64Array,
      "%BigUint64Array%": typeof BigUint64Array === "undefined" ? undefined2 : BigUint64Array,
      "%Boolean%": Boolean,
      "%DataView%": typeof DataView === "undefined" ? undefined2 : DataView,
      "%Date%": Date,
      "%decodeURI%": decodeURI,
      "%decodeURIComponent%": decodeURIComponent,
      "%encodeURI%": encodeURI,
      "%encodeURIComponent%": encodeURIComponent,
      "%Error%": Error,
      "%eval%": eval,
      "%EvalError%": EvalError,
      "%Float32Array%": typeof Float32Array === "undefined" ? undefined2 : Float32Array,
      "%Float64Array%": typeof Float64Array === "undefined" ? undefined2 : Float64Array,
      "%FinalizationRegistry%": typeof FinalizationRegistry === "undefined" ? undefined2 : FinalizationRegistry,
      "%Function%": $Function,
      "%GeneratorFunction%": needsEval,
      "%Int8Array%": typeof Int8Array === "undefined" ? undefined2 : Int8Array,
      "%Int16Array%": typeof Int16Array === "undefined" ? undefined2 : Int16Array,
      "%Int32Array%": typeof Int32Array === "undefined" ? undefined2 : Int32Array,
      "%isFinite%": isFinite,
      "%isNaN%": isNaN,
      "%IteratorPrototype%": hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined2,
      "%JSON%": typeof JSON === "object" ? JSON : undefined2,
      "%Map%": typeof Map === "undefined" ? undefined2 : Map,
      "%MapIteratorPrototype%": typeof Map === "undefined" || !hasSymbols ? undefined2 : getProto((/* @__PURE__ */ new Map())[Symbol.iterator]()),
      "%Math%": Math,
      "%Number%": Number,
      "%Object%": Object,
      "%parseFloat%": parseFloat,
      "%parseInt%": parseInt,
      "%Promise%": typeof Promise === "undefined" ? undefined2 : Promise,
      "%Proxy%": typeof Proxy === "undefined" ? undefined2 : Proxy,
      "%RangeError%": RangeError,
      "%ReferenceError%": ReferenceError,
      "%Reflect%": typeof Reflect === "undefined" ? undefined2 : Reflect,
      "%RegExp%": RegExp,
      "%Set%": typeof Set === "undefined" ? undefined2 : Set,
      "%SetIteratorPrototype%": typeof Set === "undefined" || !hasSymbols ? undefined2 : getProto((/* @__PURE__ */ new Set())[Symbol.iterator]()),
      "%SharedArrayBuffer%": typeof SharedArrayBuffer === "undefined" ? undefined2 : SharedArrayBuffer,
      "%String%": String,
      "%StringIteratorPrototype%": hasSymbols ? getProto(""[Symbol.iterator]()) : undefined2,
      "%Symbol%": hasSymbols ? Symbol : undefined2,
      "%SyntaxError%": $SyntaxError,
      "%ThrowTypeError%": ThrowTypeError,
      "%TypedArray%": TypedArray,
      "%TypeError%": $TypeError,
      "%Uint8Array%": typeof Uint8Array === "undefined" ? undefined2 : Uint8Array,
      "%Uint8ClampedArray%": typeof Uint8ClampedArray === "undefined" ? undefined2 : Uint8ClampedArray,
      "%Uint16Array%": typeof Uint16Array === "undefined" ? undefined2 : Uint16Array,
      "%Uint32Array%": typeof Uint32Array === "undefined" ? undefined2 : Uint32Array,
      "%URIError%": URIError,
      "%WeakMap%": typeof WeakMap === "undefined" ? undefined2 : WeakMap,
      "%WeakRef%": typeof WeakRef === "undefined" ? undefined2 : WeakRef,
      "%WeakSet%": typeof WeakSet === "undefined" ? undefined2 : WeakSet
    };
    try {
      null.error;
    } catch (e) {
      errorProto = getProto(getProto(e));
      INTRINSICS["%Error.prototype%"] = errorProto;
    }
    var errorProto;
    var doEval = function doEval2(name) {
      var value;
      if (name === "%AsyncFunction%") {
        value = getEvalledConstructor("async function () {}");
      } else if (name === "%GeneratorFunction%") {
        value = getEvalledConstructor("function* () {}");
      } else if (name === "%AsyncGeneratorFunction%") {
        value = getEvalledConstructor("async function* () {}");
      } else if (name === "%AsyncGenerator%") {
        var fn = doEval2("%AsyncGeneratorFunction%");
        if (fn) {
          value = fn.prototype;
        }
      } else if (name === "%AsyncIteratorPrototype%") {
        var gen = doEval2("%AsyncGenerator%");
        if (gen) {
          value = getProto(gen.prototype);
        }
      }
      INTRINSICS[name] = value;
      return value;
    };
    var LEGACY_ALIASES = {
      "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
      "%ArrayPrototype%": ["Array", "prototype"],
      "%ArrayProto_entries%": ["Array", "prototype", "entries"],
      "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
      "%ArrayProto_keys%": ["Array", "prototype", "keys"],
      "%ArrayProto_values%": ["Array", "prototype", "values"],
      "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
      "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
      "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
      "%BooleanPrototype%": ["Boolean", "prototype"],
      "%DataViewPrototype%": ["DataView", "prototype"],
      "%DatePrototype%": ["Date", "prototype"],
      "%ErrorPrototype%": ["Error", "prototype"],
      "%EvalErrorPrototype%": ["EvalError", "prototype"],
      "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
      "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
      "%FunctionPrototype%": ["Function", "prototype"],
      "%Generator%": ["GeneratorFunction", "prototype"],
      "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
      "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
      "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
      "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
      "%JSONParse%": ["JSON", "parse"],
      "%JSONStringify%": ["JSON", "stringify"],
      "%MapPrototype%": ["Map", "prototype"],
      "%NumberPrototype%": ["Number", "prototype"],
      "%ObjectPrototype%": ["Object", "prototype"],
      "%ObjProto_toString%": ["Object", "prototype", "toString"],
      "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
      "%PromisePrototype%": ["Promise", "prototype"],
      "%PromiseProto_then%": ["Promise", "prototype", "then"],
      "%Promise_all%": ["Promise", "all"],
      "%Promise_reject%": ["Promise", "reject"],
      "%Promise_resolve%": ["Promise", "resolve"],
      "%RangeErrorPrototype%": ["RangeError", "prototype"],
      "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
      "%RegExpPrototype%": ["RegExp", "prototype"],
      "%SetPrototype%": ["Set", "prototype"],
      "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
      "%StringPrototype%": ["String", "prototype"],
      "%SymbolPrototype%": ["Symbol", "prototype"],
      "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
      "%TypedArrayPrototype%": ["TypedArray", "prototype"],
      "%TypeErrorPrototype%": ["TypeError", "prototype"],
      "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
      "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
      "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
      "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
      "%URIErrorPrototype%": ["URIError", "prototype"],
      "%WeakMapPrototype%": ["WeakMap", "prototype"],
      "%WeakSetPrototype%": ["WeakSet", "prototype"]
    };
    var bind = require_function_bind();
    var hasOwn = require_src();
    var $concat = bind.call(Function.call, Array.prototype.concat);
    var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
    var $replace = bind.call(Function.call, String.prototype.replace);
    var $strSlice = bind.call(Function.call, String.prototype.slice);
    var $exec = bind.call(Function.call, RegExp.prototype.exec);
    var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = function stringToPath2(string) {
      var first = $strSlice(string, 0, 1);
      var last = $strSlice(string, -1);
      if (first === "%" && last !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");
      } else if (last === "%" && first !== "%") {
        throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");
      }
      var result = [];
      $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match;
      });
      return result;
    };
    var getBaseIntrinsic = function getBaseIntrinsic2(name, allowMissing) {
      var intrinsicName = name;
      var alias;
      if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = "%" + alias[0] + "%";
      }
      if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) {
          value = doEval(intrinsicName);
        }
        if (typeof value === "undefined" && !allowMissing) {
          throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
        }
        return {
          alias,
          name: intrinsicName,
          value
        };
      }
      throw new $SyntaxError("intrinsic " + name + " does not exist!");
    };
    module2.exports = function GetIntrinsic(name, allowMissing) {
      if (typeof name !== "string" || name.length === 0) {
        throw new $TypeError("intrinsic name must be a non-empty string");
      }
      if (arguments.length > 1 && typeof allowMissing !== "boolean") {
        throw new $TypeError('"allowMissing" argument must be a boolean');
      }
      if ($exec(/^%?[^%]*%?$/, name) === null) {
        throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
      }
      var parts = stringToPath(name);
      var intrinsicBaseName = parts.length > 0 ? parts[0] : "";
      var intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing);
      var intrinsicRealName = intrinsic.name;
      var value = intrinsic.value;
      var skipFurtherCaching = false;
      var alias = intrinsic.alias;
      if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([0, 1], alias));
      }
      for (var i = 1, isOwn = true; i < parts.length; i += 1) {
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === "`" || (last === '"' || last === "'" || last === "`")) && first !== last) {
          throw new $SyntaxError("property names with quotes must have matching quotes");
        }
        if (part === "constructor" || !isOwn) {
          skipFurtherCaching = true;
        }
        intrinsicBaseName += "." + part;
        intrinsicRealName = "%" + intrinsicBaseName + "%";
        if (hasOwn(INTRINSICS, intrinsicRealName)) {
          value = INTRINSICS[intrinsicRealName];
        } else if (value != null) {
          if (!(part in value)) {
            if (!allowMissing) {
              throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
            }
            return void 0;
          }
          if ($gOPD && i + 1 >= parts.length) {
            var desc = $gOPD(value, part);
            isOwn = !!desc;
            if (isOwn && "get" in desc && !("originalValue" in desc.get)) {
              value = desc.get;
            } else {
              value = value[part];
            }
          } else {
            isOwn = hasOwn(value, part);
            value = value[part];
          }
          if (isOwn && !skipFurtherCaching) {
            INTRINSICS[intrinsicRealName] = value;
          }
        }
      }
      return value;
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+call-bind@1.0.2/node_modules/call-bind/index.js
var require_call_bind = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+call-bind@1.0.2/node_modules/call-bind/index.js"(exports, module2) {
    "use strict";
    var bind = require_function_bind();
    var GetIntrinsic = require_get_intrinsic();
    var $apply = GetIntrinsic("%Function.prototype.apply%");
    var $call = GetIntrinsic("%Function.prototype.call%");
    var $reflectApply = GetIntrinsic("%Reflect.apply%", true) || bind.call($call, $apply);
    var $gOPD = GetIntrinsic("%Object.getOwnPropertyDescriptor%", true);
    var $defineProperty = GetIntrinsic("%Object.defineProperty%", true);
    var $max = GetIntrinsic("%Math.max%");
    if ($defineProperty) {
      try {
        $defineProperty({}, "a", { value: 1 });
      } catch (e) {
        $defineProperty = null;
      }
    }
    module2.exports = function callBind(originalFunction) {
      var func = $reflectApply(bind, $call, arguments);
      if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, "length");
        if (desc.configurable) {
          $defineProperty(
            func,
            "length",
            { value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
          );
        }
      }
      return func;
    };
    var applyBind = function applyBind2() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module2.exports, "apply", { value: applyBind });
    } else {
      module2.exports.apply = applyBind;
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+call-bind@1.0.2/node_modules/call-bind/callBound.js
var require_callBound = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+call-bind@1.0.2/node_modules/call-bind/callBound.js"(exports, module2) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBind = require_call_bind();
    var $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
    module2.exports = function callBoundIntrinsic(name, allowMissing) {
      var intrinsic = GetIntrinsic(name, !!allowMissing);
      if (typeof intrinsic === "function" && $indexOf(name, ".prototype.") > -1) {
        return callBind(intrinsic);
      }
      return intrinsic;
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+object-inspect@1.12.3/node_modules/object-inspect/util.inspect.js
var require_util_inspect = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+object-inspect@1.12.3/node_modules/object-inspect/util.inspect.js"(exports, module2) {
    module2.exports = require("util").inspect;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+object-inspect@1.12.3/node_modules/object-inspect/index.js
var require_object_inspect = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+object-inspect@1.12.3/node_modules/object-inspect/index.js"(exports, module2) {
    var hasMap = typeof Map === "function" && Map.prototype;
    var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null;
    var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === "function" ? mapSizeDescriptor.get : null;
    var mapForEach = hasMap && Map.prototype.forEach;
    var hasSet = typeof Set === "function" && Set.prototype;
    var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null;
    var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === "function" ? setSizeDescriptor.get : null;
    var setForEach = hasSet && Set.prototype.forEach;
    var hasWeakMap = typeof WeakMap === "function" && WeakMap.prototype;
    var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
    var hasWeakSet = typeof WeakSet === "function" && WeakSet.prototype;
    var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
    var hasWeakRef = typeof WeakRef === "function" && WeakRef.prototype;
    var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
    var booleanValueOf = Boolean.prototype.valueOf;
    var objectToString = Object.prototype.toString;
    var functionToString = Function.prototype.toString;
    var $match = String.prototype.match;
    var $slice = String.prototype.slice;
    var $replace = String.prototype.replace;
    var $toUpperCase = String.prototype.toUpperCase;
    var $toLowerCase = String.prototype.toLowerCase;
    var $test = RegExp.prototype.test;
    var $concat = Array.prototype.concat;
    var $join = Array.prototype.join;
    var $arrSlice = Array.prototype.slice;
    var $floor = Math.floor;
    var bigIntValueOf = typeof BigInt === "function" ? BigInt.prototype.valueOf : null;
    var gOPS = Object.getOwnPropertySymbols;
    var symToString = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? Symbol.prototype.toString : null;
    var hasShammedSymbols = typeof Symbol === "function" && typeof Symbol.iterator === "object";
    var toStringTag = typeof Symbol === "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null;
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var gPO = (typeof Reflect === "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(O) {
      return O.__proto__;
    } : null);
    function addNumericSeparator(num, str) {
      if (num === Infinity || num === -Infinity || num !== num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str)) {
        return str;
      }
      var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
      if (typeof num === "number") {
        var int = num < 0 ? -$floor(-num) : $floor(num);
        if (int !== num) {
          var intStr = String(int);
          var dec = $slice.call(str, intStr.length + 1);
          return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
        }
      }
      return $replace.call(str, sepRegex, "$&_");
    }
    var utilInspect = require_util_inspect();
    var inspectCustom = utilInspect.custom;
    var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
    module2.exports = function inspect_(obj, options, depth, seen) {
      var opts = options || {};
      if (has(opts, "quoteStyle") && (opts.quoteStyle !== "single" && opts.quoteStyle !== "double")) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
      }
      if (has(opts, "maxStringLength") && (typeof opts.maxStringLength === "number" ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity : opts.maxStringLength !== null)) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
      }
      var customInspect = has(opts, "customInspect") ? opts.customInspect : true;
      if (typeof customInspect !== "boolean" && customInspect !== "symbol") {
        throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
      }
      if (has(opts, "indent") && opts.indent !== null && opts.indent !== "	" && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)) {
        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
      }
      if (has(opts, "numericSeparator") && typeof opts.numericSeparator !== "boolean") {
        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
      }
      var numericSeparator = opts.numericSeparator;
      if (typeof obj === "undefined") {
        return "undefined";
      }
      if (obj === null) {
        return "null";
      }
      if (typeof obj === "boolean") {
        return obj ? "true" : "false";
      }
      if (typeof obj === "string") {
        return inspectString(obj, opts);
      }
      if (typeof obj === "number") {
        if (obj === 0) {
          return Infinity / obj > 0 ? "0" : "-0";
        }
        var str = String(obj);
        return numericSeparator ? addNumericSeparator(obj, str) : str;
      }
      if (typeof obj === "bigint") {
        var bigIntStr = String(obj) + "n";
        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
      }
      var maxDepth = typeof opts.depth === "undefined" ? 5 : opts.depth;
      if (typeof depth === "undefined") {
        depth = 0;
      }
      if (depth >= maxDepth && maxDepth > 0 && typeof obj === "object") {
        return isArray(obj) ? "[Array]" : "[Object]";
      }
      var indent = getIndent(opts, depth);
      if (typeof seen === "undefined") {
        seen = [];
      } else if (indexOf(seen, obj) >= 0) {
        return "[Circular]";
      }
      function inspect(value, from, noIndent) {
        if (from) {
          seen = $arrSlice.call(seen);
          seen.push(from);
        }
        if (noIndent) {
          var newOpts = {
            depth: opts.depth
          };
          if (has(opts, "quoteStyle")) {
            newOpts.quoteStyle = opts.quoteStyle;
          }
          return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
      }
      if (typeof obj === "function" && !isRegExp(obj)) {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys.length > 0 ? " { " + $join.call(keys, ", ") + " }" : "");
      }
      if (isSymbol(obj)) {
        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
        return typeof obj === "object" && !hasShammedSymbols ? markBoxed(symString) : symString;
      }
      if (isElement(obj)) {
        var s = "<" + $toLowerCase.call(String(obj.nodeName));
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
          s += " " + attrs[i].name + "=" + wrapQuotes(quote(attrs[i].value), "double", opts);
        }
        s += ">";
        if (obj.childNodes && obj.childNodes.length) {
          s += "...";
        }
        s += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
        return s;
      }
      if (isArray(obj)) {
        if (obj.length === 0) {
          return "[]";
        }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
          return "[" + indentedJoin(xs, indent) + "]";
        }
        return "[ " + $join.call(xs, ", ") + " ]";
      }
      if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (!("cause" in Error.prototype) && "cause" in obj && !isEnumerable.call(obj, "cause")) {
          return "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
        }
        if (parts.length === 0) {
          return "[" + String(obj) + "]";
        }
        return "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }";
      }
      if (typeof obj === "object" && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === "function" && utilInspect) {
          return utilInspect(obj, { depth: maxDepth - depth });
        } else if (customInspect !== "symbol" && typeof obj.inspect === "function") {
          return obj.inspect();
        }
      }
      if (isMap(obj)) {
        var mapParts = [];
        if (mapForEach) {
          mapForEach.call(obj, function(value, key) {
            mapParts.push(inspect(key, obj, true) + " => " + inspect(value, obj));
          });
        }
        return collectionOf("Map", mapSize.call(obj), mapParts, indent);
      }
      if (isSet(obj)) {
        var setParts = [];
        if (setForEach) {
          setForEach.call(obj, function(value) {
            setParts.push(inspect(value, obj));
          });
        }
        return collectionOf("Set", setSize.call(obj), setParts, indent);
      }
      if (isWeakMap(obj)) {
        return weakCollectionOf("WeakMap");
      }
      if (isWeakSet(obj)) {
        return weakCollectionOf("WeakSet");
      }
      if (isWeakRef(obj)) {
        return weakCollectionOf("WeakRef");
      }
      if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
      }
      if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
      }
      if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
      }
      if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
      }
      if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? "" : "null prototype";
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "";
        var constructorTag = isPlainObject || typeof obj.constructor !== "function" ? "" : obj.constructor.name ? obj.constructor.name + " " : "";
        var tag = constructorTag + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
        if (ys.length === 0) {
          return tag + "{}";
        }
        if (indent) {
          return tag + "{" + indentedJoin(ys, indent) + "}";
        }
        return tag + "{ " + $join.call(ys, ", ") + " }";
      }
      return String(obj);
    };
    function wrapQuotes(s, defaultStyle, opts) {
      var quoteChar = (opts.quoteStyle || defaultStyle) === "double" ? '"' : "'";
      return quoteChar + s + quoteChar;
    }
    function quote(s) {
      return $replace.call(String(s), /"/g, "&quot;");
    }
    function isArray(obj) {
      return toStr(obj) === "[object Array]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isDate(obj) {
      return toStr(obj) === "[object Date]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isRegExp(obj) {
      return toStr(obj) === "[object RegExp]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isError(obj) {
      return toStr(obj) === "[object Error]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isString(obj) {
      return toStr(obj) === "[object String]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isNumber(obj) {
      return toStr(obj) === "[object Number]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isBoolean(obj) {
      return toStr(obj) === "[object Boolean]" && (!toStringTag || !(typeof obj === "object" && toStringTag in obj));
    }
    function isSymbol(obj) {
      if (hasShammedSymbols) {
        return obj && typeof obj === "object" && obj instanceof Symbol;
      }
      if (typeof obj === "symbol") {
        return true;
      }
      if (!obj || typeof obj !== "object" || !symToString) {
        return false;
      }
      try {
        symToString.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isBigInt(obj) {
      if (!obj || typeof obj !== "object" || !bigIntValueOf) {
        return false;
      }
      try {
        bigIntValueOf.call(obj);
        return true;
      } catch (e) {
      }
      return false;
    }
    var hasOwn = Object.prototype.hasOwnProperty || function(key) {
      return key in this;
    };
    function has(obj, key) {
      return hasOwn.call(obj, key);
    }
    function toStr(obj) {
      return objectToString.call(obj);
    }
    function nameOf(f) {
      if (f.name) {
        return f.name;
      }
      var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
      if (m) {
        return m[1];
      }
      return null;
    }
    function indexOf(xs, x) {
      if (xs.indexOf) {
        return xs.indexOf(x);
      }
      for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) {
          return i;
        }
      }
      return -1;
    }
    function isMap(x) {
      if (!mapSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        mapSize.call(x);
        try {
          setSize.call(x);
        } catch (s) {
          return true;
        }
        return x instanceof Map;
      } catch (e) {
      }
      return false;
    }
    function isWeakMap(x) {
      if (!weakMapHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakMapHas.call(x, weakMapHas);
        try {
          weakSetHas.call(x, weakSetHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakMap;
      } catch (e) {
      }
      return false;
    }
    function isWeakRef(x) {
      if (!weakRefDeref || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakRefDeref.call(x);
        return true;
      } catch (e) {
      }
      return false;
    }
    function isSet(x) {
      if (!setSize || !x || typeof x !== "object") {
        return false;
      }
      try {
        setSize.call(x);
        try {
          mapSize.call(x);
        } catch (m) {
          return true;
        }
        return x instanceof Set;
      } catch (e) {
      }
      return false;
    }
    function isWeakSet(x) {
      if (!weakSetHas || !x || typeof x !== "object") {
        return false;
      }
      try {
        weakSetHas.call(x, weakSetHas);
        try {
          weakMapHas.call(x, weakMapHas);
        } catch (s) {
          return true;
        }
        return x instanceof WeakSet;
      } catch (e) {
      }
      return false;
    }
    function isElement(x) {
      if (!x || typeof x !== "object") {
        return false;
      }
      if (typeof HTMLElement !== "undefined" && x instanceof HTMLElement) {
        return true;
      }
      return typeof x.nodeName === "string" && typeof x.getAttribute === "function";
    }
    function inspectString(str, opts) {
      if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = "... " + remaining + " more character" + (remaining > 1 ? "s" : "");
        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
      }
      var s = $replace.call($replace.call(str, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, lowbyte);
      return wrapQuotes(s, "single", opts);
    }
    function lowbyte(c) {
      var n = c.charCodeAt(0);
      var x = {
        8: "b",
        9: "t",
        10: "n",
        12: "f",
        13: "r"
      }[n];
      if (x) {
        return "\\" + x;
      }
      return "\\x" + (n < 16 ? "0" : "") + $toUpperCase.call(n.toString(16));
    }
    function markBoxed(str) {
      return "Object(" + str + ")";
    }
    function weakCollectionOf(type) {
      return type + " { ? }";
    }
    function collectionOf(type, size, entries, indent) {
      var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ", ");
      return type + " (" + size + ") {" + joinedEntries + "}";
    }
    function singleLineValues(xs) {
      for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], "\n") >= 0) {
          return false;
        }
      }
      return true;
    }
    function getIndent(opts, depth) {
      var baseIndent;
      if (opts.indent === "	") {
        baseIndent = "	";
      } else if (typeof opts.indent === "number" && opts.indent > 0) {
        baseIndent = $join.call(Array(opts.indent + 1), " ");
      } else {
        return null;
      }
      return {
        base: baseIndent,
        prev: $join.call(Array(depth + 1), baseIndent)
      };
    }
    function indentedJoin(xs, indent) {
      if (xs.length === 0) {
        return "";
      }
      var lineJoiner = "\n" + indent.prev + indent.base;
      return lineJoiner + $join.call(xs, "," + lineJoiner) + "\n" + indent.prev;
    }
    function arrObjKeys(obj, inspect) {
      var isArr = isArray(obj);
      var xs = [];
      if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
          xs[i] = has(obj, i) ? inspect(obj[i], obj) : "";
        }
      }
      var syms = typeof gOPS === "function" ? gOPS(obj) : [];
      var symMap;
      if (hasShammedSymbols) {
        symMap = {};
        for (var k = 0; k < syms.length; k++) {
          symMap["$" + syms[k]] = syms[k];
        }
      }
      for (var key in obj) {
        if (!has(obj, key)) {
          continue;
        }
        if (isArr && String(Number(key)) === key && key < obj.length) {
          continue;
        }
        if (hasShammedSymbols && symMap["$" + key] instanceof Symbol) {
          continue;
        } else if ($test.call(/[^\w$]/, key)) {
          xs.push(inspect(key, obj) + ": " + inspect(obj[key], obj));
        } else {
          xs.push(key + ": " + inspect(obj[key], obj));
        }
      }
      if (typeof gOPS === "function") {
        for (var j = 0; j < syms.length; j++) {
          if (isEnumerable.call(obj, syms[j])) {
            xs.push("[" + inspect(syms[j]) + "]: " + inspect(obj[syms[j]], obj));
          }
        }
      }
      return xs;
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+side-channel@1.0.4/node_modules/side-channel/index.js
var require_side_channel = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+side-channel@1.0.4/node_modules/side-channel/index.js"(exports, module2) {
    "use strict";
    var GetIntrinsic = require_get_intrinsic();
    var callBound = require_callBound();
    var inspect = require_object_inspect();
    var $TypeError = GetIntrinsic("%TypeError%");
    var $WeakMap = GetIntrinsic("%WeakMap%", true);
    var $Map = GetIntrinsic("%Map%", true);
    var $weakMapGet = callBound("WeakMap.prototype.get", true);
    var $weakMapSet = callBound("WeakMap.prototype.set", true);
    var $weakMapHas = callBound("WeakMap.prototype.has", true);
    var $mapGet = callBound("Map.prototype.get", true);
    var $mapSet = callBound("Map.prototype.set", true);
    var $mapHas = callBound("Map.prototype.has", true);
    var listGetNode = function(list, key) {
      for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
        if (curr.key === key) {
          prev.next = curr.next;
          curr.next = list.next;
          list.next = curr;
          return curr;
        }
      }
    };
    var listGet = function(objects, key) {
      var node = listGetNode(objects, key);
      return node && node.value;
    };
    var listSet = function(objects, key, value) {
      var node = listGetNode(objects, key);
      if (node) {
        node.value = value;
      } else {
        objects.next = {
          key,
          next: objects.next,
          value
        };
      }
    };
    var listHas = function(objects, key) {
      return !!listGetNode(objects, key);
    };
    module2.exports = function getSideChannel() {
      var $wm;
      var $m;
      var $o;
      var channel = {
        assert: function(key) {
          if (!channel.has(key)) {
            throw new $TypeError("Side channel does not contain " + inspect(key));
          }
        },
        get: function(key) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if ($wm) {
              return $weakMapGet($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapGet($m, key);
            }
          } else {
            if ($o) {
              return listGet($o, key);
            }
          }
        },
        has: function(key) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if ($wm) {
              return $weakMapHas($wm, key);
            }
          } else if ($Map) {
            if ($m) {
              return $mapHas($m, key);
            }
          } else {
            if ($o) {
              return listHas($o, key);
            }
          }
          return false;
        },
        set: function(key, value) {
          if ($WeakMap && key && (typeof key === "object" || typeof key === "function")) {
            if (!$wm) {
              $wm = new $WeakMap();
            }
            $weakMapSet($wm, key, value);
          } else if ($Map) {
            if (!$m) {
              $m = new $Map();
            }
            $mapSet($m, key, value);
          } else {
            if (!$o) {
              $o = { key: {}, next: null };
            }
            listSet($o, key, value);
          }
        }
      };
      return channel;
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/formats.js
var require_formats = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/formats.js"(exports, module2) {
    "use strict";
    var replace = String.prototype.replace;
    var percentTwenties = /%20/g;
    var Format = {
      RFC1738: "RFC1738",
      RFC3986: "RFC3986"
    };
    module2.exports = {
      "default": Format.RFC3986,
      formatters: {
        RFC1738: function(value) {
          return replace.call(value, percentTwenties, "+");
        },
        RFC3986: function(value) {
          return String(value);
        }
      },
      RFC1738: Format.RFC1738,
      RFC3986: Format.RFC3986
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/utils.js
var require_utils = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/utils.js"(exports, module2) {
    "use strict";
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var hexTable = function() {
      var array = [];
      for (var i = 0; i < 256; ++i) {
        array.push("%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
      }
      return array;
    }();
    var compactQueue = function compactQueue2(queue) {
      while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];
        if (isArray(obj)) {
          var compacted = [];
          for (var j = 0; j < obj.length; ++j) {
            if (typeof obj[j] !== "undefined") {
              compacted.push(obj[j]);
            }
          }
          item.obj[item.prop] = compacted;
        }
      }
    };
    var arrayToObject = function arrayToObject2(source, options) {
      var obj = options && options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== "undefined") {
          obj[i] = source[i];
        }
      }
      return obj;
    };
    var merge = function merge2(target, source, options) {
      if (!source) {
        return target;
      }
      if (typeof source !== "object") {
        if (isArray(target)) {
          target.push(source);
        } else if (target && typeof target === "object") {
          if (options && (options.plainObjects || options.allowPrototypes) || !has.call(Object.prototype, source)) {
            target[source] = true;
          }
        } else {
          return [target, source];
        }
        return target;
      }
      if (!target || typeof target !== "object") {
        return [target].concat(source);
      }
      var mergeTarget = target;
      if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
      }
      if (isArray(target) && isArray(source)) {
        source.forEach(function(item, i) {
          if (has.call(target, i)) {
            var targetItem = target[i];
            if (targetItem && typeof targetItem === "object" && item && typeof item === "object") {
              target[i] = merge2(targetItem, item, options);
            } else {
              target.push(item);
            }
          } else {
            target[i] = item;
          }
        });
        return target;
      }
      return Object.keys(source).reduce(function(acc, key) {
        var value = source[key];
        if (has.call(acc, key)) {
          acc[key] = merge2(acc[key], value, options);
        } else {
          acc[key] = value;
        }
        return acc;
      }, mergeTarget);
    };
    var assign = function assignSingleSource(target, source) {
      return Object.keys(source).reduce(function(acc, key) {
        acc[key] = source[key];
        return acc;
      }, target);
    };
    var decode = function(str, decoder, charset) {
      var strWithoutPlus = str.replace(/\+/g, " ");
      if (charset === "iso-8859-1") {
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
      }
      try {
        return decodeURIComponent(strWithoutPlus);
      } catch (e) {
        return strWithoutPlus;
      }
    };
    var encode = function encode2(str, defaultEncoder, charset, kind, format) {
      if (str.length === 0) {
        return str;
      }
      var string = str;
      if (typeof str === "symbol") {
        string = Symbol.prototype.toString.call(str);
      } else if (typeof str !== "string") {
        string = String(str);
      }
      if (charset === "iso-8859-1") {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {
          return "%26%23" + parseInt($0.slice(2), 16) + "%3B";
        });
      }
      var out = "";
      for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);
        if (c === 45 || c === 46 || c === 95 || c === 126 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 || format === formats.RFC1738 && (c === 40 || c === 41)) {
          out += string.charAt(i);
          continue;
        }
        if (c < 128) {
          out = out + hexTable[c];
          continue;
        }
        if (c < 2048) {
          out = out + (hexTable[192 | c >> 6] + hexTable[128 | c & 63]);
          continue;
        }
        if (c < 55296 || c >= 57344) {
          out = out + (hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63]);
          continue;
        }
        i += 1;
        c = 65536 + ((c & 1023) << 10 | string.charCodeAt(i) & 1023);
        out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
      }
      return out;
    };
    var compact = function compact2(value) {
      var queue = [{ obj: { o: value }, prop: "o" }];
      var refs = [];
      for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];
        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
          var key = keys[j];
          var val = obj[key];
          if (typeof val === "object" && val !== null && refs.indexOf(val) === -1) {
            queue.push({ obj, prop: key });
            refs.push(val);
          }
        }
      }
      compactQueue(queue);
      return value;
    };
    var isRegExp = function isRegExp2(obj) {
      return Object.prototype.toString.call(obj) === "[object RegExp]";
    };
    var isBuffer = function isBuffer2(obj) {
      if (!obj || typeof obj !== "object") {
        return false;
      }
      return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
    };
    var combine = function combine2(a, b) {
      return [].concat(a, b);
    };
    var maybeMap = function maybeMap2(val, fn) {
      if (isArray(val)) {
        var mapped = [];
        for (var i = 0; i < val.length; i += 1) {
          mapped.push(fn(val[i]));
        }
        return mapped;
      }
      return fn(val);
    };
    module2.exports = {
      arrayToObject,
      assign,
      combine,
      compact,
      decode,
      encode,
      isBuffer,
      isRegExp,
      maybeMap,
      merge
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/stringify.js"(exports, module2) {
    "use strict";
    var getSideChannel = require_side_channel();
    var utils = require_utils();
    var formats = require_formats();
    var has = Object.prototype.hasOwnProperty;
    var arrayPrefixGenerators = {
      brackets: function brackets(prefix) {
        return prefix + "[]";
      },
      comma: "comma",
      indices: function indices(prefix, key) {
        return prefix + "[" + key + "]";
      },
      repeat: function repeat(prefix) {
        return prefix;
      }
    };
    var isArray = Array.isArray;
    var push = Array.prototype.push;
    var pushToArray = function(arr, valueOrArray) {
      push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
    };
    var toISO = Date.prototype.toISOString;
    var defaultFormat = formats["default"];
    var defaults = {
      addQueryPrefix: false,
      allowDots: false,
      charset: "utf-8",
      charsetSentinel: false,
      delimiter: "&",
      encode: true,
      encoder: utils.encode,
      encodeValuesOnly: false,
      format: defaultFormat,
      formatter: formats.formatters[defaultFormat],
      indices: false,
      serializeDate: function serializeDate(date) {
        return toISO.call(date);
      },
      skipNulls: false,
      strictNullHandling: false
    };
    var isNonNullishPrimitive = function isNonNullishPrimitive2(v) {
      return typeof v === "string" || typeof v === "number" || typeof v === "boolean" || typeof v === "symbol" || typeof v === "bigint";
    };
    var sentinel = {};
    var stringify = function stringify2(object, prefix, generateArrayPrefix, commaRoundTrip, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {
      var obj = object;
      var tmpSc = sideChannel;
      var step = 0;
      var findFlag = false;
      while ((tmpSc = tmpSc.get(sentinel)) !== void 0 && !findFlag) {
        var pos = tmpSc.get(object);
        step += 1;
        if (typeof pos !== "undefined") {
          if (pos === step) {
            throw new RangeError("Cyclic object value");
          } else {
            findFlag = true;
          }
        }
        if (typeof tmpSc.get(sentinel) === "undefined") {
          step = 0;
        }
      }
      if (typeof filter === "function") {
        obj = filter(prefix, obj);
      } else if (obj instanceof Date) {
        obj = serializeDate(obj);
      } else if (generateArrayPrefix === "comma" && isArray(obj)) {
        obj = utils.maybeMap(obj, function(value2) {
          if (value2 instanceof Date) {
            return serializeDate(value2);
          }
          return value2;
        });
      }
      if (obj === null) {
        if (strictNullHandling) {
          return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, "key", format) : prefix;
        }
        obj = "";
      }
      if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
          var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, "key", format);
          return [formatter(keyValue) + "=" + formatter(encoder(obj, defaults.encoder, charset, "value", format))];
        }
        return [formatter(prefix) + "=" + formatter(String(obj))];
      }
      var values = [];
      if (typeof obj === "undefined") {
        return values;
      }
      var objKeys;
      if (generateArrayPrefix === "comma" && isArray(obj)) {
        if (encodeValuesOnly && encoder) {
          obj = utils.maybeMap(obj, encoder);
        }
        objKeys = [{ value: obj.length > 0 ? obj.join(",") || null : void 0 }];
      } else if (isArray(filter)) {
        objKeys = filter;
      } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
      }
      var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + "[]" : prefix;
      for (var j = 0; j < objKeys.length; ++j) {
        var key = objKeys[j];
        var value = typeof key === "object" && typeof key.value !== "undefined" ? key.value : obj[key];
        if (skipNulls && value === null) {
          continue;
        }
        var keyPrefix = isArray(obj) ? typeof generateArrayPrefix === "function" ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix : adjustedPrefix + (allowDots ? "." + key : "[" + key + "]");
        sideChannel.set(object, step);
        var valueSideChannel = getSideChannel();
        valueSideChannel.set(sentinel, sideChannel);
        pushToArray(values, stringify2(
          value,
          keyPrefix,
          generateArrayPrefix,
          commaRoundTrip,
          strictNullHandling,
          skipNulls,
          generateArrayPrefix === "comma" && encodeValuesOnly && isArray(obj) ? null : encoder,
          filter,
          sort,
          allowDots,
          serializeDate,
          format,
          formatter,
          encodeValuesOnly,
          charset,
          valueSideChannel
        ));
      }
      return values;
    };
    var normalizeStringifyOptions = function normalizeStringifyOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (opts.encoder !== null && typeof opts.encoder !== "undefined" && typeof opts.encoder !== "function") {
        throw new TypeError("Encoder has to be a function.");
      }
      var charset = opts.charset || defaults.charset;
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var format = formats["default"];
      if (typeof opts.format !== "undefined") {
        if (!has.call(formats.formatters, opts.format)) {
          throw new TypeError("Unknown format option provided.");
        }
        format = opts.format;
      }
      var formatter = formats.formatters[format];
      var filter = defaults.filter;
      if (typeof opts.filter === "function" || isArray(opts.filter)) {
        filter = opts.filter;
      }
      return {
        addQueryPrefix: typeof opts.addQueryPrefix === "boolean" ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === "undefined" ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === "boolean" ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === "function" ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === "boolean" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter,
        format,
        formatter,
        serializeDate: typeof opts.serializeDate === "function" ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === "boolean" ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === "function" ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module2.exports = function(object, opts) {
      var obj = object;
      var options = normalizeStringifyOptions(opts);
      var objKeys;
      var filter;
      if (typeof options.filter === "function") {
        filter = options.filter;
        obj = filter("", obj);
      } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
      }
      var keys = [];
      if (typeof obj !== "object" || obj === null) {
        return "";
      }
      var arrayFormat;
      if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
      } else if (opts && "indices" in opts) {
        arrayFormat = opts.indices ? "indices" : "repeat";
      } else {
        arrayFormat = "indices";
      }
      var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
      if (opts && "commaRoundTrip" in opts && typeof opts.commaRoundTrip !== "boolean") {
        throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
      }
      var commaRoundTrip = generateArrayPrefix === "comma" && opts && opts.commaRoundTrip;
      if (!objKeys) {
        objKeys = Object.keys(obj);
      }
      if (options.sort) {
        objKeys.sort(options.sort);
      }
      var sideChannel = getSideChannel();
      for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];
        if (options.skipNulls && obj[key] === null) {
          continue;
        }
        pushToArray(keys, stringify(
          obj[key],
          key,
          generateArrayPrefix,
          commaRoundTrip,
          options.strictNullHandling,
          options.skipNulls,
          options.encode ? options.encoder : null,
          options.filter,
          options.sort,
          options.allowDots,
          options.serializeDate,
          options.format,
          options.formatter,
          options.encodeValuesOnly,
          options.charset,
          sideChannel
        ));
      }
      var joined = keys.join(options.delimiter);
      var prefix = options.addQueryPrefix === true ? "?" : "";
      if (options.charsetSentinel) {
        if (options.charset === "iso-8859-1") {
          prefix += "utf8=%26%2310003%3B&";
        } else {
          prefix += "utf8=%E2%9C%93&";
        }
      }
      return joined.length > 0 ? prefix + joined : "";
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/parse.js
var require_parse = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/parse.js"(exports, module2) {
    "use strict";
    var utils = require_utils();
    var has = Object.prototype.hasOwnProperty;
    var isArray = Array.isArray;
    var defaults = {
      allowDots: false,
      allowPrototypes: false,
      allowSparse: false,
      arrayLimit: 20,
      charset: "utf-8",
      charsetSentinel: false,
      comma: false,
      decoder: utils.decode,
      delimiter: "&",
      depth: 5,
      ignoreQueryPrefix: false,
      interpretNumericEntities: false,
      parameterLimit: 1e3,
      parseArrays: true,
      plainObjects: false,
      strictNullHandling: false
    };
    var interpretNumericEntities = function(str) {
      return str.replace(/&#(\d+);/g, function($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
      });
    };
    var parseArrayValue = function(val, options) {
      if (val && typeof val === "string" && options.comma && val.indexOf(",") > -1) {
        return val.split(",");
      }
      return val;
    };
    var isoSentinel = "utf8=%26%2310003%3B";
    var charsetSentinel = "utf8=%E2%9C%93";
    var parseValues = function parseQueryStringValues(str, options) {
      var obj = {};
      var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, "") : str;
      var limit = options.parameterLimit === Infinity ? void 0 : options.parameterLimit;
      var parts = cleanStr.split(options.delimiter, limit);
      var skipIndex = -1;
      var i;
      var charset = options.charset;
      if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
          if (parts[i].indexOf("utf8=") === 0) {
            if (parts[i] === charsetSentinel) {
              charset = "utf-8";
            } else if (parts[i] === isoSentinel) {
              charset = "iso-8859-1";
            }
            skipIndex = i;
            i = parts.length;
          }
        }
      }
      for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
          continue;
        }
        var part = parts[i];
        var bracketEqualsPos = part.indexOf("]=");
        var pos = bracketEqualsPos === -1 ? part.indexOf("=") : bracketEqualsPos + 1;
        var key, val;
        if (pos === -1) {
          key = options.decoder(part, defaults.decoder, charset, "key");
          val = options.strictNullHandling ? null : "";
        } else {
          key = options.decoder(part.slice(0, pos), defaults.decoder, charset, "key");
          val = utils.maybeMap(
            parseArrayValue(part.slice(pos + 1), options),
            function(encodedVal) {
              return options.decoder(encodedVal, defaults.decoder, charset, "value");
            }
          );
        }
        if (val && options.interpretNumericEntities && charset === "iso-8859-1") {
          val = interpretNumericEntities(val);
        }
        if (part.indexOf("[]=") > -1) {
          val = isArray(val) ? [val] : val;
        }
        if (has.call(obj, key)) {
          obj[key] = utils.combine(obj[key], val);
        } else {
          obj[key] = val;
        }
      }
      return obj;
    };
    var parseObject = function(chain, val, options, valuesParsed) {
      var leaf = valuesParsed ? val : parseArrayValue(val, options);
      for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];
        if (root === "[]" && options.parseArrays) {
          obj = [].concat(leaf);
        } else {
          obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var cleanRoot = root.charAt(0) === "[" && root.charAt(root.length - 1) === "]" ? root.slice(1, -1) : root;
          var index = parseInt(cleanRoot, 10);
          if (!options.parseArrays && cleanRoot === "") {
            obj = { 0: leaf };
          } else if (!isNaN(index) && root !== cleanRoot && String(index) === cleanRoot && index >= 0 && (options.parseArrays && index <= options.arrayLimit)) {
            obj = [];
            obj[index] = leaf;
          } else if (cleanRoot !== "__proto__") {
            obj[cleanRoot] = leaf;
          }
        }
        leaf = obj;
      }
      return leaf;
    };
    var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
      if (!givenKey) {
        return;
      }
      var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, "[$1]") : givenKey;
      var brackets = /(\[[^[\]]*])/;
      var child = /(\[[^[\]]*])/g;
      var segment = options.depth > 0 && brackets.exec(key);
      var parent = segment ? key.slice(0, segment.index) : key;
      var keys = [];
      if (parent) {
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(parent);
      }
      var i = 0;
      while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
          if (!options.allowPrototypes) {
            return;
          }
        }
        keys.push(segment[1]);
      }
      if (segment) {
        keys.push("[" + key.slice(segment.index) + "]");
      }
      return parseObject(keys, val, options, valuesParsed);
    };
    var normalizeParseOptions = function normalizeParseOptions2(opts) {
      if (!opts) {
        return defaults;
      }
      if (opts.decoder !== null && opts.decoder !== void 0 && typeof opts.decoder !== "function") {
        throw new TypeError("Decoder has to be a function.");
      }
      if (typeof opts.charset !== "undefined" && opts.charset !== "utf-8" && opts.charset !== "iso-8859-1") {
        throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
      }
      var charset = typeof opts.charset === "undefined" ? defaults.charset : opts.charset;
      return {
        allowDots: typeof opts.allowDots === "undefined" ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === "boolean" ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === "boolean" ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === "number" ? opts.arrayLimit : defaults.arrayLimit,
        charset,
        charsetSentinel: typeof opts.charsetSentinel === "boolean" ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === "boolean" ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === "function" ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === "string" || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        depth: typeof opts.depth === "number" || opts.depth === false ? +opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === "boolean" ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === "number" ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === "boolean" ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === "boolean" ? opts.strictNullHandling : defaults.strictNullHandling
      };
    };
    module2.exports = function(str, opts) {
      var options = normalizeParseOptions(opts);
      if (str === "" || str === null || typeof str === "undefined") {
        return options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      }
      var tempObj = typeof str === "string" ? parseValues(str, options) : str;
      var obj = options.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
      var keys = Object.keys(tempObj);
      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === "string");
        obj = utils.merge(obj, newObj, options);
      }
      if (options.allowSparse === true) {
        return obj;
      }
      return utils.compact(obj);
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/index.js
var require_lib = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+qs@6.11.1/node_modules/qs/lib/index.js"(exports, module2) {
    "use strict";
    var stringify = require_stringify();
    var parse = require_parse();
    var formats = require_formats();
    module2.exports = {
      formats,
      parse,
      stringify
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/OctetStream.js
var require_OctetStream = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/OctetStream.js"(exports, module2) {
    "use strict";
    var { PassThrough } = require("stream");
    var OctetStreamParser = class extends PassThrough {
      constructor(options = {}) {
        super();
        this.globalOptions = { ...options };
      }
    };
    module2.exports = OctetStreamParser;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/octetstream.js
var require_octetstream = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/octetstream.js"(exports, module2) {
    "use strict";
    var OctetStreamParser = require_OctetStream();
    module2.exports = function plugin(formidable, options) {
      const self = this || formidable;
      if (/octet-stream/i.test(self.headers["content-type"])) {
        init.call(self, self, options);
      }
      return self;
    };
    function init(_self, _opts) {
      this.type = "octet-stream";
      const originalFilename = this.headers["x-file-name"];
      const mimetype = this.headers["content-type"];
      const thisPart = {
        originalFilename,
        mimetype
      };
      const newFilename = this._getNewName(thisPart);
      const filepath = this._joinDirectoryName(newFilename);
      const file = this._newFile({
        newFilename,
        filepath,
        originalFilename,
        mimetype
      });
      this.emit("fileBegin", originalFilename, file);
      file.open();
      this.openedFiles.push(file);
      this._flushing += 1;
      this._parser = new OctetStreamParser(this.options);
      let outstandingWrites = 0;
      this._parser.on("data", (buffer) => {
        this.pause();
        outstandingWrites += 1;
        file.write(buffer, () => {
          outstandingWrites -= 1;
          this.resume();
          if (this.ended) {
            this._parser.emit("doneWritingFile");
          }
        });
      });
      this._parser.on("end", () => {
        this._flushing -= 1;
        this.ended = true;
        const done = () => {
          file.end(() => {
            this.emit("file", "file", file);
            this._maybeEnd();
          });
        };
        if (outstandingWrites === 0) {
          done();
        } else {
          this._parser.once("doneWritingFile", done);
        }
      });
      return this;
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/Querystring.js
var require_Querystring = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/Querystring.js"(exports, module2) {
    "use strict";
    var { Transform } = require("stream");
    var querystring = require("querystring");
    var QuerystringParser = class extends Transform {
      constructor(options = {}) {
        super({ readableObjectMode: true });
        this.globalOptions = { ...options };
        this.buffer = "";
        this.bufferLength = 0;
      }
      _transform(buffer, encoding, callback) {
        this.buffer += buffer.toString("ascii");
        this.bufferLength = this.buffer.length;
        callback();
      }
      _flush(callback) {
        const fields = querystring.parse(this.buffer, "&", "=");
        for (const key in fields) {
          this.push({
            key,
            value: fields[key]
          });
        }
        this.buffer = "";
        callback();
      }
    };
    module2.exports = QuerystringParser;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/querystring.js
var require_querystring = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/querystring.js"(exports, module2) {
    "use strict";
    var QuerystringParser = require_Querystring();
    module2.exports = function plugin(formidable, options) {
      const self = this || formidable;
      if (/urlencoded/i.test(self.headers["content-type"])) {
        init.call(self, self, options);
      }
      return self;
    };
    function init(_self, _opts) {
      this.type = "urlencoded";
      const parser = new QuerystringParser(this.options);
      parser.on("data", ({ key, value }) => {
        this.emit("field", key, value);
      });
      parser.once("end", () => {
        this.ended = true;
        this._maybeEnd();
      });
      this._parser = parser;
      return this;
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/FormidableError.js
var require_FormidableError = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/FormidableError.js"(exports, module2) {
    var missingPlugin = 1e3;
    var pluginFunction = 1001;
    var aborted = 1002;
    var noParser = 1003;
    var uninitializedParser = 1004;
    var filenameNotString = 1005;
    var maxFieldsSizeExceeded = 1006;
    var maxFieldsExceeded = 1007;
    var smallerThanMinFileSize = 1008;
    var biggerThanMaxFileSize = 1009;
    var noEmptyFiles = 1010;
    var missingContentType = 1011;
    var malformedMultipart = 1012;
    var missingMultipartBoundary = 1013;
    var unknownTransferEncoding = 1014;
    var FormidableError = class extends Error {
      constructor(message, internalCode, httpCode = 500) {
        super(message);
        this.code = internalCode;
        this.httpCode = httpCode;
      }
    };
    module2.exports = {
      missingPlugin,
      pluginFunction,
      aborted,
      noParser,
      uninitializedParser,
      filenameNotString,
      maxFieldsSizeExceeded,
      maxFieldsExceeded,
      smallerThanMinFileSize,
      biggerThanMaxFileSize,
      noEmptyFiles,
      missingContentType,
      malformedMultipart,
      missingMultipartBoundary,
      unknownTransferEncoding,
      FormidableError
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/Multipart.js
var require_Multipart = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/Multipart.js"(exports, module2) {
    "use strict";
    var { Transform } = require("stream");
    var errors = require_FormidableError();
    var { FormidableError } = errors;
    var s = 0;
    var STATE = {
      PARSER_UNINITIALIZED: s++,
      START: s++,
      START_BOUNDARY: s++,
      HEADER_FIELD_START: s++,
      HEADER_FIELD: s++,
      HEADER_VALUE_START: s++,
      HEADER_VALUE: s++,
      HEADER_VALUE_ALMOST_DONE: s++,
      HEADERS_ALMOST_DONE: s++,
      PART_DATA_START: s++,
      PART_DATA: s++,
      PART_END: s++,
      END: s++
    };
    var f = 1;
    var FBOUNDARY = { PART_BOUNDARY: f, LAST_BOUNDARY: f *= 2 };
    var LF = 10;
    var CR = 13;
    var SPACE = 32;
    var HYPHEN = 45;
    var COLON = 58;
    var A = 97;
    var Z = 122;
    function lower(c) {
      return c | 32;
    }
    exports.STATES = {};
    Object.keys(STATE).forEach((stateName) => {
      exports.STATES[stateName] = STATE[stateName];
    });
    var MultipartParser = class extends Transform {
      constructor(options = {}) {
        super({ readableObjectMode: true });
        this.boundary = null;
        this.boundaryChars = null;
        this.lookbehind = null;
        this.bufferLength = 0;
        this.state = STATE.PARSER_UNINITIALIZED;
        this.globalOptions = { ...options };
        this.index = null;
        this.flags = 0;
      }
      _flush(done) {
        if (this.state === STATE.HEADER_FIELD_START && this.index === 0 || this.state === STATE.PART_DATA && this.index === this.boundary.length) {
          this._handleCallback("partEnd");
          this._handleCallback("end");
          done();
        } else if (this.state !== STATE.END) {
          done(
            new FormidableError(
              `MultipartParser.end(): stream ended unexpectedly: ${this.explain()}`,
              errors.malformedMultipart,
              400
            )
          );
        }
      }
      initWithBoundary(str) {
        this.boundary = Buffer.from(`\r
--${str}`);
        this.lookbehind = Buffer.alloc(this.boundary.length + 8);
        this.state = STATE.START;
        this.boundaryChars = {};
        for (let i = 0; i < this.boundary.length; i++) {
          this.boundaryChars[this.boundary[i]] = true;
        }
      }
      _handleCallback(name, buf, start, end) {
        if (start !== void 0 && start === end) {
          return;
        }
        this.push({ name, buffer: buf, start, end });
      }
      _transform(buffer, _, done) {
        let i = 0;
        let prevIndex = this.index;
        let { index, state, flags } = this;
        const { lookbehind, boundary, boundaryChars } = this;
        const boundaryLength = boundary.length;
        const boundaryEnd = boundaryLength - 1;
        this.bufferLength = buffer.length;
        let c = null;
        let cl = null;
        const setMark = (name, idx) => {
          this[`${name}Mark`] = typeof idx === "number" ? idx : i;
        };
        const clearMarkSymbol = (name) => {
          delete this[`${name}Mark`];
        };
        const dataCallback = (name, shouldClear) => {
          const markSymbol = `${name}Mark`;
          if (!(markSymbol in this)) {
            return;
          }
          if (!shouldClear) {
            this._handleCallback(name, buffer, this[markSymbol], buffer.length);
            setMark(name, 0);
          } else {
            this._handleCallback(name, buffer, this[markSymbol], i);
            clearMarkSymbol(name);
          }
        };
        for (i = 0; i < this.bufferLength; i++) {
          c = buffer[i];
          switch (state) {
            case STATE.PARSER_UNINITIALIZED:
              return i;
            case STATE.START:
              index = 0;
              state = STATE.START_BOUNDARY;
            case STATE.START_BOUNDARY:
              if (index === boundary.length - 2) {
                if (c === HYPHEN) {
                  flags |= FBOUNDARY.LAST_BOUNDARY;
                } else if (c !== CR) {
                  return i;
                }
                index++;
                break;
              } else if (index - 1 === boundary.length - 2) {
                if (flags & FBOUNDARY.LAST_BOUNDARY && c === HYPHEN) {
                  this._handleCallback("end");
                  state = STATE.END;
                  flags = 0;
                } else if (!(flags & FBOUNDARY.LAST_BOUNDARY) && c === LF) {
                  index = 0;
                  this._handleCallback("partBegin");
                  state = STATE.HEADER_FIELD_START;
                } else {
                  return i;
                }
                break;
              }
              if (c !== boundary[index + 2]) {
                index = -2;
              }
              if (c === boundary[index + 2]) {
                index++;
              }
              break;
            case STATE.HEADER_FIELD_START:
              state = STATE.HEADER_FIELD;
              setMark("headerField");
              index = 0;
            case STATE.HEADER_FIELD:
              if (c === CR) {
                clearMarkSymbol("headerField");
                state = STATE.HEADERS_ALMOST_DONE;
                break;
              }
              index++;
              if (c === HYPHEN) {
                break;
              }
              if (c === COLON) {
                if (index === 1) {
                  return i;
                }
                dataCallback("headerField", true);
                state = STATE.HEADER_VALUE_START;
                break;
              }
              cl = lower(c);
              if (cl < A || cl > Z) {
                return i;
              }
              break;
            case STATE.HEADER_VALUE_START:
              if (c === SPACE) {
                break;
              }
              setMark("headerValue");
              state = STATE.HEADER_VALUE;
            case STATE.HEADER_VALUE:
              if (c === CR) {
                dataCallback("headerValue", true);
                this._handleCallback("headerEnd");
                state = STATE.HEADER_VALUE_ALMOST_DONE;
              }
              break;
            case STATE.HEADER_VALUE_ALMOST_DONE:
              if (c !== LF) {
                return i;
              }
              state = STATE.HEADER_FIELD_START;
              break;
            case STATE.HEADERS_ALMOST_DONE:
              if (c !== LF) {
                return i;
              }
              this._handleCallback("headersEnd");
              state = STATE.PART_DATA_START;
              break;
            case STATE.PART_DATA_START:
              state = STATE.PART_DATA;
              setMark("partData");
            case STATE.PART_DATA:
              prevIndex = index;
              if (index === 0) {
                i += boundaryEnd;
                while (i < this.bufferLength && !(buffer[i] in boundaryChars)) {
                  i += boundaryLength;
                }
                i -= boundaryEnd;
                c = buffer[i];
              }
              if (index < boundary.length) {
                if (boundary[index] === c) {
                  if (index === 0) {
                    dataCallback("partData", true);
                  }
                  index++;
                } else {
                  index = 0;
                }
              } else if (index === boundary.length) {
                index++;
                if (c === CR) {
                  flags |= FBOUNDARY.PART_BOUNDARY;
                } else if (c === HYPHEN) {
                  flags |= FBOUNDARY.LAST_BOUNDARY;
                } else {
                  index = 0;
                }
              } else if (index - 1 === boundary.length) {
                if (flags & FBOUNDARY.PART_BOUNDARY) {
                  index = 0;
                  if (c === LF) {
                    flags &= ~FBOUNDARY.PART_BOUNDARY;
                    this._handleCallback("partEnd");
                    this._handleCallback("partBegin");
                    state = STATE.HEADER_FIELD_START;
                    break;
                  }
                } else if (flags & FBOUNDARY.LAST_BOUNDARY) {
                  if (c === HYPHEN) {
                    this._handleCallback("partEnd");
                    this._handleCallback("end");
                    state = STATE.END;
                    flags = 0;
                  } else {
                    index = 0;
                  }
                } else {
                  index = 0;
                }
              }
              if (index > 0) {
                lookbehind[index - 1] = c;
              } else if (prevIndex > 0) {
                this._handleCallback("partData", lookbehind, 0, prevIndex);
                prevIndex = 0;
                setMark("partData");
                i--;
              }
              break;
            case STATE.END:
              break;
            default:
              return i;
          }
        }
        dataCallback("headerField");
        dataCallback("headerValue");
        dataCallback("partData");
        this.index = index;
        this.state = state;
        this.flags = flags;
        done();
        return this.bufferLength;
      }
      explain() {
        return `state = ${MultipartParser.stateToString(this.state)}`;
      }
    };
    MultipartParser.stateToString = (stateNumber) => {
      for (const stateName in STATE) {
        const number = STATE[stateName];
        if (number === stateNumber)
          return stateName;
      }
    };
    module2.exports = Object.assign(MultipartParser, { STATES: exports.STATES });
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/multipart.js
var require_multipart = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/multipart.js"(exports, module2) {
    "use strict";
    var { Stream } = require("stream");
    var MultipartParser = require_Multipart();
    var errors = require_FormidableError();
    var { FormidableError } = errors;
    module2.exports = function plugin(formidable, options) {
      const self = this || formidable;
      const multipart = /multipart/i.test(self.headers["content-type"]);
      if (multipart) {
        const m = self.headers["content-type"].match(
          /boundary=(?:"([^"]+)"|([^;]+))/i
        );
        if (m) {
          const initMultipart = createInitMultipart(m[1] || m[2]);
          initMultipart.call(self, self, options);
        } else {
          const err = new FormidableError(
            "bad content-type header, no multipart boundary",
            errors.missingMultipartBoundary,
            400
          );
          self._error(err);
        }
      }
    };
    function createInitMultipart(boundary) {
      return function initMultipart() {
        this.type = "multipart";
        const parser = new MultipartParser(this.options);
        let headerField;
        let headerValue;
        let part;
        parser.initWithBoundary(boundary);
        parser.on("data", ({ name, buffer, start, end }) => {
          if (name === "partBegin") {
            part = new Stream();
            part.readable = true;
            part.headers = {};
            part.name = null;
            part.originalFilename = null;
            part.mimetype = null;
            part.transferEncoding = this.options.encoding;
            part.transferBuffer = "";
            headerField = "";
            headerValue = "";
          } else if (name === "headerField") {
            headerField += buffer.toString(this.options.encoding, start, end);
          } else if (name === "headerValue") {
            headerValue += buffer.toString(this.options.encoding, start, end);
          } else if (name === "headerEnd") {
            headerField = headerField.toLowerCase();
            part.headers[headerField] = headerValue;
            const m = headerValue.match(
              /\bname=("([^"]*)"|([^\(\)<>@,;:\\"\/\[\]\?=\{\}\s\t/]+))/i
            );
            if (headerField === "content-disposition") {
              if (m) {
                part.name = m[2] || m[3] || "";
              }
              part.originalFilename = this._getFileName(headerValue);
            } else if (headerField === "content-type") {
              part.mimetype = headerValue;
            } else if (headerField === "content-transfer-encoding") {
              part.transferEncoding = headerValue.toLowerCase();
            }
            headerField = "";
            headerValue = "";
          } else if (name === "headersEnd") {
            switch (part.transferEncoding) {
              case "binary":
              case "7bit":
              case "8bit":
              case "utf-8": {
                const dataPropagation = (ctx) => {
                  if (ctx.name === "partData") {
                    part.emit("data", ctx.buffer.slice(ctx.start, ctx.end));
                  }
                };
                const dataStopPropagation = (ctx) => {
                  if (ctx.name === "partEnd") {
                    part.emit("end");
                    parser.off("data", dataPropagation);
                    parser.off("data", dataStopPropagation);
                  }
                };
                parser.on("data", dataPropagation);
                parser.on("data", dataStopPropagation);
                break;
              }
              case "base64": {
                const dataPropagation = (ctx) => {
                  if (ctx.name === "partData") {
                    part.transferBuffer += ctx.buffer.slice(ctx.start, ctx.end).toString("ascii");
                    const offset = parseInt(part.transferBuffer.length / 4, 10) * 4;
                    part.emit(
                      "data",
                      Buffer.from(
                        part.transferBuffer.substring(0, offset),
                        "base64"
                      )
                    );
                    part.transferBuffer = part.transferBuffer.substring(offset);
                  }
                };
                const dataStopPropagation = (ctx) => {
                  if (ctx.name === "partEnd") {
                    part.emit("data", Buffer.from(part.transferBuffer, "base64"));
                    part.emit("end");
                    parser.off("data", dataPropagation);
                    parser.off("data", dataStopPropagation);
                  }
                };
                parser.on("data", dataPropagation);
                parser.on("data", dataStopPropagation);
                break;
              }
              default:
                return this._error(
                  new FormidableError(
                    "unknown transfer-encoding",
                    errors.unknownTransferEncoding,
                    501
                  )
                );
            }
            this.onPart(part);
          } else if (name === "end") {
            this.ended = true;
            this._maybeEnd();
          }
        });
        this._parser = parser;
      };
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/JSON.js
var require_JSON = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/JSON.js"(exports, module2) {
    "use strict";
    var { Transform } = require("stream");
    var JSONParser = class extends Transform {
      constructor(options = {}) {
        super({ readableObjectMode: true });
        this.chunks = [];
        this.globalOptions = { ...options };
      }
      _transform(chunk, encoding, callback) {
        this.chunks.push(String(chunk));
        callback();
      }
      _flush(callback) {
        try {
          const fields = JSON.parse(this.chunks.join(""));
          Object.keys(fields).forEach((key) => {
            const value = fields[key];
            this.push({ key, value });
          });
        } catch (e) {
          callback(e);
          return;
        }
        this.chunks = null;
        callback();
      }
    };
    module2.exports = JSONParser;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/json.js
var require_json = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/json.js"(exports, module2) {
    "use strict";
    var JSONParser = require_JSON();
    module2.exports = function plugin(formidable, options) {
      const self = this || formidable;
      if (/json/i.test(self.headers["content-type"])) {
        init.call(self, self, options);
      }
    };
    function init(_self, _opts) {
      this.type = "json";
      const parser = new JSONParser(this.options);
      parser.on("data", ({ key, value }) => {
        this.emit("field", key, value);
      });
      parser.once("end", () => {
        this.ended = true;
        this._maybeEnd();
      });
      this._parser = parser;
    }
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/index.js
var require_plugins = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/plugins/index.js"(exports, module2) {
    "use strict";
    var octetstream = require_octetstream();
    var querystring = require_querystring();
    var multipart = require_multipart();
    var json = require_json();
    module2.exports = {
      octetstream,
      querystring,
      multipart,
      json
    };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/Dummy.js
var require_Dummy = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/Dummy.js"(exports, module2) {
    "use strict";
    var { Transform } = require("stream");
    var DummyParser = class extends Transform {
      constructor(incomingForm, options = {}) {
        super();
        this.globalOptions = { ...options };
        this.incomingForm = incomingForm;
      }
      _flush(callback) {
        this.incomingForm.ended = true;
        this.incomingForm._maybeEnd();
        callback();
      }
    };
    module2.exports = DummyParser;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/Formidable.js
var require_Formidable = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/Formidable.js"(exports, module2) {
    "use strict";
    var os = require("os");
    var path = require("path");
    var hexoid = require_dist();
    var once = require_once();
    var dezalgo = require_dezalgo();
    var { EventEmitter } = require("events");
    var { StringDecoder } = require("string_decoder");
    var qs = require_lib();
    var __plugins = require_plugins();
    var toHexoId = hexoid(25);
    var DEFAULT_OPTIONS = {
      maxFields: 1e3,
      maxFieldsSize: 20 * 1024 * 1024,
      maxFileSize: 200 * 1024 * 1024,
      minFileSize: 1,
      allowEmptyFiles: true,
      keepExtensions: false,
      encoding: "utf-8",
      hashAlgorithm: false,
      uploadDir: os.tmpdir(),
      multiples: false,
      enabledPlugins: ["octetstream", "querystring", "multipart", "json"],
      fileWriteStreamHandler: null,
      defaultInvalidName: "invalid-name",
      filter: function() {
        return true;
      }
    };
    var PersistentFile = require_PersistentFile();
    var VolatileFile = require_VolatileFile();
    var DummyParser = require_Dummy();
    var MultipartParser = require_Multipart();
    var errors = require_FormidableError();
    var { FormidableError } = errors;
    function hasOwnProp(obj, key) {
      return Object.prototype.hasOwnProperty.call(obj, key);
    }
    var IncomingForm = class extends EventEmitter {
      constructor(options = {}) {
        super();
        this.options = { ...DEFAULT_OPTIONS, ...options };
        const dir = path.resolve(
          this.options.uploadDir || this.options.uploaddir || os.tmpdir()
        );
        this.uploaddir = dir;
        this.uploadDir = dir;
        [
          "error",
          "headers",
          "type",
          "bytesExpected",
          "bytesReceived",
          "_parser"
        ].forEach((key) => {
          this[key] = null;
        });
        this._setUpRename();
        this._flushing = 0;
        this._fieldsSize = 0;
        this._fileSize = 0;
        this._plugins = [];
        this.openedFiles = [];
        this.options.enabledPlugins = [].concat(this.options.enabledPlugins).filter(Boolean);
        if (this.options.enabledPlugins.length === 0) {
          throw new FormidableError(
            "expect at least 1 enabled builtin plugin, see options.enabledPlugins",
            errors.missingPlugin
          );
        }
        this.options.enabledPlugins.forEach((pluginName) => {
          const plgName = pluginName.toLowerCase();
          this.use(__plugins[plgName]);
        });
        this._setUpMaxFields();
      }
      use(plugin) {
        if (typeof plugin !== "function") {
          throw new FormidableError(
            ".use: expect `plugin` to be a function",
            errors.pluginFunction
          );
        }
        this._plugins.push(plugin.bind(this));
        return this;
      }
      parse(req, cb) {
        this.pause = () => {
          try {
            req.pause();
          } catch (err) {
            if (!this.ended) {
              this._error(err);
            }
            return false;
          }
          return true;
        };
        this.resume = () => {
          try {
            req.resume();
          } catch (err) {
            if (!this.ended) {
              this._error(err);
            }
            return false;
          }
          return true;
        };
        if (cb) {
          const callback = once(dezalgo(cb));
          const fields = {};
          let mockFields = "";
          const files = {};
          this.on("field", (name, value) => {
            if (this.options.multiples && (this.type === "multipart" || this.type === "urlencoded")) {
              const mObj = { [name]: value };
              mockFields = mockFields ? `${mockFields}&${qs.stringify(mObj)}` : `${qs.stringify(mObj)}`;
            } else {
              fields[name] = value;
            }
          });
          this.on("file", (name, file) => {
            if (this.options.multiples) {
              if (hasOwnProp(files, name)) {
                if (!Array.isArray(files[name])) {
                  files[name] = [files[name]];
                }
                files[name].push(file);
              } else {
                files[name] = file;
              }
            } else {
              files[name] = file;
            }
          });
          this.on("error", (err) => {
            callback(err, fields, files);
          });
          this.on("end", () => {
            if (this.options.multiples) {
              Object.assign(fields, qs.parse(mockFields));
            }
            callback(null, fields, files);
          });
        }
        this.writeHeaders(req.headers);
        req.on("error", (err) => {
          this._error(err);
        }).on("aborted", () => {
          this.emit("aborted");
          this._error(new FormidableError("Request aborted", errors.aborted));
        }).on("data", (buffer) => {
          try {
            this.write(buffer);
          } catch (err) {
            this._error(err);
          }
        }).on("end", () => {
          if (this.error) {
            return;
          }
          if (this._parser) {
            this._parser.end();
          }
          this._maybeEnd();
        });
        return this;
      }
      writeHeaders(headers) {
        this.headers = headers;
        this._parseContentLength();
        this._parseContentType();
        if (!this._parser) {
          this._error(
            new FormidableError(
              "no parser found",
              errors.noParser,
              415
            )
          );
          return;
        }
        this._parser.once("error", (error) => {
          this._error(error);
        });
      }
      write(buffer) {
        if (this.error) {
          return null;
        }
        if (!this._parser) {
          this._error(
            new FormidableError("uninitialized parser", errors.uninitializedParser)
          );
          return null;
        }
        this.bytesReceived += buffer.length;
        this.emit("progress", this.bytesReceived, this.bytesExpected);
        this._parser.write(buffer);
        return this.bytesReceived;
      }
      pause() {
        return false;
      }
      resume() {
        return false;
      }
      onPart(part) {
        this._handlePart(part);
      }
      _handlePart(part) {
        if (part.originalFilename && typeof part.originalFilename !== "string") {
          this._error(
            new FormidableError(
              `the part.originalFilename should be string when it exists`,
              errors.filenameNotString
            )
          );
          return;
        }
        if (!part.mimetype) {
          let value = "";
          const decoder = new StringDecoder(
            part.transferEncoding || this.options.encoding
          );
          part.on("data", (buffer) => {
            this._fieldsSize += buffer.length;
            if (this._fieldsSize > this.options.maxFieldsSize) {
              this._error(
                new FormidableError(
                  `options.maxFieldsSize (${this.options.maxFieldsSize} bytes) exceeded, received ${this._fieldsSize} bytes of field data`,
                  errors.maxFieldsSizeExceeded,
                  413
                )
              );
              return;
            }
            value += decoder.write(buffer);
          });
          part.on("end", () => {
            this.emit("field", part.name, value);
          });
          return;
        }
        if (!this.options.filter(part)) {
          return;
        }
        this._flushing += 1;
        const newFilename = this._getNewName(part);
        const filepath = this._joinDirectoryName(newFilename);
        const file = this._newFile({
          newFilename,
          filepath,
          originalFilename: part.originalFilename,
          mimetype: part.mimetype
        });
        file.on("error", (err) => {
          this._error(err);
        });
        this.emit("fileBegin", part.name, file);
        file.open();
        this.openedFiles.push(file);
        part.on("data", (buffer) => {
          this._fileSize += buffer.length;
          if (this._fileSize < this.options.minFileSize) {
            this._error(
              new FormidableError(
                `options.minFileSize (${this.options.minFileSize} bytes) inferior, received ${this._fileSize} bytes of file data`,
                errors.smallerThanMinFileSize,
                400
              )
            );
            return;
          }
          if (this._fileSize > this.options.maxFileSize) {
            this._error(
              new FormidableError(
                `options.maxFileSize (${this.options.maxFileSize} bytes) exceeded, received ${this._fileSize} bytes of file data`,
                errors.biggerThanMaxFileSize,
                413
              )
            );
            return;
          }
          if (buffer.length === 0) {
            return;
          }
          this.pause();
          file.write(buffer, () => {
            this.resume();
          });
        });
        part.on("end", () => {
          if (!this.options.allowEmptyFiles && this._fileSize === 0) {
            this._error(
              new FormidableError(
                `options.allowEmptyFiles is false, file size should be greather than 0`,
                errors.noEmptyFiles,
                400
              )
            );
            return;
          }
          file.end(() => {
            this._flushing -= 1;
            this.emit("file", part.name, file);
            this._maybeEnd();
          });
        });
      }
      _parseContentType() {
        if (this.bytesExpected === 0) {
          this._parser = new DummyParser(this, this.options);
          return;
        }
        if (!this.headers["content-type"]) {
          this._error(
            new FormidableError(
              "bad content-type header, no content-type",
              errors.missingContentType,
              400
            )
          );
          return;
        }
        const results = [];
        const _dummyParser = new DummyParser(this, this.options);
        for (let idx = 0; idx < this._plugins.length; idx++) {
          const plugin = this._plugins[idx];
          let pluginReturn = null;
          try {
            pluginReturn = plugin(this, this.options) || this;
          } catch (err) {
            const error = new FormidableError(
              `plugin on index ${idx} failed with: ${err.message}`,
              errors.pluginFailed,
              500
            );
            error.idx = idx;
            throw error;
          }
          Object.assign(this, pluginReturn);
          this.emit("plugin", idx, pluginReturn);
          results.push(pluginReturn);
        }
        this.emit("pluginsResults", results);
      }
      _error(err, eventName = "error") {
        if (this.error || this.ended) {
          return;
        }
        this.error = err;
        this.emit(eventName, err);
        if (Array.isArray(this.openedFiles)) {
          this.openedFiles.forEach((file) => {
            file.destroy();
          });
        }
      }
      _parseContentLength() {
        this.bytesReceived = 0;
        if (this.headers["content-length"]) {
          this.bytesExpected = parseInt(this.headers["content-length"], 10);
        } else if (this.headers["transfer-encoding"] === void 0) {
          this.bytesExpected = 0;
        }
        if (this.bytesExpected !== null) {
          this.emit("progress", this.bytesReceived, this.bytesExpected);
        }
      }
      _newParser() {
        return new MultipartParser(this.options);
      }
      _newFile({ filepath, originalFilename, mimetype, newFilename }) {
        return this.options.fileWriteStreamHandler ? new VolatileFile({
          newFilename,
          filepath,
          originalFilename,
          mimetype,
          createFileWriteStream: this.options.fileWriteStreamHandler,
          hashAlgorithm: this.options.hashAlgorithm
        }) : new PersistentFile({
          newFilename,
          filepath,
          originalFilename,
          mimetype,
          hashAlgorithm: this.options.hashAlgorithm
        });
      }
      _getFileName(headerValue) {
        const m = headerValue.match(
          /\bfilename=("(.*?)"|([^()<>{}[\]@,;:"?=\s/\t]+))($|;\s)/i
        );
        if (!m)
          return null;
        const match = m[2] || m[3] || "";
        let originalFilename = match.substr(match.lastIndexOf("\\") + 1);
        originalFilename = originalFilename.replace(/%22/g, '"');
        originalFilename = originalFilename.replace(
          /&#([\d]{4});/g,
          (_, code) => String.fromCharCode(code)
        );
        return originalFilename;
      }
      _getExtension(str) {
        if (!str) {
          return "";
        }
        const basename = path.basename(str);
        const firstDot = basename.indexOf(".");
        const lastDot = basename.lastIndexOf(".");
        const extname = path.extname(basename).replace(/(\.[a-z0-9]+).*/i, "$1");
        if (firstDot === lastDot) {
          return extname;
        }
        return basename.slice(firstDot, lastDot) + extname;
      }
      _joinDirectoryName(name) {
        const newPath = path.join(this.uploadDir, name);
        if (!newPath.startsWith(this.uploadDir)) {
          return path.join(this.uploadDir, this.options.defaultInvalidName);
        }
        return newPath;
      }
      _setUpRename() {
        const hasRename = typeof this.options.filename === "function";
        if (hasRename) {
          this._getNewName = (part) => {
            let ext = "";
            let name = this.options.defaultInvalidName;
            if (part.originalFilename) {
              ({ ext, name } = path.parse(part.originalFilename));
              if (this.options.keepExtensions !== true) {
                ext = "";
              }
            }
            return this.options.filename.call(this, name, ext, part, this);
          };
        } else {
          this._getNewName = (part) => {
            const name = toHexoId();
            if (part && this.options.keepExtensions) {
              const originalFilename = typeof part === "string" ? part : part.originalFilename;
              return `${name}${this._getExtension(originalFilename)}`;
            }
            return name;
          };
        }
      }
      _setUpMaxFields() {
        if (this.options.maxFields !== 0) {
          let fieldsCount = 0;
          this.on("field", () => {
            fieldsCount += 1;
            if (fieldsCount > this.options.maxFields) {
              this._error(
                new FormidableError(
                  `options.maxFields (${this.options.maxFields}) exceeded`,
                  errors.maxFieldsExceeded,
                  413
                )
              );
            }
          });
        }
      }
      _maybeEnd() {
        if (!this.ended || this._flushing || this.error) {
          return;
        }
        this.emit("end");
      }
    };
    IncomingForm.DEFAULT_OPTIONS = DEFAULT_OPTIONS;
    module2.exports = IncomingForm;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/index.js
var require_parsers = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/parsers/index.js"(exports) {
    "use strict";
    var JSONParser = require_JSON();
    var DummyParser = require_Dummy();
    var MultipartParser = require_Multipart();
    var OctetStreamParser = require_OctetStream();
    var QueryStringParser = require_Querystring();
    Object.assign(exports, {
      JSONParser,
      DummyParser,
      MultipartParser,
      OctetStreamParser,
      OctetstreamParser: OctetStreamParser,
      QueryStringParser,
      QuerystringParser: QueryStringParser
    });
  }
});

// node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/index.js
var require_src2 = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+formidable-fix@2.1.4/node_modules/formidable-fix/src/index.js"(exports, module2) {
    "use strict";
    var PersistentFile = require_PersistentFile();
    var VolatileFile = require_VolatileFile();
    var Formidable = require_Formidable();
    var FormidableError = require_FormidableError();
    var plugins = require_plugins();
    var parsers = require_parsers();
    var formidable = (...args) => new Formidable(...args);
    module2.exports = Object.assign(formidable, {
      errors: FormidableError,
      File: PersistentFile,
      PersistentFile,
      VolatileFile,
      Formidable,
      formidable,
      IncomingForm: Formidable,
      ...parsers,
      parsers,
      defaultOptions: Formidable.DEFAULT_OPTIONS,
      enabledPlugins: Formidable.DEFAULT_OPTIONS.enabledPlugins,
      plugins: {
        ...plugins
      }
    });
  }
});

// node_modules/.pnpm/registry.npmmirror.com+sener-form@0.0.13/node_modules/sener-form/dist/sener-form.cjs.js
var require_sener_form_cjs = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+sener-form@0.0.13/node_modules/sener-form/dist/sener-form.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var senerTypes = require_sener_types_cjs();
    var formidable = require_src2();
    var path = require("path");
    function _interopDefaultLegacy(e) {
      return e && "object" == typeof e && "default" in e ? e : { default: e };
    }
    var formidable__default = _interopDefaultLegacy(formidable);
    var path__default = _interopDefaultLegacy(path);
    function _classCallCheck(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e, t) {
      for (var r = 0; r < t.length; r++) {
        var o = t[r];
        o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);
      }
    }
    function _createClass(e, t, r) {
      return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _inherits(e, t) {
      if ("function" != typeof t && null !== t)
        throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: true, configurable: true } }), Object.defineProperty(e, "prototype", { writable: false }), t && _setPrototypeOf(e, t);
    }
    function _getPrototypeOf(e) {
      return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e2) {
        return e2.__proto__ || Object.getPrototypeOf(e2);
      })(e);
    }
    function _setPrototypeOf(e, t) {
      return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e2, t2) {
        return e2.__proto__ = t2, e2;
      })(e, t);
    }
    function _isNativeReflectConstruct() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e) {
        return false;
      }
    }
    function _assertThisInitialized(e) {
      if (void 0 === e)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }
    function _possibleConstructorReturn(e, t) {
      if (t && ("object" == typeof t || "function" == typeof t))
        return t;
      if (void 0 !== t)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(e);
    }
    function _createSuper(r) {
      var o = _isNativeReflectConstruct();
      return function() {
        var e, t = _getPrototypeOf(r);
        return _possibleConstructorReturn(this, o ? (e = _getPrototypeOf(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments));
      };
    }
    function _toPrimitive(e, t) {
      if ("object" != typeof e || null === e)
        return e;
      var r = e[Symbol.toPrimitive];
      if (void 0 === r)
        return ("string" === t ? String : Number)(e);
      r = r.call(e, t || "default");
      if ("object" != typeof r)
        return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    function _toPropertyKey(e) {
      e = _toPrimitive(e, "string");
      return "symbol" == typeof e ? e : String(e);
    }
    var Form2 = function() {
      _inherits(o, senerTypes.MiddleWare);
      var r = _createSuper(o);
      function o() {
        var e, t = (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).dir, t = void 0 === t ? "./public/upload" : t;
        return _classCallCheck(this, o), (e = r.call(this)).dir = t, e;
      }
      return _createClass(o, [{ key: "getUploadDir", value: function() {
        var e = new Date(), t = e.getMonth() + 1, e = "".concat(e.getFullYear(), "_").concat(t < 10 ? "0" : "").concat(t), t = path__default.default.resolve(process.cwd(), this.dir, e);
        return senerTypes.makedir(t), t;
      } }, { key: "request", value: function(e) {
        var t = this, r2 = e.request, o2 = e.requestHeaders, n = e.method, i = e.sendJson;
        if (null != (e = o2["content-type"]) && e.includes("multipart/form-data") && "POST" === n)
          return new Promise(function(o3) {
            var e2 = t.getUploadDir();
            formidable__default.default({ uploadDir: e2 }).parse(r2, function(e3, t2, r3) {
              e3 ? (e3.code === formidable.errors.maxFieldsExceeded ? i({ code: -1, data: { msg: "maxFieldsExceeded" } }) : i({ code: -2, data: { code: e3.code, msg: e3.toString() } }, 400), o3(senerTypes.MiddleWareReturn.Return)) : o3({ formData: t2, files: r3 });
            });
          });
      } }]), o;
    }();
    exports.Form = Form2;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/Mime.js
var require_Mime = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/Mime.js"(exports, module2) {
    "use strict";
    function Mime() {
      this._types = /* @__PURE__ */ Object.create(null);
      this._extensions = /* @__PURE__ */ Object.create(null);
      for (let i = 0; i < arguments.length; i++) {
        this.define(arguments[i]);
      }
      this.define = this.define.bind(this);
      this.getType = this.getType.bind(this);
      this.getExtension = this.getExtension.bind(this);
    }
    Mime.prototype.define = function(typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function(t) {
          return t.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i = 0; i < extensions.length; i++) {
          const ext = extensions[i];
          if (ext[0] === "*") {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error(
              'Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".'
            );
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
        }
      }
    };
    Mime.prototype.getType = function(path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, "").toLowerCase();
      let ext = last.replace(/^.*\./, "").toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return (hasDot || !hasPath) && this._types[ext] || null;
    };
    Mime.prototype.getExtension = function(type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return type && this._extensions[type.toLowerCase()] || null;
    };
    module2.exports = Mime;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/types/standard.js
var require_standard = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/types/standard.js"(exports, module2) {
    module2.exports = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/types/other.js
var require_other = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/types/other.js"(exports, module2) {
    module2.exports = { "application/prs.cww": ["cww"], "application/vnd.1000minds.decision-model+xml": ["1km"], "application/vnd.3gpp.pic-bw-large": ["plb"], "application/vnd.3gpp.pic-bw-small": ["psb"], "application/vnd.3gpp.pic-bw-var": ["pvb"], "application/vnd.3gpp2.tcap": ["tcap"], "application/vnd.3m.post-it-notes": ["pwn"], "application/vnd.accpac.simply.aso": ["aso"], "application/vnd.accpac.simply.imp": ["imp"], "application/vnd.acucobol": ["acu"], "application/vnd.acucorp": ["atc", "acutc"], "application/vnd.adobe.air-application-installer-package+zip": ["air"], "application/vnd.adobe.formscentral.fcdt": ["fcdt"], "application/vnd.adobe.fxp": ["fxp", "fxpl"], "application/vnd.adobe.xdp+xml": ["xdp"], "application/vnd.adobe.xfdf": ["xfdf"], "application/vnd.ahead.space": ["ahead"], "application/vnd.airzip.filesecure.azf": ["azf"], "application/vnd.airzip.filesecure.azs": ["azs"], "application/vnd.amazon.ebook": ["azw"], "application/vnd.americandynamics.acc": ["acc"], "application/vnd.amiga.ami": ["ami"], "application/vnd.android.package-archive": ["apk"], "application/vnd.anser-web-certificate-issue-initiation": ["cii"], "application/vnd.anser-web-funds-transfer-initiation": ["fti"], "application/vnd.antix.game-component": ["atx"], "application/vnd.apple.installer+xml": ["mpkg"], "application/vnd.apple.keynote": ["key"], "application/vnd.apple.mpegurl": ["m3u8"], "application/vnd.apple.numbers": ["numbers"], "application/vnd.apple.pages": ["pages"], "application/vnd.apple.pkpass": ["pkpass"], "application/vnd.aristanetworks.swi": ["swi"], "application/vnd.astraea-software.iota": ["iota"], "application/vnd.audiograph": ["aep"], "application/vnd.balsamiq.bmml+xml": ["bmml"], "application/vnd.blueice.multipass": ["mpm"], "application/vnd.bmi": ["bmi"], "application/vnd.businessobjects": ["rep"], "application/vnd.chemdraw+xml": ["cdxml"], "application/vnd.chipnuts.karaoke-mmd": ["mmd"], "application/vnd.cinderella": ["cdy"], "application/vnd.citationstyles.style+xml": ["csl"], "application/vnd.claymore": ["cla"], "application/vnd.cloanto.rp9": ["rp9"], "application/vnd.clonk.c4group": ["c4g", "c4d", "c4f", "c4p", "c4u"], "application/vnd.cluetrust.cartomobile-config": ["c11amc"], "application/vnd.cluetrust.cartomobile-config-pkg": ["c11amz"], "application/vnd.commonspace": ["csp"], "application/vnd.contact.cmsg": ["cdbcmsg"], "application/vnd.cosmocaller": ["cmc"], "application/vnd.crick.clicker": ["clkx"], "application/vnd.crick.clicker.keyboard": ["clkk"], "application/vnd.crick.clicker.palette": ["clkp"], "application/vnd.crick.clicker.template": ["clkt"], "application/vnd.crick.clicker.wordbank": ["clkw"], "application/vnd.criticaltools.wbs+xml": ["wbs"], "application/vnd.ctc-posml": ["pml"], "application/vnd.cups-ppd": ["ppd"], "application/vnd.curl.car": ["car"], "application/vnd.curl.pcurl": ["pcurl"], "application/vnd.dart": ["dart"], "application/vnd.data-vision.rdz": ["rdz"], "application/vnd.dbf": ["dbf"], "application/vnd.dece.data": ["uvf", "uvvf", "uvd", "uvvd"], "application/vnd.dece.ttml+xml": ["uvt", "uvvt"], "application/vnd.dece.unspecified": ["uvx", "uvvx"], "application/vnd.dece.zip": ["uvz", "uvvz"], "application/vnd.denovo.fcselayout-link": ["fe_launch"], "application/vnd.dna": ["dna"], "application/vnd.dolby.mlp": ["mlp"], "application/vnd.dpgraph": ["dpg"], "application/vnd.dreamfactory": ["dfac"], "application/vnd.ds-keypoint": ["kpxx"], "application/vnd.dvb.ait": ["ait"], "application/vnd.dvb.service": ["svc"], "application/vnd.dynageo": ["geo"], "application/vnd.ecowin.chart": ["mag"], "application/vnd.enliven": ["nml"], "application/vnd.epson.esf": ["esf"], "application/vnd.epson.msf": ["msf"], "application/vnd.epson.quickanime": ["qam"], "application/vnd.epson.salt": ["slt"], "application/vnd.epson.ssf": ["ssf"], "application/vnd.eszigno3+xml": ["es3", "et3"], "application/vnd.ezpix-album": ["ez2"], "application/vnd.ezpix-package": ["ez3"], "application/vnd.fdf": ["fdf"], "application/vnd.fdsn.mseed": ["mseed"], "application/vnd.fdsn.seed": ["seed", "dataless"], "application/vnd.flographit": ["gph"], "application/vnd.fluxtime.clip": ["ftc"], "application/vnd.framemaker": ["fm", "frame", "maker", "book"], "application/vnd.frogans.fnc": ["fnc"], "application/vnd.frogans.ltf": ["ltf"], "application/vnd.fsc.weblaunch": ["fsc"], "application/vnd.fujitsu.oasys": ["oas"], "application/vnd.fujitsu.oasys2": ["oa2"], "application/vnd.fujitsu.oasys3": ["oa3"], "application/vnd.fujitsu.oasysgp": ["fg5"], "application/vnd.fujitsu.oasysprs": ["bh2"], "application/vnd.fujixerox.ddd": ["ddd"], "application/vnd.fujixerox.docuworks": ["xdw"], "application/vnd.fujixerox.docuworks.binder": ["xbd"], "application/vnd.fuzzysheet": ["fzs"], "application/vnd.genomatix.tuxedo": ["txd"], "application/vnd.geogebra.file": ["ggb"], "application/vnd.geogebra.tool": ["ggt"], "application/vnd.geometry-explorer": ["gex", "gre"], "application/vnd.geonext": ["gxt"], "application/vnd.geoplan": ["g2w"], "application/vnd.geospace": ["g3w"], "application/vnd.gmx": ["gmx"], "application/vnd.google-apps.document": ["gdoc"], "application/vnd.google-apps.presentation": ["gslides"], "application/vnd.google-apps.spreadsheet": ["gsheet"], "application/vnd.google-earth.kml+xml": ["kml"], "application/vnd.google-earth.kmz": ["kmz"], "application/vnd.grafeq": ["gqf", "gqs"], "application/vnd.groove-account": ["gac"], "application/vnd.groove-help": ["ghf"], "application/vnd.groove-identity-message": ["gim"], "application/vnd.groove-injector": ["grv"], "application/vnd.groove-tool-message": ["gtm"], "application/vnd.groove-tool-template": ["tpl"], "application/vnd.groove-vcard": ["vcg"], "application/vnd.hal+xml": ["hal"], "application/vnd.handheld-entertainment+xml": ["zmm"], "application/vnd.hbci": ["hbci"], "application/vnd.hhe.lesson-player": ["les"], "application/vnd.hp-hpgl": ["hpgl"], "application/vnd.hp-hpid": ["hpid"], "application/vnd.hp-hps": ["hps"], "application/vnd.hp-jlyt": ["jlt"], "application/vnd.hp-pcl": ["pcl"], "application/vnd.hp-pclxl": ["pclxl"], "application/vnd.hydrostatix.sof-data": ["sfd-hdstx"], "application/vnd.ibm.minipay": ["mpy"], "application/vnd.ibm.modcap": ["afp", "listafp", "list3820"], "application/vnd.ibm.rights-management": ["irm"], "application/vnd.ibm.secure-container": ["sc"], "application/vnd.iccprofile": ["icc", "icm"], "application/vnd.igloader": ["igl"], "application/vnd.immervision-ivp": ["ivp"], "application/vnd.immervision-ivu": ["ivu"], "application/vnd.insors.igm": ["igm"], "application/vnd.intercon.formnet": ["xpw", "xpx"], "application/vnd.intergeo": ["i2g"], "application/vnd.intu.qbo": ["qbo"], "application/vnd.intu.qfx": ["qfx"], "application/vnd.ipunplugged.rcprofile": ["rcprofile"], "application/vnd.irepository.package+xml": ["irp"], "application/vnd.is-xpr": ["xpr"], "application/vnd.isac.fcs": ["fcs"], "application/vnd.jam": ["jam"], "application/vnd.jcp.javame.midlet-rms": ["rms"], "application/vnd.jisp": ["jisp"], "application/vnd.joost.joda-archive": ["joda"], "application/vnd.kahootz": ["ktz", "ktr"], "application/vnd.kde.karbon": ["karbon"], "application/vnd.kde.kchart": ["chrt"], "application/vnd.kde.kformula": ["kfo"], "application/vnd.kde.kivio": ["flw"], "application/vnd.kde.kontour": ["kon"], "application/vnd.kde.kpresenter": ["kpr", "kpt"], "application/vnd.kde.kspread": ["ksp"], "application/vnd.kde.kword": ["kwd", "kwt"], "application/vnd.kenameaapp": ["htke"], "application/vnd.kidspiration": ["kia"], "application/vnd.kinar": ["kne", "knp"], "application/vnd.koan": ["skp", "skd", "skt", "skm"], "application/vnd.kodak-descriptor": ["sse"], "application/vnd.las.las+xml": ["lasxml"], "application/vnd.llamagraphics.life-balance.desktop": ["lbd"], "application/vnd.llamagraphics.life-balance.exchange+xml": ["lbe"], "application/vnd.lotus-1-2-3": ["123"], "application/vnd.lotus-approach": ["apr"], "application/vnd.lotus-freelance": ["pre"], "application/vnd.lotus-notes": ["nsf"], "application/vnd.lotus-organizer": ["org"], "application/vnd.lotus-screencam": ["scm"], "application/vnd.lotus-wordpro": ["lwp"], "application/vnd.macports.portpkg": ["portpkg"], "application/vnd.mapbox-vector-tile": ["mvt"], "application/vnd.mcd": ["mcd"], "application/vnd.medcalcdata": ["mc1"], "application/vnd.mediastation.cdkey": ["cdkey"], "application/vnd.mfer": ["mwf"], "application/vnd.mfmp": ["mfm"], "application/vnd.micrografx.flo": ["flo"], "application/vnd.micrografx.igx": ["igx"], "application/vnd.mif": ["mif"], "application/vnd.mobius.daf": ["daf"], "application/vnd.mobius.dis": ["dis"], "application/vnd.mobius.mbk": ["mbk"], "application/vnd.mobius.mqy": ["mqy"], "application/vnd.mobius.msl": ["msl"], "application/vnd.mobius.plc": ["plc"], "application/vnd.mobius.txf": ["txf"], "application/vnd.mophun.application": ["mpn"], "application/vnd.mophun.certificate": ["mpc"], "application/vnd.mozilla.xul+xml": ["xul"], "application/vnd.ms-artgalry": ["cil"], "application/vnd.ms-cab-compressed": ["cab"], "application/vnd.ms-excel": ["xls", "xlm", "xla", "xlc", "xlt", "xlw"], "application/vnd.ms-excel.addin.macroenabled.12": ["xlam"], "application/vnd.ms-excel.sheet.binary.macroenabled.12": ["xlsb"], "application/vnd.ms-excel.sheet.macroenabled.12": ["xlsm"], "application/vnd.ms-excel.template.macroenabled.12": ["xltm"], "application/vnd.ms-fontobject": ["eot"], "application/vnd.ms-htmlhelp": ["chm"], "application/vnd.ms-ims": ["ims"], "application/vnd.ms-lrm": ["lrm"], "application/vnd.ms-officetheme": ["thmx"], "application/vnd.ms-outlook": ["msg"], "application/vnd.ms-pki.seccat": ["cat"], "application/vnd.ms-pki.stl": ["*stl"], "application/vnd.ms-powerpoint": ["ppt", "pps", "pot"], "application/vnd.ms-powerpoint.addin.macroenabled.12": ["ppam"], "application/vnd.ms-powerpoint.presentation.macroenabled.12": ["pptm"], "application/vnd.ms-powerpoint.slide.macroenabled.12": ["sldm"], "application/vnd.ms-powerpoint.slideshow.macroenabled.12": ["ppsm"], "application/vnd.ms-powerpoint.template.macroenabled.12": ["potm"], "application/vnd.ms-project": ["mpp", "mpt"], "application/vnd.ms-word.document.macroenabled.12": ["docm"], "application/vnd.ms-word.template.macroenabled.12": ["dotm"], "application/vnd.ms-works": ["wps", "wks", "wcm", "wdb"], "application/vnd.ms-wpl": ["wpl"], "application/vnd.ms-xpsdocument": ["xps"], "application/vnd.mseq": ["mseq"], "application/vnd.musician": ["mus"], "application/vnd.muvee.style": ["msty"], "application/vnd.mynfc": ["taglet"], "application/vnd.neurolanguage.nlu": ["nlu"], "application/vnd.nitf": ["ntf", "nitf"], "application/vnd.noblenet-directory": ["nnd"], "application/vnd.noblenet-sealer": ["nns"], "application/vnd.noblenet-web": ["nnw"], "application/vnd.nokia.n-gage.ac+xml": ["*ac"], "application/vnd.nokia.n-gage.data": ["ngdat"], "application/vnd.nokia.n-gage.symbian.install": ["n-gage"], "application/vnd.nokia.radio-preset": ["rpst"], "application/vnd.nokia.radio-presets": ["rpss"], "application/vnd.novadigm.edm": ["edm"], "application/vnd.novadigm.edx": ["edx"], "application/vnd.novadigm.ext": ["ext"], "application/vnd.oasis.opendocument.chart": ["odc"], "application/vnd.oasis.opendocument.chart-template": ["otc"], "application/vnd.oasis.opendocument.database": ["odb"], "application/vnd.oasis.opendocument.formula": ["odf"], "application/vnd.oasis.opendocument.formula-template": ["odft"], "application/vnd.oasis.opendocument.graphics": ["odg"], "application/vnd.oasis.opendocument.graphics-template": ["otg"], "application/vnd.oasis.opendocument.image": ["odi"], "application/vnd.oasis.opendocument.image-template": ["oti"], "application/vnd.oasis.opendocument.presentation": ["odp"], "application/vnd.oasis.opendocument.presentation-template": ["otp"], "application/vnd.oasis.opendocument.spreadsheet": ["ods"], "application/vnd.oasis.opendocument.spreadsheet-template": ["ots"], "application/vnd.oasis.opendocument.text": ["odt"], "application/vnd.oasis.opendocument.text-master": ["odm"], "application/vnd.oasis.opendocument.text-template": ["ott"], "application/vnd.oasis.opendocument.text-web": ["oth"], "application/vnd.olpc-sugar": ["xo"], "application/vnd.oma.dd2+xml": ["dd2"], "application/vnd.openblox.game+xml": ["obgx"], "application/vnd.openofficeorg.extension": ["oxt"], "application/vnd.openstreetmap.data+xml": ["osm"], "application/vnd.openxmlformats-officedocument.presentationml.presentation": ["pptx"], "application/vnd.openxmlformats-officedocument.presentationml.slide": ["sldx"], "application/vnd.openxmlformats-officedocument.presentationml.slideshow": ["ppsx"], "application/vnd.openxmlformats-officedocument.presentationml.template": ["potx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": ["xlsx"], "application/vnd.openxmlformats-officedocument.spreadsheetml.template": ["xltx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"], "application/vnd.openxmlformats-officedocument.wordprocessingml.template": ["dotx"], "application/vnd.osgeo.mapguide.package": ["mgp"], "application/vnd.osgi.dp": ["dp"], "application/vnd.osgi.subsystem": ["esa"], "application/vnd.palm": ["pdb", "pqa", "oprc"], "application/vnd.pawaafile": ["paw"], "application/vnd.pg.format": ["str"], "application/vnd.pg.osasli": ["ei6"], "application/vnd.picsel": ["efif"], "application/vnd.pmi.widget": ["wg"], "application/vnd.pocketlearn": ["plf"], "application/vnd.powerbuilder6": ["pbd"], "application/vnd.previewsystems.box": ["box"], "application/vnd.proteus.magazine": ["mgz"], "application/vnd.publishare-delta-tree": ["qps"], "application/vnd.pvi.ptid1": ["ptid"], "application/vnd.quark.quarkxpress": ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"], "application/vnd.rar": ["rar"], "application/vnd.realvnc.bed": ["bed"], "application/vnd.recordare.musicxml": ["mxl"], "application/vnd.recordare.musicxml+xml": ["musicxml"], "application/vnd.rig.cryptonote": ["cryptonote"], "application/vnd.rim.cod": ["cod"], "application/vnd.rn-realmedia": ["rm"], "application/vnd.rn-realmedia-vbr": ["rmvb"], "application/vnd.route66.link66+xml": ["link66"], "application/vnd.sailingtracker.track": ["st"], "application/vnd.seemail": ["see"], "application/vnd.sema": ["sema"], "application/vnd.semd": ["semd"], "application/vnd.semf": ["semf"], "application/vnd.shana.informed.formdata": ["ifm"], "application/vnd.shana.informed.formtemplate": ["itp"], "application/vnd.shana.informed.interchange": ["iif"], "application/vnd.shana.informed.package": ["ipk"], "application/vnd.simtech-mindmapper": ["twd", "twds"], "application/vnd.smaf": ["mmf"], "application/vnd.smart.teacher": ["teacher"], "application/vnd.software602.filler.form+xml": ["fo"], "application/vnd.solent.sdkm+xml": ["sdkm", "sdkd"], "application/vnd.spotfire.dxp": ["dxp"], "application/vnd.spotfire.sfs": ["sfs"], "application/vnd.stardivision.calc": ["sdc"], "application/vnd.stardivision.draw": ["sda"], "application/vnd.stardivision.impress": ["sdd"], "application/vnd.stardivision.math": ["smf"], "application/vnd.stardivision.writer": ["sdw", "vor"], "application/vnd.stardivision.writer-global": ["sgl"], "application/vnd.stepmania.package": ["smzip"], "application/vnd.stepmania.stepchart": ["sm"], "application/vnd.sun.wadl+xml": ["wadl"], "application/vnd.sun.xml.calc": ["sxc"], "application/vnd.sun.xml.calc.template": ["stc"], "application/vnd.sun.xml.draw": ["sxd"], "application/vnd.sun.xml.draw.template": ["std"], "application/vnd.sun.xml.impress": ["sxi"], "application/vnd.sun.xml.impress.template": ["sti"], "application/vnd.sun.xml.math": ["sxm"], "application/vnd.sun.xml.writer": ["sxw"], "application/vnd.sun.xml.writer.global": ["sxg"], "application/vnd.sun.xml.writer.template": ["stw"], "application/vnd.sus-calendar": ["sus", "susp"], "application/vnd.svd": ["svd"], "application/vnd.symbian.install": ["sis", "sisx"], "application/vnd.syncml+xml": ["xsm"], "application/vnd.syncml.dm+wbxml": ["bdm"], "application/vnd.syncml.dm+xml": ["xdm"], "application/vnd.syncml.dmddf+xml": ["ddf"], "application/vnd.tao.intent-module-archive": ["tao"], "application/vnd.tcpdump.pcap": ["pcap", "cap", "dmp"], "application/vnd.tmobile-livetv": ["tmo"], "application/vnd.trid.tpt": ["tpt"], "application/vnd.triscape.mxs": ["mxs"], "application/vnd.trueapp": ["tra"], "application/vnd.ufdl": ["ufd", "ufdl"], "application/vnd.uiq.theme": ["utz"], "application/vnd.umajin": ["umj"], "application/vnd.unity": ["unityweb"], "application/vnd.uoml+xml": ["uoml"], "application/vnd.vcx": ["vcx"], "application/vnd.visio": ["vsd", "vst", "vss", "vsw"], "application/vnd.visionary": ["vis"], "application/vnd.vsf": ["vsf"], "application/vnd.wap.wbxml": ["wbxml"], "application/vnd.wap.wmlc": ["wmlc"], "application/vnd.wap.wmlscriptc": ["wmlsc"], "application/vnd.webturbo": ["wtb"], "application/vnd.wolfram.player": ["nbp"], "application/vnd.wordperfect": ["wpd"], "application/vnd.wqd": ["wqd"], "application/vnd.wt.stf": ["stf"], "application/vnd.xara": ["xar"], "application/vnd.xfdl": ["xfdl"], "application/vnd.yamaha.hv-dic": ["hvd"], "application/vnd.yamaha.hv-script": ["hvs"], "application/vnd.yamaha.hv-voice": ["hvp"], "application/vnd.yamaha.openscoreformat": ["osf"], "application/vnd.yamaha.openscoreformat.osfpvg+xml": ["osfpvg"], "application/vnd.yamaha.smaf-audio": ["saf"], "application/vnd.yamaha.smaf-phrase": ["spf"], "application/vnd.yellowriver-custom-menu": ["cmp"], "application/vnd.zul": ["zir", "zirz"], "application/vnd.zzazz.deck+xml": ["zaz"], "application/x-7z-compressed": ["7z"], "application/x-abiword": ["abw"], "application/x-ace-compressed": ["ace"], "application/x-apple-diskimage": ["*dmg"], "application/x-arj": ["arj"], "application/x-authorware-bin": ["aab", "x32", "u32", "vox"], "application/x-authorware-map": ["aam"], "application/x-authorware-seg": ["aas"], "application/x-bcpio": ["bcpio"], "application/x-bdoc": ["*bdoc"], "application/x-bittorrent": ["torrent"], "application/x-blorb": ["blb", "blorb"], "application/x-bzip": ["bz"], "application/x-bzip2": ["bz2", "boz"], "application/x-cbr": ["cbr", "cba", "cbt", "cbz", "cb7"], "application/x-cdlink": ["vcd"], "application/x-cfs-compressed": ["cfs"], "application/x-chat": ["chat"], "application/x-chess-pgn": ["pgn"], "application/x-chrome-extension": ["crx"], "application/x-cocoa": ["cco"], "application/x-conference": ["nsc"], "application/x-cpio": ["cpio"], "application/x-csh": ["csh"], "application/x-debian-package": ["*deb", "udeb"], "application/x-dgc-compressed": ["dgc"], "application/x-director": ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"], "application/x-doom": ["wad"], "application/x-dtbncx+xml": ["ncx"], "application/x-dtbook+xml": ["dtb"], "application/x-dtbresource+xml": ["res"], "application/x-dvi": ["dvi"], "application/x-envoy": ["evy"], "application/x-eva": ["eva"], "application/x-font-bdf": ["bdf"], "application/x-font-ghostscript": ["gsf"], "application/x-font-linux-psf": ["psf"], "application/x-font-pcf": ["pcf"], "application/x-font-snf": ["snf"], "application/x-font-type1": ["pfa", "pfb", "pfm", "afm"], "application/x-freearc": ["arc"], "application/x-futuresplash": ["spl"], "application/x-gca-compressed": ["gca"], "application/x-glulx": ["ulx"], "application/x-gnumeric": ["gnumeric"], "application/x-gramps-xml": ["gramps"], "application/x-gtar": ["gtar"], "application/x-hdf": ["hdf"], "application/x-httpd-php": ["php"], "application/x-install-instructions": ["install"], "application/x-iso9660-image": ["*iso"], "application/x-iwork-keynote-sffkey": ["*key"], "application/x-iwork-numbers-sffnumbers": ["*numbers"], "application/x-iwork-pages-sffpages": ["*pages"], "application/x-java-archive-diff": ["jardiff"], "application/x-java-jnlp-file": ["jnlp"], "application/x-keepass2": ["kdbx"], "application/x-latex": ["latex"], "application/x-lua-bytecode": ["luac"], "application/x-lzh-compressed": ["lzh", "lha"], "application/x-makeself": ["run"], "application/x-mie": ["mie"], "application/x-mobipocket-ebook": ["prc", "mobi"], "application/x-ms-application": ["application"], "application/x-ms-shortcut": ["lnk"], "application/x-ms-wmd": ["wmd"], "application/x-ms-wmz": ["wmz"], "application/x-ms-xbap": ["xbap"], "application/x-msaccess": ["mdb"], "application/x-msbinder": ["obd"], "application/x-mscardfile": ["crd"], "application/x-msclip": ["clp"], "application/x-msdos-program": ["*exe"], "application/x-msdownload": ["*exe", "*dll", "com", "bat", "*msi"], "application/x-msmediaview": ["mvb", "m13", "m14"], "application/x-msmetafile": ["*wmf", "*wmz", "*emf", "emz"], "application/x-msmoney": ["mny"], "application/x-mspublisher": ["pub"], "application/x-msschedule": ["scd"], "application/x-msterminal": ["trm"], "application/x-mswrite": ["wri"], "application/x-netcdf": ["nc", "cdf"], "application/x-ns-proxy-autoconfig": ["pac"], "application/x-nzb": ["nzb"], "application/x-perl": ["pl", "pm"], "application/x-pilot": ["*prc", "*pdb"], "application/x-pkcs12": ["p12", "pfx"], "application/x-pkcs7-certificates": ["p7b", "spc"], "application/x-pkcs7-certreqresp": ["p7r"], "application/x-rar-compressed": ["*rar"], "application/x-redhat-package-manager": ["rpm"], "application/x-research-info-systems": ["ris"], "application/x-sea": ["sea"], "application/x-sh": ["sh"], "application/x-shar": ["shar"], "application/x-shockwave-flash": ["swf"], "application/x-silverlight-app": ["xap"], "application/x-sql": ["sql"], "application/x-stuffit": ["sit"], "application/x-stuffitx": ["sitx"], "application/x-subrip": ["srt"], "application/x-sv4cpio": ["sv4cpio"], "application/x-sv4crc": ["sv4crc"], "application/x-t3vm-image": ["t3"], "application/x-tads": ["gam"], "application/x-tar": ["tar"], "application/x-tcl": ["tcl", "tk"], "application/x-tex": ["tex"], "application/x-tex-tfm": ["tfm"], "application/x-texinfo": ["texinfo", "texi"], "application/x-tgif": ["*obj"], "application/x-ustar": ["ustar"], "application/x-virtualbox-hdd": ["hdd"], "application/x-virtualbox-ova": ["ova"], "application/x-virtualbox-ovf": ["ovf"], "application/x-virtualbox-vbox": ["vbox"], "application/x-virtualbox-vbox-extpack": ["vbox-extpack"], "application/x-virtualbox-vdi": ["vdi"], "application/x-virtualbox-vhd": ["vhd"], "application/x-virtualbox-vmdk": ["vmdk"], "application/x-wais-source": ["src"], "application/x-web-app-manifest+json": ["webapp"], "application/x-x509-ca-cert": ["der", "crt", "pem"], "application/x-xfig": ["fig"], "application/x-xliff+xml": ["*xlf"], "application/x-xpinstall": ["xpi"], "application/x-xz": ["xz"], "application/x-zmachine": ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"], "audio/vnd.dece.audio": ["uva", "uvva"], "audio/vnd.digital-winds": ["eol"], "audio/vnd.dra": ["dra"], "audio/vnd.dts": ["dts"], "audio/vnd.dts.hd": ["dtshd"], "audio/vnd.lucent.voice": ["lvp"], "audio/vnd.ms-playready.media.pya": ["pya"], "audio/vnd.nuera.ecelp4800": ["ecelp4800"], "audio/vnd.nuera.ecelp7470": ["ecelp7470"], "audio/vnd.nuera.ecelp9600": ["ecelp9600"], "audio/vnd.rip": ["rip"], "audio/x-aac": ["aac"], "audio/x-aiff": ["aif", "aiff", "aifc"], "audio/x-caf": ["caf"], "audio/x-flac": ["flac"], "audio/x-m4a": ["*m4a"], "audio/x-matroska": ["mka"], "audio/x-mpegurl": ["m3u"], "audio/x-ms-wax": ["wax"], "audio/x-ms-wma": ["wma"], "audio/x-pn-realaudio": ["ram", "ra"], "audio/x-pn-realaudio-plugin": ["rmp"], "audio/x-realaudio": ["*ra"], "audio/x-wav": ["*wav"], "chemical/x-cdx": ["cdx"], "chemical/x-cif": ["cif"], "chemical/x-cmdf": ["cmdf"], "chemical/x-cml": ["cml"], "chemical/x-csml": ["csml"], "chemical/x-xyz": ["xyz"], "image/prs.btif": ["btif"], "image/prs.pti": ["pti"], "image/vnd.adobe.photoshop": ["psd"], "image/vnd.airzip.accelerator.azv": ["azv"], "image/vnd.dece.graphic": ["uvi", "uvvi", "uvg", "uvvg"], "image/vnd.djvu": ["djvu", "djv"], "image/vnd.dvb.subtitle": ["*sub"], "image/vnd.dwg": ["dwg"], "image/vnd.dxf": ["dxf"], "image/vnd.fastbidsheet": ["fbs"], "image/vnd.fpx": ["fpx"], "image/vnd.fst": ["fst"], "image/vnd.fujixerox.edmics-mmr": ["mmr"], "image/vnd.fujixerox.edmics-rlc": ["rlc"], "image/vnd.microsoft.icon": ["ico"], "image/vnd.ms-dds": ["dds"], "image/vnd.ms-modi": ["mdi"], "image/vnd.ms-photo": ["wdp"], "image/vnd.net-fpx": ["npx"], "image/vnd.pco.b16": ["b16"], "image/vnd.tencent.tap": ["tap"], "image/vnd.valve.source.texture": ["vtf"], "image/vnd.wap.wbmp": ["wbmp"], "image/vnd.xiff": ["xif"], "image/vnd.zbrush.pcx": ["pcx"], "image/x-3ds": ["3ds"], "image/x-cmu-raster": ["ras"], "image/x-cmx": ["cmx"], "image/x-freehand": ["fh", "fhc", "fh4", "fh5", "fh7"], "image/x-icon": ["*ico"], "image/x-jng": ["jng"], "image/x-mrsid-image": ["sid"], "image/x-ms-bmp": ["*bmp"], "image/x-pcx": ["*pcx"], "image/x-pict": ["pic", "pct"], "image/x-portable-anymap": ["pnm"], "image/x-portable-bitmap": ["pbm"], "image/x-portable-graymap": ["pgm"], "image/x-portable-pixmap": ["ppm"], "image/x-rgb": ["rgb"], "image/x-tga": ["tga"], "image/x-xbitmap": ["xbm"], "image/x-xpixmap": ["xpm"], "image/x-xwindowdump": ["xwd"], "message/vnd.wfa.wsc": ["wsc"], "model/vnd.collada+xml": ["dae"], "model/vnd.dwf": ["dwf"], "model/vnd.gdl": ["gdl"], "model/vnd.gtw": ["gtw"], "model/vnd.mts": ["mts"], "model/vnd.opengex": ["ogex"], "model/vnd.parasolid.transmit.binary": ["x_b"], "model/vnd.parasolid.transmit.text": ["x_t"], "model/vnd.sap.vds": ["vds"], "model/vnd.usdz+zip": ["usdz"], "model/vnd.valve.source.compiled-map": ["bsp"], "model/vnd.vtu": ["vtu"], "text/prs.lines.tag": ["dsc"], "text/vnd.curl": ["curl"], "text/vnd.curl.dcurl": ["dcurl"], "text/vnd.curl.mcurl": ["mcurl"], "text/vnd.curl.scurl": ["scurl"], "text/vnd.dvb.subtitle": ["sub"], "text/vnd.fly": ["fly"], "text/vnd.fmi.flexstor": ["flx"], "text/vnd.graphviz": ["gv"], "text/vnd.in3d.3dml": ["3dml"], "text/vnd.in3d.spot": ["spot"], "text/vnd.sun.j2me.app-descriptor": ["jad"], "text/vnd.wap.wml": ["wml"], "text/vnd.wap.wmlscript": ["wmls"], "text/x-asm": ["s", "asm"], "text/x-c": ["c", "cc", "cxx", "cpp", "h", "hh", "dic"], "text/x-component": ["htc"], "text/x-fortran": ["f", "for", "f77", "f90"], "text/x-handlebars-template": ["hbs"], "text/x-java-source": ["java"], "text/x-lua": ["lua"], "text/x-markdown": ["mkd"], "text/x-nfo": ["nfo"], "text/x-opml": ["opml"], "text/x-org": ["*org"], "text/x-pascal": ["p", "pas"], "text/x-processing": ["pde"], "text/x-sass": ["sass"], "text/x-scss": ["scss"], "text/x-setext": ["etx"], "text/x-sfv": ["sfv"], "text/x-suse-ymp": ["ymp"], "text/x-uuencode": ["uu"], "text/x-vcalendar": ["vcs"], "text/x-vcard": ["vcf"], "video/vnd.dece.hd": ["uvh", "uvvh"], "video/vnd.dece.mobile": ["uvm", "uvvm"], "video/vnd.dece.pd": ["uvp", "uvvp"], "video/vnd.dece.sd": ["uvs", "uvvs"], "video/vnd.dece.video": ["uvv", "uvvv"], "video/vnd.dvb.file": ["dvb"], "video/vnd.fvt": ["fvt"], "video/vnd.mpegurl": ["mxu", "m4u"], "video/vnd.ms-playready.media.pyv": ["pyv"], "video/vnd.uvvu.mp4": ["uvu", "uvvu"], "video/vnd.vivo": ["viv"], "video/x-f4v": ["f4v"], "video/x-fli": ["fli"], "video/x-flv": ["flv"], "video/x-m4v": ["m4v"], "video/x-matroska": ["mkv", "mk3d", "mks"], "video/x-mng": ["mng"], "video/x-ms-asf": ["asf", "asx"], "video/x-ms-vob": ["vob"], "video/x-ms-wm": ["wm"], "video/x-ms-wmv": ["wmv"], "video/x-ms-wmx": ["wmx"], "video/x-ms-wvx": ["wvx"], "video/x-msvideo": ["avi"], "video/x-sgi-movie": ["movie"], "video/x-smv": ["smv"], "x-conference/x-cooltalk": ["ice"] };
  }
});

// node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/index.js
var require_mime = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+mime@3.0.0/node_modules/mime/index.js"(exports, module2) {
    "use strict";
    var Mime = require_Mime();
    module2.exports = new Mime(require_standard(), require_other());
  }
});

// node_modules/.pnpm/registry.npmmirror.com+sener-static@0.0.13/node_modules/sener-static/dist/sener-static.cjs.js
var require_sener_static_cjs = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+sener-static@0.0.13/node_modules/sener-static/dist/sener-static.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var path = require("path");
    var senerTypes = require_sener_types_cjs();
    var fs = require("fs");
    var events = require("events");
    var http = require("http");
    var url = require("url");
    var MIME = require_mime();
    function _interopDefaultLegacy(t) {
      return t && "object" == typeof t && "default" in t ? t : { default: t };
    }
    var path__default = _interopDefaultLegacy(path);
    var fs__default = _interopDefaultLegacy(fs);
    var events__default = _interopDefaultLegacy(events);
    var http__default = _interopDefaultLegacy(http);
    var url__default = _interopDefaultLegacy(url);
    var MIME__default = _interopDefaultLegacy(MIME);
    function _regeneratorRuntime() {
      _regeneratorRuntime = function() {
        return a;
      };
      var a = {}, t = Object.prototype, u = t.hasOwnProperty, c = Object.defineProperty || function(t2, e2, r2) {
        t2[e2] = r2.value;
      }, e = "function" == typeof Symbol ? Symbol : {}, n = e.iterator || "@@iterator", r = e.asyncIterator || "@@asyncIterator", o = e.toStringTag || "@@toStringTag";
      function i(t2, e2, r2) {
        return Object.defineProperty(t2, e2, { value: r2, enumerable: true, configurable: true, writable: true }), t2[e2];
      }
      try {
        i({}, "");
      } catch (t2) {
        i = function(t3, e2, r2) {
          return t3[e2] = r2;
        };
      }
      function s(t2, e2, r2, n2) {
        var o2, i2, a2, s2, e2 = e2 && e2.prototype instanceof h ? e2 : h, e2 = Object.create(e2.prototype), n2 = new b(n2 || []);
        return c(e2, "_invoke", { value: (o2 = t2, i2 = r2, a2 = n2, s2 = "suspendedStart", function(t3, e3) {
          if ("executing" === s2)
            throw new Error("Generator is already running");
          if ("completed" === s2) {
            if ("throw" === t3)
              throw e3;
            return x();
          }
          for (a2.method = t3, a2.arg = e3; ; ) {
            var r3 = a2.delegate;
            if (r3) {
              r3 = function t4(e4, r4) {
                var n3 = r4.method, o3 = e4.iterator[n3];
                if (void 0 === o3)
                  return r4.delegate = null, "throw" === n3 && e4.iterator.return && (r4.method = "return", r4.arg = void 0, t4(e4, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), l;
                n3 = f(o3, e4.iterator, r4.arg);
                if ("throw" === n3.type)
                  return r4.method = "throw", r4.arg = n3.arg, r4.delegate = null, l;
                o3 = n3.arg;
                return o3 ? o3.done ? (r4[e4.resultName] = o3.value, r4.next = e4.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = void 0), r4.delegate = null, l) : o3 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, l);
              }(r3, a2);
              if (r3) {
                if (r3 === l)
                  continue;
                return r3;
              }
            }
            if ("next" === a2.method)
              a2.sent = a2._sent = a2.arg;
            else if ("throw" === a2.method) {
              if ("suspendedStart" === s2)
                throw s2 = "completed", a2.arg;
              a2.dispatchException(a2.arg);
            } else
              "return" === a2.method && a2.abrupt("return", a2.arg);
            s2 = "executing";
            r3 = f(o2, i2, a2);
            if ("normal" === r3.type) {
              if (s2 = a2.done ? "completed" : "suspendedYield", r3.arg === l)
                continue;
              return { value: r3.arg, done: a2.done };
            }
            "throw" === r3.type && (s2 = "completed", a2.method = "throw", a2.arg = r3.arg);
          }
        }) }), e2;
      }
      function f(t2, e2, r2) {
        try {
          return { type: "normal", arg: t2.call(e2, r2) };
        } catch (t3) {
          return { type: "throw", arg: t3 };
        }
      }
      a.wrap = s;
      var l = {};
      function h() {
      }
      function p() {
      }
      function d() {
      }
      var e = {}, y = (i(e, n, function() {
        return this;
      }), Object.getPrototypeOf), y = y && y(y(E([]))), v = (y && y !== t && u.call(y, n) && (e = y), d.prototype = h.prototype = Object.create(e));
      function _(t2) {
        ["next", "throw", "return"].forEach(function(e2) {
          i(t2, e2, function(t3) {
            return this._invoke(e2, t3);
          });
        });
      }
      function g(a2, s2) {
        var e2;
        c(this, "_invoke", { value: function(r2, n2) {
          function t2() {
            return new s2(function(t3, e3) {
              !function e4(t4, r3, n3, o2) {
                var i2, t4 = f(a2[t4], a2, r3);
                if ("throw" !== t4.type)
                  return (r3 = (i2 = t4.arg).value) && "object" == typeof r3 && u.call(r3, "__await") ? s2.resolve(r3.__await).then(function(t5) {
                    e4("next", t5, n3, o2);
                  }, function(t5) {
                    e4("throw", t5, n3, o2);
                  }) : s2.resolve(r3).then(function(t5) {
                    i2.value = t5, n3(i2);
                  }, function(t5) {
                    return e4("throw", t5, n3, o2);
                  });
                o2(t4.arg);
              }(r2, n2, t3, e3);
            });
          }
          return e2 = e2 ? e2.then(t2, t2) : t2();
        } });
      }
      function m(t2) {
        var e2 = { tryLoc: t2[0] };
        1 in t2 && (e2.catchLoc = t2[1]), 2 in t2 && (e2.finallyLoc = t2[2], e2.afterLoc = t2[3]), this.tryEntries.push(e2);
      }
      function w(t2) {
        var e2 = t2.completion || {};
        e2.type = "normal", delete e2.arg, t2.completion = e2;
      }
      function b(t2) {
        this.tryEntries = [{ tryLoc: "root" }], t2.forEach(m, this), this.reset(true);
      }
      function E(e2) {
        if (e2) {
          var r2, t2 = e2[n];
          if (t2)
            return t2.call(e2);
          if ("function" == typeof e2.next)
            return e2;
          if (!isNaN(e2.length))
            return r2 = -1, (t2 = function t3() {
              for (; ++r2 < e2.length; )
                if (u.call(e2, r2))
                  return t3.value = e2[r2], t3.done = false, t3;
              return t3.value = void 0, t3.done = true, t3;
            }).next = t2;
        }
        return { next: x };
      }
      function x() {
        return { value: void 0, done: true };
      }
      return c(v, "constructor", { value: p.prototype = d, configurable: true }), c(d, "constructor", { value: p, configurable: true }), p.displayName = i(d, o, "GeneratorFunction"), a.isGeneratorFunction = function(t2) {
        t2 = "function" == typeof t2 && t2.constructor;
        return !!t2 && (t2 === p || "GeneratorFunction" === (t2.displayName || t2.name));
      }, a.mark = function(t2) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(t2, d) : (t2.__proto__ = d, i(t2, o, "GeneratorFunction")), t2.prototype = Object.create(v), t2;
      }, a.awrap = function(t2) {
        return { __await: t2 };
      }, _(g.prototype), i(g.prototype, r, function() {
        return this;
      }), a.AsyncIterator = g, a.async = function(t2, e2, r2, n2, o2) {
        void 0 === o2 && (o2 = Promise);
        var i2 = new g(s(t2, e2, r2, n2), o2);
        return a.isGeneratorFunction(e2) ? i2 : i2.next().then(function(t3) {
          return t3.done ? t3.value : i2.next();
        });
      }, _(v), i(v, o, "Generator"), i(v, n, function() {
        return this;
      }), i(v, "toString", function() {
        return "[object Generator]";
      }), a.keys = function(t2) {
        var e2, r2 = Object(t2), n2 = [];
        for (e2 in r2)
          n2.push(e2);
        return n2.reverse(), function t3() {
          for (; n2.length; ) {
            var e3 = n2.pop();
            if (e3 in r2)
              return t3.value = e3, t3.done = false, t3;
          }
          return t3.done = true, t3;
        };
      }, a.values = E, b.prototype = { constructor: b, reset: function(t2) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(w), !t2)
          for (var e2 in this)
            "t" === e2.charAt(0) && u.call(this, e2) && !isNaN(+e2.slice(1)) && (this[e2] = void 0);
      }, stop: function() {
        this.done = true;
        var t2 = this.tryEntries[0].completion;
        if ("throw" === t2.type)
          throw t2.arg;
        return this.rval;
      }, dispatchException: function(r2) {
        if (this.done)
          throw r2;
        var n2 = this;
        function t2(t3, e3) {
          return i2.type = "throw", i2.arg = r2, n2.next = t3, e3 && (n2.method = "next", n2.arg = void 0), !!e3;
        }
        for (var e2 = this.tryEntries.length - 1; 0 <= e2; --e2) {
          var o2 = this.tryEntries[e2], i2 = o2.completion;
          if ("root" === o2.tryLoc)
            return t2("end");
          if (o2.tryLoc <= this.prev) {
            var a2 = u.call(o2, "catchLoc"), s2 = u.call(o2, "finallyLoc");
            if (a2 && s2) {
              if (this.prev < o2.catchLoc)
                return t2(o2.catchLoc, true);
              if (this.prev < o2.finallyLoc)
                return t2(o2.finallyLoc);
            } else if (a2) {
              if (this.prev < o2.catchLoc)
                return t2(o2.catchLoc, true);
            } else {
              if (!s2)
                throw new Error("try statement without catch or finally");
              if (this.prev < o2.finallyLoc)
                return t2(o2.finallyLoc);
            }
          }
        }
      }, abrupt: function(t2, e2) {
        for (var r2 = this.tryEntries.length - 1; 0 <= r2; --r2) {
          var n2 = this.tryEntries[r2];
          if (n2.tryLoc <= this.prev && u.call(n2, "finallyLoc") && this.prev < n2.finallyLoc) {
            var o2 = n2;
            break;
          }
        }
        var i2 = (o2 = o2 && ("break" === t2 || "continue" === t2) && o2.tryLoc <= e2 && e2 <= o2.finallyLoc ? null : o2) ? o2.completion : {};
        return i2.type = t2, i2.arg = e2, o2 ? (this.method = "next", this.next = o2.finallyLoc, l) : this.complete(i2);
      }, complete: function(t2, e2) {
        if ("throw" === t2.type)
          throw t2.arg;
        return "break" === t2.type || "continue" === t2.type ? this.next = t2.arg : "return" === t2.type ? (this.rval = this.arg = t2.arg, this.method = "return", this.next = "end") : "normal" === t2.type && e2 && (this.next = e2), l;
      }, finish: function(t2) {
        for (var e2 = this.tryEntries.length - 1; 0 <= e2; --e2) {
          var r2 = this.tryEntries[e2];
          if (r2.finallyLoc === t2)
            return this.complete(r2.completion, r2.afterLoc), w(r2), l;
        }
      }, catch: function(t2) {
        for (var e2 = this.tryEntries.length - 1; 0 <= e2; --e2) {
          var r2, n2, o2 = this.tryEntries[e2];
          if (o2.tryLoc === t2)
            return "throw" === (r2 = o2.completion).type && (n2 = r2.arg, w(o2)), n2;
        }
        throw new Error("illegal catch attempt");
      }, delegateYield: function(t2, e2, r2) {
        return this.delegate = { iterator: E(t2), resultName: e2, nextLoc: r2 }, "next" === this.method && (this.arg = void 0), l;
      } }, a;
    }
    function _typeof(t) {
      return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t2) {
        return typeof t2;
      } : function(t2) {
        return t2 && "function" == typeof Symbol && t2.constructor === Symbol && t2 !== Symbol.prototype ? "symbol" : typeof t2;
      })(t);
    }
    function _classCallCheck(t, e) {
      if (!(t instanceof e))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(t, e) {
      for (var r = 0; r < e.length; r++) {
        var n = e[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(t, _toPropertyKey(n.key), n);
      }
    }
    function _createClass(t, e, r) {
      return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), Object.defineProperty(t, "prototype", { writable: false }), t;
    }
    function _inherits(t, e) {
      if ("function" != typeof e && null !== e)
        throw new TypeError("Super expression must either be null or a function");
      t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e && _setPrototypeOf(t, e);
    }
    function _getPrototypeOf(t) {
      return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
        return t2.__proto__ || Object.getPrototypeOf(t2);
      })(t);
    }
    function _setPrototypeOf(t, e) {
      return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e2) {
        return t2.__proto__ = e2, t2;
      })(t, e);
    }
    function _isNativeReflectConstruct() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (t) {
        return false;
      }
    }
    function _assertThisInitialized(t) {
      if (void 0 === t)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return t;
    }
    function _possibleConstructorReturn(t, e) {
      if (e && ("object" == typeof e || "function" == typeof e))
        return e;
      if (void 0 !== e)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(t);
    }
    function _createSuper(r) {
      var n = _isNativeReflectConstruct();
      return function() {
        var t, e = _getPrototypeOf(r);
        return _possibleConstructorReturn(this, n ? (t = _getPrototypeOf(this).constructor, Reflect.construct(e, arguments, t)) : e.apply(this, arguments));
      };
    }
    function _toPrimitive(t, e) {
      if ("object" != typeof t || null === t)
        return t;
      var r = t[Symbol.toPrimitive];
      if (void 0 === r)
        return ("string" === e ? String : Number)(t);
      r = r.call(t, e || "default");
      if ("object" != typeof r)
        return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    function _toPropertyKey(t) {
      t = _toPrimitive(t, "string");
      return "symbol" == typeof t ? t : String(t);
    }
    function __awaiter(t, a, s, u) {
      return new (s = s || Promise)(function(r, e) {
        function n(t2) {
          try {
            i(u.next(t2));
          } catch (t3) {
            e(t3);
          }
        }
        function o(t2) {
          try {
            i(u.throw(t2));
          } catch (t3) {
            e(t3);
          }
        }
        function i(t2) {
          var e2;
          t2.done ? r(t2.value) : ((e2 = t2.value) instanceof s ? e2 : new s(function(t3) {
            t3(e2);
          })).then(n, o);
        }
        i((u = u.apply(t, a || [])).next());
      });
    }
    function mstat(t, e, r) {
      var n = e.slice(0), o = [], e = n.shift();
      e ? fs__default.default.stat(path__default.default.join(t, e), function(t2, e2) {
        t2 ? r(t2) : mstat(n, o.concat([e2]));
      }) : r(null, { size: o.reduce(function(t2, e2) {
        return t2 + e2.size;
      }, 0), mtime: o.reduce(function(t2, e2) {
        return t2 > e2.mtime ? t2 : e2.mtime;
      }, 0), ino: o.reduce(function(t2, e2) {
        return t2 + e2.ino;
      }, 0) });
    }
    var mime = MIME__default.default;
    var version = [0, 7, 9];
    var StaticServer = function() {
      function n(t, e) {
        for (var r in _classCallCheck(this, n), t && "object" === _typeof(t) && (this.options = t, this.root = null), this.root = path__default.default.normalize(path__default.default.resolve(t || ".")), this.options = e || {}, this.cache = 3600, this.defaultHeaders = {}, this.options.headers = this.options.headers || {}, this.options.indexFile = this.options.indexFile || "index.html", "cache" in this.options && ("number" == typeof this.options.cache ? this.cache = this.options.cache : this.options.cache || (this.cache = false)), "serverInfo" in this.options ? this.serverInfo = (null == (t = this.options.serverInfo) ? void 0 : t.toString()) || "" : this.serverInfo = "node-static/" + version.join("."), this.defaultHeaders.server = this.serverInfo, false !== this.cache && (this.defaultHeaders["cache-control"] = "max-age=" + this.cache), this.defaultHeaders)
          this.options.headers[r] = this.options.headers[r] || this.defaultHeaders[r];
      }
      return _createClass(n, [{ key: "serveDir", value: function(n2, o, i, a) {
        var r = path__default.default.join(n2, this.options.indexFile || ""), s = this;
        fs__default.default.stat(r, function(t, e) {
          if (t)
            fs__default.default.readFile(path__default.default.join(n2, "index.json"), function(t2, e2) {
              if (t2)
                return a(404, {});
              var r2, t2 = JSON.parse(e2);
              r2 = t2.files, mstat(n2, r2, function(t3, e3) {
                if (t3)
                  return a(404, {});
                s.respond(n2, 200, {}, r2, e3, o, i, a);
              });
            });
          else {
            t = decodeURI(url__default.default.parse(null != (t = null == o ? void 0 : o.url) ? t : "").pathname || "");
            if (t.length && "/" !== t.charAt(t.length - 1))
              return a(301, { Location: t + "/" });
            s.respond("", 200, {}, [r], e, o, i, a);
          }
        });
      } }, { key: "serveFile", value: function(r, n2, o, i, a) {
        var s = this, u = new events__default.default.EventEmitter();
        return r = this.resolve(r), fs__default.default.stat(r, function(t, e) {
          if (t)
            return u.emit("error", t);
          s.respond("", n2, o, [r], e, i, a, function(t2, e2) {
            s.finish(t2, e2, i, a, u);
          });
        }), u;
      } }, { key: "finish", value: function(t, e, r, n2, o, i) {
        var a = { status: t, headers: e, message: http__default.default.STATUS_CODES[t] };
        e.server = this.serverInfo, !t || 400 <= t ? i ? i(a) : 0 < o.listeners("error").length ? o.emit("error", a) : (n2.writeHead(t, e), n2.end()) : (200 === t && "GET" === r.method || (n2.writeHead(t, e), n2.end()), i && i(null, a), o.emit("success", a));
      } }, { key: "servePath", value: function(r, n2, o, i, a, s) {
        var u = this, t = new events__default.default.EventEmitter();
        return 0 === (r = this.resolve(r)).indexOf(u.root || "") ? fs__default.default.stat(r, function(t2, e) {
          t2 ? s(404, {}) : e.isFile() ? u.respond("", n2, o, [r], e, i, a, s) : e.isDirectory() ? u.serveDir(r, i, a, s) : s(400, {});
        }) : s(403, {}), t;
      } }, { key: "resolve", value: function(t) {
        return path__default.default.resolve(path__default.default.join(this.root || "", t));
      } }, { key: "serve", value: function(r, n2, o) {
        function e(t2, e2) {
          i.finish(t2, e2, r, n2, a, o);
        }
        var i = this, a = new events__default.default.EventEmitter(), t = "";
        try {
          t = decodeURI(url__default.default.parse(r.url).pathname);
        } catch (t2) {
          return process.nextTick(function() {
            return e(400, {});
          });
        }
        if (process.nextTick(function() {
          i.servePath(t, 200, {}, r, n2, e).on("success", function(t2) {
            a.emit("success", t2);
          }).on("error", function(t2) {
            a.emit("error", t2);
          });
        }), !o)
          return a;
      } }, { key: "gzipOk", value: function(t, e) {
        var r = this.options.gzip;
        return !(!r || !("boolean" == typeof r || e && r instanceof RegExp && r.test(e)) || !(r = t.headers["accept-encoding"])) && 0 <= r.indexOf("gzip");
      } }, { key: "respondGzip", value: function(r, n2, o, i, a, s, u, c, f) {
        var l, h = this;
        1 == a.length && this.gzipOk(u, o) ? (l = a[0] + ".gz", fs__default.default.stat(l, function(t, e) {
          !t && e.isFile() && (t = i.Vary, i.Vary = (t && "Accept-Encoding" != t ? t + ", " : "") + "Accept-Encoding", i["Content-Encoding"] = "gzip", s.size = e.size, a = [l]), h.respondNoGzip(r, n2, o, i, a, s, u, c, f);
        })) : h.respondNoGzip(r, n2, o, i, a, s, u, c, f);
      } }, { key: "parseByteRange", value: function(t, e) {
        var r, n2 = { from: 0, to: 0, valid: false }, t = t.headers.range;
        return t && (0 == t.indexOf("bytes=") && -1 == t.indexOf(",") ? (r = t.substr("bytes=".length).split("-"), n2.from = parseInt(r[0]), n2.to = parseInt(r[1]), isNaN(n2.from) && !isNaN(n2.to) ? (n2.from = e.size - n2.to, n2.to = e.size ? e.size - 1 : 0) : !isNaN(n2.from) && isNaN(n2.to) && (n2.to = e.size ? e.size - 1 : 0), !isNaN(n2.from) && n2.to && 0 <= n2.from && n2.from < n2.to ? n2.valid = true : console.warn("Request contains invalid range header: ", r)) : console.warn("Request contains unsupported range header: ", t)), n2;
      } }, { key: "respondNoGzip", value: function(t, e, r, n2, o, i, a, s, u) {
        var c, f, l, h = Date.parse(i.mtime), t = t || o[0], p = {}, d = a.headers["if-none-match"], y = Date.parse(a.headers["if-modified-since"] || ""), v = 0, _ = i.size, g = this.parseByteRange(a, i);
        for (c in 1 == o.length && g.valid && (g.to < _ ? (v = g.from, _ = g.to - g.from + 1, e = 206, p["Content-Range"] = "bytes " + g.from + "-" + g.to + "/" + i.size) : (g.valid = false, console.warn("Range request exceeds file boundaries, goes until byte no", g.to, "against file size of", _, "bytes"))), !g.valid && a.headers.range && console.error(new Error("Range request present but invalid, might serve whole file instead")), this.options.headers)
          p[c] = this.options.headers[c];
        for (f in n2)
          p[f] = n2[f];
        for (l in p.Etag = JSON.stringify([i.ino, i.size, h].join("-")), p.Date = new Date().toUTCString(), p["Last-Modified"] = new Date(i.mtime).toUTCString(), p["Content-Type"] = r, p["Content-Length"] = _, n2)
          p[l] = n2[l];
        !y && !d || d && d !== p.Etag || y && !(h <= y) ? (s.writeHead(e, p), this.stream(t, o, _, v, s, function(t2) {
          if (t2)
            return u(500, {});
          u(e, p);
        })) : (["Content-Encoding", "Content-Language", "Content-Length", "Content-Location", "Content-MD5", "Content-Range", "Content-Type", "Expires", "Last-Modified"].forEach(function(t2) {
          delete p[t2];
        }), u(304, p));
      } }, { key: "respond", value: function(t, e, r, n2, o, i, a, s) {
        var u = r["Content-Type"] || mime.getType(n2[0]) || "application/octet-stream";
        this.options.gzip ? this.respondGzip(t, e, u, r, n2, o, i, a, s) : this.respondNoGzip(t, e, u, r, n2, o, i, a, s);
      } }, { key: "stream", value: function(o, t, i, a, s, u) {
        !function t2(e, r) {
          var n2 = e.shift();
          n2 ? (n2 = path__default.default.resolve(n2) === path__default.default.normalize(n2) ? n2 : path__default.default.join(o || ".", n2), fs__default.default.createReadStream(n2, { flags: "r", mode: 666, start: a, end: a + (i ? i - 1 : 0) }).on("data", function(t3) {
            t3.length && r < i && 0 <= r && (r += t3.length);
          }).on("close", function() {
            t2(e, r);
          }).on("error", function(t3) {
            u(t3), console.error(t3);
          }).pipe(s, { end: false })) : (s.end(), u(null, r));
        }(t.slice(0), 0);
      } }]), n;
    }();
    var Static2 = function() {
      _inherits(n, senerTypes.MiddleWare);
      var r = _createSuper(n);
      function n() {
        var t, e = (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).dir, e = void 0 === e ? "./public" : e;
        return _classCallCheck(this, n), (t = r.call(this)).name = "static", t.dir = path__default.default.resolve(process.cwd(), e), t.static = new StaticServer(t.dir), t;
      }
      return _createClass(n, [{ key: "request", value: function(n2) {
        return __awaiter(this, void 0, void 0, _regeneratorRuntime().mark(function t() {
          var r2 = this;
          return _regeneratorRuntime().wrap(function(t2) {
            for (; ; )
              switch (t2.prev = t2.next) {
                case 0:
                  return t2.abrupt("return", new Promise(function(e) {
                    r2.static.serve(n2.request, n2.response).once("success", function() {
                      e(senerTypes.MiddleWareReturn.Return);
                    }).on("error", function(t3) {
                      404 === t3.status ? e(senerTypes.MiddleWareReturn.Continue) : (n2.sendResponse({ data: t3, statusCode: t3.status, headers: t3.headers }), e(senerTypes.MiddleWareReturn.Return));
                    });
                  }));
                case 1:
                case "end":
                  return t2.stop();
              }
          }, t);
        }));
      } }]), n;
    }();
    exports.Static = Static2;
  }
});

// node_modules/.pnpm/registry.npmmirror.com+sener@0.0.13/node_modules/sener/dist/sener.cjs.js
var require_sener_cjs = __commonJS({
  "node_modules/.pnpm/registry.npmmirror.com+sener@0.0.13/node_modules/sener/dist/sener.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var http = require("http");
    var senerTypes = require_sener_types_cjs();
    function _interopDefaultLegacy(e) {
      return e && "object" == typeof e && "default" in e ? e : { default: e };
    }
    var http__default = _interopDefaultLegacy(http);
    function _regeneratorRuntime() {
      _regeneratorRuntime = function() {
        return i;
      };
      var i = {}, e = Object.prototype, u = e.hasOwnProperty, c = Object.defineProperty || function(e2, t2, r2) {
        e2[t2] = r2.value;
      }, t = "function" == typeof Symbol ? Symbol : {}, n = t.iterator || "@@iterator", r = t.asyncIterator || "@@asyncIterator", o = t.toStringTag || "@@toStringTag";
      function a(e2, t2, r2) {
        return Object.defineProperty(e2, t2, { value: r2, enumerable: true, configurable: true, writable: true }), e2[t2];
      }
      try {
        a({}, "");
      } catch (e2) {
        a = function(e3, t2, r2) {
          return e3[t2] = r2;
        };
      }
      function s(e2, t2, r2, n2) {
        var o2, a2, i2, s2, t2 = t2 && t2.prototype instanceof p ? t2 : p, t2 = Object.create(t2.prototype), n2 = new w(n2 || []);
        return c(t2, "_invoke", { value: (o2 = e2, a2 = r2, i2 = n2, s2 = "suspendedStart", function(e3, t3) {
          if ("executing" === s2)
            throw new Error("Generator is already running");
          if ("completed" === s2) {
            if ("throw" === e3)
              throw t3;
            return k();
          }
          for (i2.method = e3, i2.arg = t3; ; ) {
            var r3 = i2.delegate;
            if (r3) {
              r3 = function e4(t4, r4) {
                var n3 = r4.method, o3 = t4.iterator[n3];
                if (void 0 === o3)
                  return r4.delegate = null, "throw" === n3 && t4.iterator.return && (r4.method = "return", r4.arg = void 0, e4(t4, r4), "throw" === r4.method) || "return" !== n3 && (r4.method = "throw", r4.arg = new TypeError("The iterator does not provide a '" + n3 + "' method")), f;
                n3 = l(o3, t4.iterator, r4.arg);
                if ("throw" === n3.type)
                  return r4.method = "throw", r4.arg = n3.arg, r4.delegate = null, f;
                o3 = n3.arg;
                return o3 ? o3.done ? (r4[t4.resultName] = o3.value, r4.next = t4.nextLoc, "return" !== r4.method && (r4.method = "next", r4.arg = void 0), r4.delegate = null, f) : o3 : (r4.method = "throw", r4.arg = new TypeError("iterator result is not an object"), r4.delegate = null, f);
              }(r3, i2);
              if (r3) {
                if (r3 === f)
                  continue;
                return r3;
              }
            }
            if ("next" === i2.method)
              i2.sent = i2._sent = i2.arg;
            else if ("throw" === i2.method) {
              if ("suspendedStart" === s2)
                throw s2 = "completed", i2.arg;
              i2.dispatchException(i2.arg);
            } else
              "return" === i2.method && i2.abrupt("return", i2.arg);
            s2 = "executing";
            r3 = l(o2, a2, i2);
            if ("normal" === r3.type) {
              if (s2 = i2.done ? "completed" : "suspendedYield", r3.arg === f)
                continue;
              return { value: r3.arg, done: i2.done };
            }
            "throw" === r3.type && (s2 = "completed", i2.method = "throw", i2.arg = r3.arg);
          }
        }) }), t2;
      }
      function l(e2, t2, r2) {
        try {
          return { type: "normal", arg: e2.call(t2, r2) };
        } catch (e3) {
          return { type: "throw", arg: e3 };
        }
      }
      i.wrap = s;
      var f = {};
      function p() {
      }
      function d() {
      }
      function h() {
      }
      var t = {}, y = (a(t, n, function() {
        return this;
      }), Object.getPrototypeOf), y = y && y(y(x([]))), v = (y && y !== e && u.call(y, n) && (t = y), h.prototype = p.prototype = Object.create(t));
      function b(e2) {
        ["next", "throw", "return"].forEach(function(t2) {
          a(e2, t2, function(e3) {
            return this._invoke(t2, e3);
          });
        });
      }
      function m(i2, s2) {
        var t2;
        c(this, "_invoke", { value: function(r2, n2) {
          function e2() {
            return new s2(function(e3, t3) {
              !function t4(e4, r3, n3, o2) {
                var a2, e4 = l(i2[e4], i2, r3);
                if ("throw" !== e4.type)
                  return (r3 = (a2 = e4.arg).value) && "object" == typeof r3 && u.call(r3, "__await") ? s2.resolve(r3.__await).then(function(e5) {
                    t4("next", e5, n3, o2);
                  }, function(e5) {
                    t4("throw", e5, n3, o2);
                  }) : s2.resolve(r3).then(function(e5) {
                    a2.value = e5, n3(a2);
                  }, function(e5) {
                    return t4("throw", e5, n3, o2);
                  });
                o2(e4.arg);
              }(r2, n2, e3, t3);
            });
          }
          return t2 = t2 ? t2.then(e2, e2) : e2();
        } });
      }
      function g(e2) {
        var t2 = { tryLoc: e2[0] };
        1 in e2 && (t2.catchLoc = e2[1]), 2 in e2 && (t2.finallyLoc = e2[2], t2.afterLoc = e2[3]), this.tryEntries.push(t2);
      }
      function _(e2) {
        var t2 = e2.completion || {};
        t2.type = "normal", delete t2.arg, e2.completion = t2;
      }
      function w(e2) {
        this.tryEntries = [{ tryLoc: "root" }], e2.forEach(g, this), this.reset(true);
      }
      function x(t2) {
        if (t2) {
          var r2, e2 = t2[n];
          if (e2)
            return e2.call(t2);
          if ("function" == typeof t2.next)
            return t2;
          if (!isNaN(t2.length))
            return r2 = -1, (e2 = function e3() {
              for (; ++r2 < t2.length; )
                if (u.call(t2, r2))
                  return e3.value = t2[r2], e3.done = false, e3;
              return e3.value = void 0, e3.done = true, e3;
            }).next = e2;
        }
        return { next: k };
      }
      function k() {
        return { value: void 0, done: true };
      }
      return c(v, "constructor", { value: d.prototype = h, configurable: true }), c(h, "constructor", { value: d, configurable: true }), d.displayName = a(h, o, "GeneratorFunction"), i.isGeneratorFunction = function(e2) {
        e2 = "function" == typeof e2 && e2.constructor;
        return !!e2 && (e2 === d || "GeneratorFunction" === (e2.displayName || e2.name));
      }, i.mark = function(e2) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(e2, h) : (e2.__proto__ = h, a(e2, o, "GeneratorFunction")), e2.prototype = Object.create(v), e2;
      }, i.awrap = function(e2) {
        return { __await: e2 };
      }, b(m.prototype), a(m.prototype, r, function() {
        return this;
      }), i.AsyncIterator = m, i.async = function(e2, t2, r2, n2, o2) {
        void 0 === o2 && (o2 = Promise);
        var a2 = new m(s(e2, t2, r2, n2), o2);
        return i.isGeneratorFunction(t2) ? a2 : a2.next().then(function(e3) {
          return e3.done ? e3.value : a2.next();
        });
      }, b(v), a(v, o, "Generator"), a(v, n, function() {
        return this;
      }), a(v, "toString", function() {
        return "[object Generator]";
      }), i.keys = function(e2) {
        var t2, r2 = Object(e2), n2 = [];
        for (t2 in r2)
          n2.push(t2);
        return n2.reverse(), function e3() {
          for (; n2.length; ) {
            var t3 = n2.pop();
            if (t3 in r2)
              return e3.value = t3, e3.done = false, e3;
          }
          return e3.done = true, e3;
        };
      }, i.values = x, w.prototype = { constructor: w, reset: function(e2) {
        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = false, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(_), !e2)
          for (var t2 in this)
            "t" === t2.charAt(0) && u.call(this, t2) && !isNaN(+t2.slice(1)) && (this[t2] = void 0);
      }, stop: function() {
        this.done = true;
        var e2 = this.tryEntries[0].completion;
        if ("throw" === e2.type)
          throw e2.arg;
        return this.rval;
      }, dispatchException: function(r2) {
        if (this.done)
          throw r2;
        var n2 = this;
        function e2(e3, t3) {
          return a2.type = "throw", a2.arg = r2, n2.next = e3, t3 && (n2.method = "next", n2.arg = void 0), !!t3;
        }
        for (var t2 = this.tryEntries.length - 1; 0 <= t2; --t2) {
          var o2 = this.tryEntries[t2], a2 = o2.completion;
          if ("root" === o2.tryLoc)
            return e2("end");
          if (o2.tryLoc <= this.prev) {
            var i2 = u.call(o2, "catchLoc"), s2 = u.call(o2, "finallyLoc");
            if (i2 && s2) {
              if (this.prev < o2.catchLoc)
                return e2(o2.catchLoc, true);
              if (this.prev < o2.finallyLoc)
                return e2(o2.finallyLoc);
            } else if (i2) {
              if (this.prev < o2.catchLoc)
                return e2(o2.catchLoc, true);
            } else {
              if (!s2)
                throw new Error("try statement without catch or finally");
              if (this.prev < o2.finallyLoc)
                return e2(o2.finallyLoc);
            }
          }
        }
      }, abrupt: function(e2, t2) {
        for (var r2 = this.tryEntries.length - 1; 0 <= r2; --r2) {
          var n2 = this.tryEntries[r2];
          if (n2.tryLoc <= this.prev && u.call(n2, "finallyLoc") && this.prev < n2.finallyLoc) {
            var o2 = n2;
            break;
          }
        }
        var a2 = (o2 = o2 && ("break" === e2 || "continue" === e2) && o2.tryLoc <= t2 && t2 <= o2.finallyLoc ? null : o2) ? o2.completion : {};
        return a2.type = e2, a2.arg = t2, o2 ? (this.method = "next", this.next = o2.finallyLoc, f) : this.complete(a2);
      }, complete: function(e2, t2) {
        if ("throw" === e2.type)
          throw e2.arg;
        return "break" === e2.type || "continue" === e2.type ? this.next = e2.arg : "return" === e2.type ? (this.rval = this.arg = e2.arg, this.method = "return", this.next = "end") : "normal" === e2.type && t2 && (this.next = t2), f;
      }, finish: function(e2) {
        for (var t2 = this.tryEntries.length - 1; 0 <= t2; --t2) {
          var r2 = this.tryEntries[t2];
          if (r2.finallyLoc === e2)
            return this.complete(r2.completion, r2.afterLoc), _(r2), f;
        }
      }, catch: function(e2) {
        for (var t2 = this.tryEntries.length - 1; 0 <= t2; --t2) {
          var r2, n2, o2 = this.tryEntries[t2];
          if (o2.tryLoc === e2)
            return "throw" === (r2 = o2.completion).type && (n2 = r2.arg, _(o2)), n2;
        }
        throw new Error("illegal catch attempt");
      }, delegateYield: function(e2, t2, r2) {
        return this.delegate = { iterator: x(e2), resultName: t2, nextLoc: r2 }, "next" === this.method && (this.arg = void 0), f;
      } }, i;
    }
    function _typeof(e) {
      return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
        return typeof e2;
      } : function(e2) {
        return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
      })(e);
    }
    function _classCallCheck(e, t) {
      if (!(e instanceof t))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties(e, t) {
      for (var r = 0; r < t.length; r++) {
        var n = t[r];
        n.enumerable = n.enumerable || false, n.configurable = true, "value" in n && (n.writable = true), Object.defineProperty(e, _toPropertyKey(n.key), n);
      }
    }
    function _createClass(e, t, r) {
      return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), Object.defineProperty(e, "prototype", { writable: false }), e;
    }
    function _inherits(e, t) {
      if ("function" != typeof t && null !== t)
        throw new TypeError("Super expression must either be null or a function");
      e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: true, configurable: true } }), Object.defineProperty(e, "prototype", { writable: false }), t && _setPrototypeOf(e, t);
    }
    function _getPrototypeOf(e) {
      return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e2) {
        return e2.__proto__ || Object.getPrototypeOf(e2);
      })(e);
    }
    function _setPrototypeOf(e, t) {
      return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e2, t2) {
        return e2.__proto__ = t2, e2;
      })(e, t);
    }
    function _isNativeReflectConstruct() {
      if ("undefined" == typeof Reflect || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if ("function" == typeof Proxy)
        return true;
      try {
        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        })), true;
      } catch (e) {
        return false;
      }
    }
    function _assertThisInitialized(e) {
      if (void 0 === e)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return e;
    }
    function _possibleConstructorReturn(e, t) {
      if (t && ("object" == typeof t || "function" == typeof t))
        return t;
      if (void 0 !== t)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(e);
    }
    function _createSuper(r) {
      var n = _isNativeReflectConstruct();
      return function() {
        var e, t = _getPrototypeOf(r);
        return _possibleConstructorReturn(this, n ? (e = _getPrototypeOf(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments));
      };
    }
    function _toConsumableArray(e) {
      return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread();
    }
    function _arrayWithoutHoles(e) {
      if (Array.isArray(e))
        return _arrayLikeToArray(e);
    }
    function _iterableToArray(e) {
      if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
        return Array.from(e);
    }
    function _unsupportedIterableToArray(e, t) {
      var r;
      if (e)
        return "string" == typeof e ? _arrayLikeToArray(e, t) : "Map" === (r = "Object" === (r = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : r) || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(e, t) : void 0;
    }
    function _arrayLikeToArray(e, t) {
      (null == t || t > e.length) && (t = e.length);
      for (var r = 0, n = new Array(t); r < t; r++)
        n[r] = e[r];
      return n;
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _createForOfIteratorHelper(e, t) {
      var r, n, o, a, i = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
      if (i)
        return n = !(r = true), { s: function() {
          i = i.call(e);
        }, n: function() {
          var e2 = i.next();
          return r = e2.done, e2;
        }, e: function(e2) {
          n = true, o = e2;
        }, f: function() {
          try {
            r || null == i.return || i.return();
          } finally {
            if (n)
              throw o;
          }
        } };
      if (Array.isArray(e) || (i = _unsupportedIterableToArray(e)) || t && e && "number" == typeof e.length)
        return i && (e = i), a = 0, { s: t = function() {
        }, n: function() {
          return a >= e.length ? { done: true } : { done: false, value: e[a++] };
        }, e: function(e2) {
          throw e2;
        }, f: t };
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toPrimitive(e, t) {
      if ("object" != typeof e || null === e)
        return e;
      var r = e[Symbol.toPrimitive];
      if (void 0 === r)
        return ("string" === t ? String : Number)(e);
      r = r.call(e, t || "default");
      if ("object" != typeof r)
        return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    function _toPropertyKey(e) {
      e = _toPrimitive(e, "string");
      return "symbol" == typeof e ? e : String(e);
    }
    function __awaiter(e, i, s, u) {
      return new (s = s || Promise)(function(r, t) {
        function n(e2) {
          try {
            a(u.next(e2));
          } catch (e3) {
            t(e3);
          }
        }
        function o(e2) {
          try {
            a(u.throw(e2));
          } catch (e3) {
            t(e3);
          }
        }
        function a(e2) {
          var t2;
          e2.done ? r(e2.value) : ((t2 = e2.value) instanceof s ? t2 : new s(function(e3) {
            e3(t2);
          })).then(n, o);
        }
        a((u = u.apply(e, i || [])).next());
      });
    }
    var MiddleWareManager = function() {
      function e() {
        _classCallCheck(this, e), this.middlewares = [];
      }
      return _createClass(e, [{ key: "use", value: function(e2) {
        if (this.middlewares.includes(e2))
          return console.log("middleware ".concat(e2.name, " is used"));
        this.middlewares.push(e2);
      } }, { key: "remove", value: function(e2) {
        e2 = this.middlewares.indexOf(e2);
        -1 !== e2 && this.middlewares.slice(e2, 1);
      } }, { key: "applyEnter", value: function(o) {
        return __awaiter(this, void 0, void 0, _regeneratorRuntime().mark(function e2() {
          var t, r, n;
          return _regeneratorRuntime().wrap(function(e3) {
            for (; ; )
              switch (e3.prev = e3.next) {
                case 0:
                  t = _createForOfIteratorHelper(this.middlewares), e3.prev = 1, t.s();
                case 3:
                  if ((r = t.n()).done) {
                    e3.next = 19;
                    break;
                  }
                  if ((r = r.value).enter) {
                    e3.next = 7;
                    break;
                  }
                  return e3.abrupt("continue", 17);
                case 7:
                  return e3.next = 9, r.enter(o);
                case 9:
                  if ((n = e3.sent) && n !== senerTypes.MiddleWareReturn.Continue) {
                    e3.next = 12;
                    break;
                  }
                  return e3.abrupt("continue", 17);
                case 12:
                  if (n === senerTypes.MiddleWareReturn.Return)
                    return e3.abrupt("return", false);
                  e3.next = 16;
                  break;
                case 16:
                  return e3.abrupt("break", 19);
                case 17:
                  e3.next = 3;
                  break;
                case 19:
                  e3.next = 24;
                  break;
                case 21:
                  e3.prev = 21, e3.t0 = e3.catch(1), t.e(e3.t0);
                case 24:
                  return e3.prev = 24, t.f(), e3.finish(24);
                case 27:
                  return e3.abrupt("return", true);
                case 28:
                case "end":
                  return e3.stop();
              }
          }, e2, this, [[1, 21, 24, 27]]);
        }));
      } }, { key: "applyRequest", value: function(o) {
        return __awaiter(this, void 0, void 0, _regeneratorRuntime().mark(function e2() {
          var t, r, n;
          return _regeneratorRuntime().wrap(function(e3) {
            for (; ; )
              switch (e3.prev = e3.next) {
                case 0:
                  t = _createForOfIteratorHelper(this.middlewares), e3.prev = 1, t.s();
                case 3:
                  if ((r = t.n()).done) {
                    e3.next = 23;
                    break;
                  }
                  if ((r = r.value).request) {
                    e3.next = 7;
                    break;
                  }
                  return e3.abrupt("continue", 21);
                case 7:
                  return e3.next = 9, r.request(o);
                case 9:
                  if ((n = e3.sent) && n !== senerTypes.MiddleWareReturn.Continue) {
                    e3.next = 12;
                    break;
                  }
                  return e3.abrupt("continue", 21);
                case 12:
                  "object" !== _typeof(n) ? e3.next = 16 : (Object.assign(o, n), e3.next = 21);
                  break;
                case 16:
                  if (n === senerTypes.MiddleWareReturn.Return)
                    return e3.abrupt("return", null);
                  e3.next = 20;
                  break;
                case 20:
                  return e3.abrupt("break", 23);
                case 21:
                  e3.next = 3;
                  break;
                case 23:
                  e3.next = 28;
                  break;
                case 25:
                  e3.prev = 25, e3.t0 = e3.catch(1), t.e(e3.t0);
                case 28:
                  return e3.prev = 28, t.f(), e3.finish(28);
                case 31:
                  return e3.abrupt("return", o);
                case 32:
                case "end":
                  return e3.stop();
              }
          }, e2, this, [[1, 25, 28, 31]]);
        }));
      } }, { key: "applyResponse", value: function(a) {
        return __awaiter(this, void 0, void 0, _regeneratorRuntime().mark(function e2() {
          var t, r, n, o;
          return _regeneratorRuntime().wrap(function(e3) {
            for (; ; )
              switch (e3.prev = e3.next) {
                case 0:
                  t = this.middlewares, r = t.length - 1;
                case 2:
                  if (!(0 <= r)) {
                    e3.next = 23;
                    break;
                  }
                  if ((n = t[r]).response) {
                    e3.next = 6;
                    break;
                  }
                  return e3.abrupt("continue", 20);
                case 6:
                  return e3.next = 8, n.response(a);
                case 8:
                  if ((o = e3.sent) && o !== senerTypes.MiddleWareReturn.Continue) {
                    e3.next = 11;
                    break;
                  }
                  return e3.abrupt("continue", 20);
                case 11:
                  "object" !== _typeof(o) ? e3.next = 15 : (Object.assign(a, o), e3.next = 20);
                  break;
                case 15:
                  if (o === senerTypes.MiddleWareReturn.Return)
                    return e3.abrupt("return", null);
                  e3.next = 19;
                  break;
                case 19:
                  return e3.abrupt("break", 23);
                case 20:
                  r--, e3.next = 2;
                  break;
                case 23:
                  return e3.abrupt("return", a);
                case 24:
                case "end":
                  return e3.stop();
              }
          }, e2, this);
        }));
      } }]), e;
    }();
    var Server = function() {
      function t(e) {
        e = e.port;
        _classCallCheck(this, t), this.helper = {}, this.port = 9e3, e && (this.port = e), this.middleware = new MiddleWareManager(), this.initServer();
      }
      return _createClass(t, [{ key: "injectMiddleWare", value: function(e) {
        e.helper && (this.helper = Object.assign(this.helper, e.helper()));
      } }, { key: "parseHttpInfo", value: function(a) {
        return __awaiter(this, void 0, void 0, _regeneratorRuntime().mark(function e() {
          var t2, r, n, o;
          return _regeneratorRuntime().wrap(function(e2) {
            for (; ; )
              switch (e2.prev = e2.next) {
                case 0:
                  return t2 = a.headers, r = a.method, o = senerTypes.praseUrl(a.url), n = o.url, o = o.query, e2.t0 = Object, e2.t1 = { requestHeaders: t2, method: r, url: n, query: o }, e2.next = 6, this.parseBody(a);
                case 6:
                  return e2.t2 = e2.sent, e2.abrupt("return", e2.t0.assign.call(e2.t0, e2.t1, e2.t2));
                case 8:
                case "end":
                  return e2.stop();
              }
          }, e, this);
        }));
      } }, { key: "parseBody", value: function(a) {
        return new Promise(function(n) {
          var o = [];
          (a.headers["content-type"] || "").includes("multipart/form-data") ? n({ body: {}, buffer: null }) : a.on("error", function(e) {
            console.error(e);
          }).on("data", function(e) {
            o.push(e);
          }).on("end", function() {
            var e = Buffer.concat(o), t2 = {};
            if (null != (r = a.headers["content-type"]) && r.includes("application/json")) {
              var r = e.toString();
              try {
                t2 = JSON.parse(r);
              } catch (e2) {
                t2 = senerTypes.parseParam(r);
              }
            }
            n({ body: t2, buffer: e });
          });
        });
      } }, { key: "initServer", value: function() {
        var e = this;
        console.log("Sener Runing Succeed On: http://localhost:".concat(this.port)), this.server = http__default.default.createServer(function(s, u) {
          return __awaiter(e, void 0, void 0, _regeneratorRuntime().mark(function e2() {
            var t2, r, n, o, a, i = this;
            return _regeneratorRuntime().wrap(function(e3) {
              for (; ; )
                switch (e3.prev = e3.next) {
                  case 0:
                    return t2 = { send404: function(e4) {
                      i.send404(u, e4);
                    }, sendJson: function(e4, t3) {
                      i.sendData({ response: u, data: e4, statusCode: t3 });
                    }, sendResponse: function(e4) {
                      i.sendData(Object.assign({ response: u }, e4));
                    }, sendText: function(e4, t3) {
                      i.sendText(u, e4, t3);
                    }, sendHtml: function(e4) {
                      i.sendHtml(u, e4);
                    } }, r = Object.assign(Object.assign({ request: s, response: u }, this.helper), t2), e3.next = 4, this.middleware.applyEnter(r);
                  case 4:
                    if (e3.sent) {
                      e3.next = 6;
                      break;
                    }
                    return e3.abrupt("return");
                  case 6:
                    if ("OPTIONS" === s.method)
                      return e3.abrupt("return", t2.sendResponse({ statusCode: 200 }));
                    e3.next = 8;
                    break;
                  case 8:
                    return e3.next = 10, this.parseHttpInfo(s);
                  case 10:
                    return n = e3.sent, e3.next = 13, this.middleware.applyRequest(Object.assign(Object.assign({}, n), r));
                  case 13:
                    if (o = e3.sent) {
                      e3.next = 16;
                      break;
                    }
                    return e3.abrupt("return");
                  case 16:
                    return e3.next = 18, this.middleware.applyResponse(Object.assign({ data: {}, statusCode: 200 }, o));
                  case 18:
                    if (a = e3.sent) {
                      e3.next = 21;
                      break;
                    }
                    return e3.abrupt("return");
                  case 21:
                    this.sendData(Object.assign({ response: u }, a));
                  case 22:
                  case "end":
                    return e3.stop();
                }
            }, e2, this);
          }));
        }).listen(this.port);
      } }, { key: "sendHtml", value: function(e, t2) {
        this.sendData({ response: e, data: t2, statusCode: 200, headers: { "Content-Type": "text/html; charset=utf-8" } });
      } }, { key: "send404", value: function(e) {
        this.sendText(e, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "Page not found", 404);
      } }, { key: "sendText", value: function(e, t2) {
        this.sendData({ response: e, data: t2, statusCode: 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 200, headers: { "Content-Type": "text/plain; charset=utf-8" } });
      } }, { key: "sendData", value: function(e) {
        var t2, r = e.response, n = e.data, n = void 0 === n ? "" : n, o = e.statusCode, o = void 0 === o ? 200 : o, e = e.headers, a = void 0 === e ? { "Content-Type": "application/json;charset=UTF-8" } : e;
        for (t2 in a)
          r.setHeader(t2, a[t2]);
        if ("string" != typeof n)
          try {
            n = JSON.stringify(n);
          } catch (e2) {
            return r.statusCode = 200, r.write(JSON.stringify({ error: e2.message, success: false })), void r.end();
          }
        r.statusCode = o, r.write(n), r.end();
      } }]), t;
    }();
    var Sener2 = function() {
      function r() {
        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, t = e.port, e = e.middlewares, e = void 0 === e ? [] : e;
        _classCallCheck(this, r), this.server = new Server({ port: t }), this.use.apply(this, _toConsumableArray(e));
      }
      return _createClass(r, [{ key: "use", value: function() {
        for (var e = arguments.length, t = new Array(e), r2 = 0; r2 < e; r2++)
          t[r2] = arguments[r2];
        for (var n = 0, o = t; n < o.length; n++) {
          var a = o[n];
          a && (this.server.middleware.use(a), this.server.injectMiddleWare(a));
        }
      } }, { key: "remove", value: function(e) {
        this.server.middleware.remove(e);
      } }]), r;
    }();
    var REG = /^(post|get|put|delete):/;
    var Router2 = function() {
      _inherits(a, senerTypes.MiddleWare);
      var o = _createSuper(a);
      function a(e) {
        var t, r;
        for (r in _classCallCheck(this, a), (t = o.call(this)).routers = {}, e) {
          var n = t.fillUrl(r);
          t.routers[n] = e[r];
        }
        return t;
      }
      return _createClass(a, [{ key: "fillUrl", value: function(e) {
        return e = e.trim(), e = (e = REG.test(e) ? e : "get:".concat(e)).endsWith("/") ? e : "".concat(e, "/");
      } }, { key: "buildRouteKey", value: function(e, t) {
        return e.endsWith("/") || (e = "".concat(e, "/")), "".concat((t || "get").toLocaleLowerCase(), ":").concat(e);
      } }, { key: "request", value: function(e) {
        var t = e.url, r = e.method, e = e.send404, r = this.buildRouteKey(t, r);
        return this.routers[r] ? senerTypes.MiddleWareReturn.Continue : (e("Page not found: ".concat(t)), senerTypes.MiddleWareReturn.Return);
      } }, { key: "response", value: function(n) {
        var e, o2 = this, t = this.buildRouteKey(n.url, n.method), t = this.routers[t];
        return t ? (e = 0, n.index = function() {
          return e++;
        }, n.route = function(e2, t2) {
          var r = o2.routers[o2.fillUrl(e2)];
          return r ? r(t2 ? Object.assign({}, n, t2) : n) : (n.send404("Route Dismiss: ".concat(e2)), senerTypes.MiddleWareReturn.Return);
        }, t(n)) : (n.send404("Page not found: ".concat(n.url)), senerTypes.MiddleWareReturn.Return);
      } }]), a;
    }();
    var Cors2 = function() {
      _inherits(n, senerTypes.MiddleWare);
      var r = _createSuper(n);
      function n() {
        var e, t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : { "Access-Control-Allow-Origin": "*", "Access-Control-Allow-Methods": "POST, GET, PUT, DELETE, OPTIONS", "Access-Control-Allow-Headers": "*" };
        return _classCallCheck(this, n), (e = r.call(this)).headers = t, e;
      }
      return _createClass(n, [{ key: "enter", value: function(e) {
        var t = e.request, e = e.sendResponse;
        if ("OPTIONS" === t.method)
          return e({ statusCode: 200, headers: this.headers }), senerTypes.MiddleWareReturn.Return;
      } }, { key: "response", value: function(e) {
        e.headers || (e.headers = { "Content-Type": "application/json;charset=UTF-8" }), Object.assign(e.headers, this.headers);
      } }]), n;
    }();
    exports.Cors = Cors2, exports.Router = Router2, exports.Sener = Sener2, Object.keys(senerTypes).forEach(function(e) {
      "default" === e || exports.hasOwnProperty(e) || Object.defineProperty(exports, e, { enumerable: true, get: function() {
        return senerTypes[e];
      } });
    });
  }
});

// src/server.ts
var import_sener_log = __toESM(require_sener_log_cjs());
var import_sener_config = __toESM(require_sener_config_cjs());
var import_sener_json = __toESM(require_sener_json_cjs());
var import_sener_form = __toESM(require_sener_form_cjs());
var import_sener_static = __toESM(require_sener_static_cjs());
var import_sener3 = __toESM(require_sener_cjs());

// src/router/index.ts
var import_sener = __toESM(require_sener_cjs());

// src/router/user.ts
var user_default = {
  "get:/user": ({ query }) => {
    return { data: { name: query.name } };
  },
  "get:/user/regist": ({ query, write }) => {
    const { data, save } = write("user");
    data.push({ name: query.name });
    save();
    return { data: "success" };
  }
};

// src/router/comment.ts
var comment_default = {
  "get:/comment": ({ query }) => {
    return { data: { list: [], query } };
  }
};

// src/router/index.ts
var router_default = new import_sener.Router(__spreadValues(__spreadValues({}, user_default), comment_default));

// src/middleware/custom.ts
var import_sener2 = __toESM(require_sener_cjs());
var custom_default = class extends import_sener2.MiddleWare {
};

// src/middleware/index.ts
var middleware_default = [
  new custom_default()
];

// src/server.ts
new import_sener3.Sener({
  port: 9e3,
  middlewares: [
    new import_sener_log.Log(),
    new import_sener_config.Config(),
    new import_sener_json.Json(),
    new import_sener_form.Form(),
    new import_sener3.Cors(),
    new import_sener_static.Static(),
    router_default,
    ...middleware_default
  ]
});
//# sourceMappingURL=bundle.min.js.map
